
tuxpaint.c,32729
# define VIDEO_BPP 35,1118
# define VIDEO_BPP 39,1169
# define VIDEO_BPP 46,1361
#define PRINTMETHOD_PS	55,1535
#define MAX_PATH 60,1748
# define LOW_QUALITY_THUMBNAILS68,1837
# define LOW_QUALITY_STAMP_OUTLINE69,1869
# define NO_PROMPT_SHADOWS70,1904
# define USE_HWSURFACE71,1931
#define GAMMA_CORRECTED_THUMBNAILS81,2226
#define COLORSEL_DISABLE 91,2537
#define COLORSEL_ENABLE 92,2611
#define COLORSEL_CLOBBER 93,2671
#define COLORSEL_REFRESH 94,2730
#define COLORSEL_CLOBBER_WIPE 95,2799
#define COLORSEL_FORCE_REDRAW 96,2885
#define TPAINT_AMASK 101,3168
#define TPAINT_AMASK 103,3206
typedef struct scaleparams109,3334
  unsigned numer,111,3363
  unsigned numer, denom;111,3363
} scaleparams;112,3388
static scaleparams scaletable[scaletable114,3404
#define HARD_MIN_STAMP_SIZE 148,4167
#define HARD_MAX_STAMP_SIZE 149,4224
#define MIN_STAMP_SIZE 151,4300
#define MAX_STAMP_SIZE 152,4378
#define SCALE_LIKE_STAMP(155,4529
#define CUR_STAMP_W 158,4847
#define CUR_STAMP_H 159,4901
#define REPEAT_SPEED 162,4957
#define CURSOR_BLINK_SPEED 163,5024
#define _GNU_SOURCE	167,5115
char *strcasestr(strcasestr190,5743
#define y1 219,6359
#undef y1221,6396
#define FALSE 228,6510
#define TRUE 229,6530
#define gettext_noop(237,6643
#define gettext(242,6701
#define M_PI 247,6769
typedef struct safer_dirent268,7091
  dev_t d_dev;270,7121
  dev_t d_pdev;271,7136
  ino_t d_ino;272,7152
  ino_t d_pino;273,7167
  unsigned short d_reclen;274,7183
  char d_name[d_name275,7210
} safer_dirent;276,7239
#define dirent 277,7255
#define mkdir(314,7770
#define _MATRIX_WHITE_BACK 357,9156
#define MATRIX_WHITE_BACK 358,9203
#define _MATRIX_BLACK_BACK 359,9248
#define MATRIX_BLACK_BACK 360,9295
#define _MATRIX_TRANSPARENT_BACK_BLACK_LETTER 361,9340
#define MATRIX_TRANSPARENT_BACK_BLACK_LETTER 362,9425
#define _MATRIX_TRANSPARENT_BACK_WHITE_LETTER 363,9508
#define MATRIX_TRANSPARENT_BACK_WHITE_LETTER 364,9593
#define _MATRIX_TRANSPARENT_BACK_TRANSPARENT_LETTER 365,9676
#define MATRIX_TRANSPARENT_BACK_TRANSPARENT_LETTER 366,9773
#define FNAME_EXTENSION 427,11540
#define SDL_GetRGBA(470,12372
#define SDL_GetRGB(477,12627
#define SDL_MapRGBA(484,12843
#define SDL_MapRGB(493,13125
#define fmemopen_alternative 505,13526
#undef fmemopen509,13592
FILE * my_fmemopen(513,13684
#define fmemopen 545,14176
  SAVE_OVER_PROMPT,552,14222
  SAVE_OVER_ALWAYS,553,14242
  SAVE_OVER_NO554,14262
  ALTPRINT_MOD,559,14288
  ALTPRINT_ALWAYS,560,14304
  ALTPRINT_NEVER561,14323
  STARTER_OUTLINE,567,14352
  STARTER_SCENE568,14371
  LABEL_OFF,573,14398
  LABEL_LABEL,574,14411
  LABEL_SELECT 575,14426
static int NUM_COLORS;583,14544
static Uint8 * * color_hexes;584,14567
static char * * color_names;585,14597
static void debug(590,14657
static const char *getfilename(getfilename600,14801
  Uint8 rows,624,15203
  Uint8 rows, cols;624,15203
} grid_dims;625,15223
static SDL_Rect r_canvas;628,15322
static SDL_Rect r_tools;629,15373
static SDL_Rect r_sfx;630,15422
static SDL_Rect r_toolopt;631,15445
static SDL_Rect r_colors;632,15498
static SDL_Rect r_ttools;633,15550
static SDL_Rect r_tcolors;634,15626
static SDL_Rect r_ttoolopt;635,15706
static SDL_Rect r_tuxarea;636,15783
static SDL_Rect r_label;637,15827
static int button_w;639,15853
static int button_h;640,15888
static int color_button_w;642,15924
static int color_button_h;643,15964
static grid_dims gd_tools;647,16117
static grid_dims gd_sfx;648,16158
static grid_dims gd_toolopt;649,16183
static grid_dims gd_colors;651,16274
#define HEIGHTOFFSET 653,16318
#define TOOLOFFSET 654,16375
#define PROMPTOFFSETX 655,16418
#define PROMPTOFFSETY 656,16465
#define THUMB_W 658,16507
#define THUMB_H 659,16554
static int WINDOW_WIDTH 662,16630
static int WINDOW_HEIGHT 663,16661
static int WINDOW_WIDTH 666,16764
static int WINDOW_HEIGHT 667,16796
static int WINDOW_WIDTH 669,16834
static int WINDOW_HEIGHT 670,16865
static void setup_normal_screen_layout(677,17053
static void debug_rect(760,19160
#define DR(765,19279
static void debug_dims(767,19313
#define DD(772,19419
static void print_layout(774,19453
#undef DD792,19828
#undef DR793,19838
static void setup_screen_layout(796,19856
static SDL_Surface *screen;screen805,20050
static SDL_Surface *canvas;canvas806,20078
static SDL_Surface *label;label807,20106
static SDL_Surface *save_canvas;save_canvas808,20133
static SDL_Surface *canvas_back;canvas_back809,20166
static SDL_Surface *img_starter,img_starter810,20199
static SDL_Surface *img_starter, *img_starter_bkgd;img_starter_bkgd810,20199
static void update_screen(813,20324
static void update_screen_rect(859,20974
static int hit_test(864,21074
#define HIT(870,21263
static int grid_hit_wh(881,21574
#define GRIDHIT_WH(888,21818
#define GRIDHIT_SURF(893,21993
static int grid_hit_gd(898,22256
#define GRIDHIT_GD(915,22815
static int disable_label 920,23006
static int disable_label;922,23042
static void update_canvas_ex(925,23076
static void update_canvas(959,23863
static int disable_screensaver;967,23982
static int fullscreen 969,24031
static int fullscreen;971,24064
static int native_screensize;973,24094
static int grab_input;974,24124
static int rotate_orientation;975,24147
static int disable_print;977,24179
static int print_delay;978,24205
static int use_print_config 979,24229
static int alt_print_command_default 980,24262
static int want_alt_printcommand;981,24315
static int wheely 983,24350
static int keymouse;984,24373
static int mouse_x;985,24394
static int mouse_y;986,24414
static int no_button_distinction;987,24434
static int mousekey_up;988,24468
static int mousekey_down;989,24492
static int mousekey_left;990,24518
static int mousekey_right;991,24544
static int button_down;992,24571
static int scrolling;993,24595
static int promptless_save 995,24618
static int disable_quit;996,24665
static int noshortcuts;998,24691
static int disable_save;999,24715
static int ok_to_use_lockfile 1000,24740
static int start_blank;1001,24775
static int autosave_on_quit;1002,24799
static int dont_do_xor;1004,24829
static int dont_load_stamps;1005,24853
static int mirrorstamps;1006,24882
static int disable_stamp_controls;1007,24907
static int stamp_size_override 1008,24942
static int simple_shapes 1011,24997
static int simple_shapes;1013,25033
static int only_uppercase;1015,25066
static int disable_magic_controls;1017,25094
static int starter_mirrored;1019,25130
static int starter_flipped;1020,25159
static int starter_personal;1021,25187
static int template_personal;1022,25216
static int starter_modified;1023,25246
static Uint8 canvas_color_r,1025,25276
static Uint8 canvas_color_r, canvas_color_g,1025,25276
static Uint8 canvas_color_r, canvas_color_g, canvas_color_b;1025,25276
static Uint8 * touched;1026,25337
static int shape_radius;1028,25362
typedef struct label_node1031,25467
  unsigned int save_texttool_len;1033,25495
  wchar_t save_texttool_str[save_texttool_str1034,25529
  SDL_Color save_color;1035,25563
  int save_width;1036,25587
  int save_height;1037,25605
  Uint16 save_x;1038,25624
  Uint16 save_y;1039,25641
  int save_cur_font;1040,25658
  char * save_font_type;1041,25679
  int save_text_state;1042,25704
  unsigned save_text_size;1043,25727
  int save_undoid;1044,25754
  int is_enabled;1045,25773
  struct label_node* disables;1046,25791
  struct label_node* next_to_up_label_node;1047,25822
  struct label_node* next_to_down_label_node;1048,25866
  SDL_Surface* label_node_surface;1049,25912
} label_node;1050,25947
static struct label_node* start_label_node;1053,25963
static struct label_node* current_label_node;1054,26007
static struct label_node* first_label_node_in_redo_stack;1055,26053
static struct label_node* label_node_to_edit;1056,26111
static struct label_node* highlighted_label_node;1057,26157
static unsigned int select_texttool_len;1059,26208
static wchar_t select_texttool_str[select_texttool_str1060,26249
static unsigned select_color;1061,26290
static int select_width;1062,26320
static int select_height;1063,26345
static Uint16 select_x;1064,26371
static Uint16 select_y;1065,26395
static int select_cur_font;1066,26419
static int select_text_state;1067,26447
static unsigned select_text_size;1068,26477
static int coming_from_undo_or_redo 1069,26511
typedef struct magic_funcs_s 1107,27631
  int (*get_tool_count)get_tool_count1108,27662
  char * (*get_name)get_name1109,27700
  SDL_Surface * (*get_icon)get_icon1110,27740
  char * (*get_description)get_description1111,27787
  int (*requires_colors)requires_colors1112,27839
  int (*modes)modes1113,27883
  void (*set_color)set_color1114,27917
  int (*init)init1115,27972
  Uint32 (*api_version)api_version1116,28000
  void (*shutdown)shutdown1117,28031
  void (*click)click1118,28064
  void (*drag)drag1119,28156
  void (*release)release1120,28252
  void (*switchin)switchin1121,28341
  void (*switchout)switchout1122,28414
} magic_funcs_t;1123,28488
typedef struct magic_s 1126,28507
  int place;1127,28532
  int handle_idx;1128,28545
  int idx;1129,28652
  int mode;1130,28754
  int avail_modes;1131,28807
  int colors;1132,28872
  char * name;1133,28926
  char * tip[tip1134,28966
  SDL_Surface * img_icon;1135,29046
  SDL_Surface * img_name;1136,29072
} magic_t;1137,29098
static int num_plugin_files;1142,29152
static void * magic_handle[magic_handle1143,29232
static magic_funcs_t magic_funcs[magic_funcs1144,29344
static magic_t magics[magics1146,29427
static int num_magics;1147,29455
  MAGIC_PLACE_GLOBAL,1150,29573
  MAGIC_PLACE_LOCAL,1151,29595
  MAGIC_PLACE_ALLUSERS,1153,29633
  NUM_MAGIC_PLACES1155,29664
static magic_api *magic_api_struct;magic_api_struct1158,29687
static const char *printcommand printcommand1170,30229
static const char *altprintcommand altprintcommand1171,30277
static const char *papersize;papersize1172,30331
  UNDO_STARTER_NONE,1191,30835
  UNDO_STARTER_MIRRORED,1192,30856
  UNDO_STARTER_FLIPPED1193,30881
#define NUM_UNDO_BUFS 1196,30908
static SDL_Surface *undo_bufs[undo_bufs1197,30933
static int undo_starters[undo_starters1198,30979
static int cur_undo,1199,31020
static int cur_undo, oldest_undo,1199,31020
static int cur_undo, oldest_undo, newest_undo;1199,31020
static int text_undo[text_undo1200,31067
static int have_to_rec_label_node;1201,31104
static int have_to_rec_label_node_back;1202,31139
static SDL_Surface *img_title,img_title1204,31180
static SDL_Surface *img_title, *img_title_credits,img_title_credits1204,31180
static SDL_Surface *img_title, *img_title_credits, *img_title_tuxpaint;img_title_tuxpaint1204,31180
static SDL_Surface *img_btn_up,img_btn_up1205,31252
static SDL_Surface *img_btn_up, *img_btn_down,img_btn_down1205,31252
static SDL_Surface *img_btn_up, *img_btn_down, *img_btn_off;img_btn_off1205,31252
static SDL_Surface *img_btnsm_up,img_btnsm_up1206,31313
static SDL_Surface *img_btnsm_up, *img_btnsm_off;img_btnsm_off1206,31313
static SDL_Surface *img_prev,img_prev1207,31363
static SDL_Surface *img_prev, *img_next;img_next1207,31363
static SDL_Surface *img_mirror,img_mirror1208,31404
static SDL_Surface *img_mirror, *img_flip;img_flip1208,31404
static SDL_Surface *img_dead40x40;img_dead40x401209,31447
static SDL_Surface *img_black,img_black1210,31482
static SDL_Surface *img_black, *img_grey;img_grey1210,31482
static SDL_Surface *img_yes,img_yes1211,31524
static SDL_Surface *img_yes, *img_no;img_no1211,31524
static SDL_Surface *img_sfx,img_sfx1212,31562
static SDL_Surface *img_sfx, *img_speak;img_speak1212,31562
static SDL_Surface *img_open,img_open1213,31603
static SDL_Surface *img_open, *img_erase,img_erase1213,31603
static SDL_Surface *img_open, *img_erase, *img_back,img_back1213,31603
static SDL_Surface *img_open, *img_erase, *img_back, *img_trash;img_trash1213,31603
static SDL_Surface *img_slideshow,img_slideshow1214,31668
static SDL_Surface *img_slideshow, *img_play,img_play1214,31668
static SDL_Surface *img_slideshow, *img_play, *img_select_digits;img_select_digits1214,31668
static SDL_Surface *img_printer,img_printer1215,31734
static SDL_Surface *img_printer, *img_printer_wait;img_printer_wait1215,31734
static SDL_Surface *img_save_over,img_save_over1216,31786
static SDL_Surface *img_save_over, *img_popup_arrow;img_popup_arrow1216,31786
static SDL_Surface *img_cursor_up,img_cursor_up1217,31839
static SDL_Surface *img_cursor_up, *img_cursor_down;img_cursor_down1217,31839
static SDL_Surface *img_cursor_starter_up,img_cursor_starter_up1218,31892
static SDL_Surface *img_cursor_starter_up, *img_cursor_starter_down;img_cursor_starter_down1218,31892
static SDL_Surface *img_scroll_up,img_scroll_up1219,31961
static SDL_Surface *img_scroll_up, *img_scroll_down;img_scroll_down1219,31961
static SDL_Surface *img_scroll_up_off,img_scroll_up_off1220,32014
static SDL_Surface *img_scroll_up_off, *img_scroll_down_off;img_scroll_down_off1220,32014
static SDL_Surface *img_grow,img_grow1221,32075
static SDL_Surface *img_grow, *img_shrink;img_shrink1221,32075
static SDL_Surface *img_magic_paint,img_magic_paint1222,32118
static SDL_Surface *img_magic_paint, *img_magic_fullscreen;img_magic_fullscreen1222,32118
static SDL_Surface *img_bold,img_bold1223,32178
static SDL_Surface *img_bold, *img_italic;img_italic1223,32178
static SDL_Surface *img_label,img_label1224,32221
static SDL_Surface *img_label, *img_label_select;img_label_select1224,32221
static SDL_Surface *img_color_picker,img_color_picker1225,32271
static SDL_Surface *img_color_picker, *img_color_picker_thumb,img_color_picker_thumb1225,32271
static SDL_Surface *img_color_picker, *img_color_picker_thumb, *img_paintwell;img_paintwell1225,32271
static int color_picker_x,1226,32350
static int color_picker_x, color_picker_y;1226,32350
static SDL_Surface *img_title_on,img_title_on1228,32394
static SDL_Surface *img_title_on, *img_title_off,img_title_off1228,32394
  *img_title_large_on,img_title_large_on1229,32444
  *img_title_large_on, *img_title_large_off;img_title_large_off1229,32444
static SDL_Surface *img_title_names[img_title_names1230,32489
static SDL_Surface *img_tools[img_tools1231,32538
static SDL_Surface *img_tools[NUM_TOOLS], *img_tool_names[img_tool_names1231,32538
static SDL_Surface *render_text(render_text1244,32921
static Uint16 *wcstou16(wcstou161303,34510
static SDL_Surface *render_text_w(render_text_w1322,35009
typedef struct stamp_type1431,38959
  char *stampname;stampname1433,38987
  char *stxt;stxt1434,39006
  Uint8 locale_text;1435,39020
  Mix_Chunk *ssnd;ssnd1437,39057
  Mix_Chunk *sdesc;sdesc1438,39076
  SDL_Surface *thumbnail;thumbnail1441,39104
  unsigned thumb_mirrored:thumb_mirrored1442,39130
  unsigned thumb_flipped:thumb_flipped1443,39159
  unsigned thumb_mirrored_flipped:thumb_mirrored_flipped1444,39187
  unsigned no_premirror:no_premirror1445,39224
  unsigned no_preflip:no_preflip1446,39251
  unsigned no_premirrorflip:no_premirrorflip1447,39276
  unsigned processed:processed1449,39308
  unsigned no_sound:no_sound1451,39378
  unsigned no_descsound:no_descsound1452,39401
  unsigned no_txt:no_txt1453,39428
  unsigned tinter:tinter1456,39539
  unsigned colorable:colorable1457,39560
  unsigned tintable:tintable1458,39584
  unsigned mirrorable:mirrorable1459,39607
  unsigned flipable:flipable1460,39632
  unsigned mirrored:mirrored1462,39656
  unsigned flipped:flipped1463,39679
  unsigned min:min1464,39701
  unsigned size:size1465,39719
  unsigned max:max1466,39738
  unsigned is_svg:is_svg1468,39757
} stamp_type;1469,39778
#define MAX_STAMP_GROUPS 1471,39793
static unsigned int stamp_group_dir_depth 1473,39823
static int stamp_group 1475,39965
static const char *load_stamp_basedir;load_stamp_basedir1477,39994
static int num_stamp_groups 1478,40033
static int num_stamps[num_stamps1479,40066
static int max_stamps[max_stamps1480,40107
static stamp_type **stamp_data[stamp_data1481,40148
static SDL_Surface *active_stamp;active_stamp1483,40199
static int stamp_colorable(1486,40291
static int stamp_tintable(1492,40442
#define SHAPE_BRUSH_NAME 1499,40537
static int num_brushes,1500,40580
static int num_brushes, num_brushes_max,1500,40580
static int num_brushes, num_brushes_max, shape_brush 1500,40580
static SDL_Surface **img_brushes;img_brushes1501,40638
static int * brushes_frames 1502,40672
static int * brushes_spacing 1503,40708
static short * brushes_directional 1504,40745
static SDL_Surface *img_shapes[img_shapes1506,40789
static SDL_Surface *img_shapes[NUM_SHAPES], *img_shape_names[img_shape_names1506,40789
static SDL_Surface *img_openlabels_open,img_openlabels_open1507,40863
static SDL_Surface *img_openlabels_open, *img_openlabels_erase,img_openlabels_erase1507,40863
  *img_openlabels_slideshow,img_openlabels_slideshow1508,40927
  *img_openlabels_slideshow, *img_openlabels_back,img_openlabels_back1508,40927
  *img_openlabels_slideshow, *img_openlabels_back, *img_openlabels_play,img_openlabels_play1508,40927
  *img_openlabels_next;img_openlabels_next1509,41000
static SDL_Surface *img_tux[img_tux1511,41025
static SDL_Surface *img_mouse,img_mouse1513,41068
static SDL_Surface *img_mouse, *img_mouse_click;img_mouse_click1513,41068
static SDL_Surface *img_paintcan;img_paintcan1516,41152
static SDL_Surface * * img_color_btns;1518,41192
static SDL_Surface *img_color_btn_off;img_color_btn_off1519,41231
static int colors_are_selectable;1522,41278
  BRUSH_DIRECTION_RIGHT,1525,41320
  BRUSH_DIRECTION_DOWN_RIGHT,1526,41345
  BRUSH_DIRECTION_DOWN,1527,41375
  BRUSH_DIRECTION_DOWN_LEFT,1528,41399
  BRUSH_DIRECTION_LEFT,1529,41428
  BRUSH_DIRECTION_UP_LEFT,1530,41452
  BRUSH_DIRECTION_UP,1531,41479
  BRUSH_DIRECTION_UP_RIGHT,1532,41501
  BRUSH_DIRECTION_NONE1533,41529
static SDL_Surface *img_cur_brush;img_cur_brush1536,41556
static int img_cur_brush_frame_w,1537,41591
static int img_cur_brush_frame_w, img_cur_brush_w,1537,41591
static int img_cur_brush_frame_w, img_cur_brush_w, img_cur_brush_h,1537,41591
    img_cur_brush_frames,1538,41659
    img_cur_brush_frames, img_cur_brush_directional,1538,41659
    img_cur_brush_frames, img_cur_brush_directional, img_cur_brush_spacing;1538,41659
static int brush_counter,1539,41735
static int brush_counter, brush_frame;1539,41735
#define NUM_ERASERS 1541,41775
#define ERASER_MIN 1544,41926
#define ERASER_MAX 1545,41948
static unsigned cur_color;1549,41974
static int cur_tool,1550,42001
static int cur_tool, cur_brush,1550,42001
static int cur_tool, cur_brush, old_tool;1550,42001
static int cur_stamp[cur_stamp1551,42043
static int cur_shape,1552,42083
static int cur_shape, cur_magic;1552,42083
static int cur_font,1553,42116
static int cur_font, cur_eraser;1553,42116
static int cursor_left,1554,42149
static int cursor_left, cursor_x,1554,42149
static int cursor_left, cursor_x, cursor_y,1554,42149
static int cursor_left, cursor_x, cursor_y, cursor_textwidth;1554,42149
static int old_cursor_x,1555,42233
static int old_cursor_x, old_cursor_y;1555,42233
static int cur_label,1556,42272
static int cur_label, cur_select;1556,42272
static int been_saved;1557,42306
static char file_id[file_id1558,42329
static char starter_id[starter_id1559,42364
static char template_id[template_id1560,42402
static int brush_scroll;1561,42441
static int stamp_scroll[stamp_scroll1562,42466
static int font_scroll,1563,42509
static int font_scroll, magic_scroll,1563,42509
static int font_scroll, magic_scroll, tool_scroll;1563,42509
static int eraser_scroll,1564,42560
static int eraser_scroll, shape_scroll;1564,42560
static int eraser_sound;1566,42631
static IM_DATA im_data;1568,42657
static wchar_t texttool_str[texttool_str1569,42681
static unsigned int texttool_len;1570,42715
static int tool_avail[tool_avail1572,42750
static int tool_avail[NUM_TOOLS], tool_avail_bak[tool_avail_bak1572,42750
static Uint32 cur_toggle_count;1574,42812
typedef struct edge_type1576,42845
  int y_upper;1578,42872
  float x_intersect,1579,42887
  float x_intersect, dx_per_scan;1579,42887
  struct edge_type *next;next1580,42921
} edge;1581,42947
typedef struct point_type1584,42957
  int x,1586,42985
  int x, y;1586,42985
} point_type;1587,42997
typedef struct fpoint_type1589,43012
  float x,1591,43041
  float x, y;1591,43041
} fpoint_type;1592,43055
{ Left,1595,43084
{ Left, Right,1595,43084
{ Left, Right, Bottom,1595,43084
{ Left, Right, Bottom, Top 1595,43084
{ Left, Right, Bottom, Top } an_edge;1595,43084
#define NUM_EDGES 1596,43122
static SDL_Event scrolltimer_event;1598,43143
int non_left_click_count 1600,43180
typedef struct dirent21603,43212
  struct dirent f;1605,43237
  int place;1606,43256
} dirent2;1607,43269
static char *progname;progname1619,43577
#define stamp_xor(1648,44568
#define update_stamp_xor(1654,44720
Mix_Chunk * magic_current_snd_ptr;1781,50445
#define MAX_UTF8_CHAR_LENGTH 1815,51639
#define USEREVENT_TEXT_UPDATE 1817,51671
#define USEREVENT_PLAYDESCSOUND 1818,51703
#define TP_SDL_MOUSEBUTTONSCROLL 1820,51738
static int bypass_splash_wait;1822,51792
static void do_wait(1826,51901
static void eat_sdl_events(1876,52805
#define PROMPT_QUIT_TXT 1919,53759
#define PROMPT_QUIT_YES 1922,53871
#define PROMPT_QUIT_NO 1925,53978
#define PROMPT_QUIT_SAVE_TXT 1929,54091
#define PROMPT_QUIT_SAVE_YES 1930,54186
#define PROMPT_QUIT_SAVE_NO 1931,54245
#define PROMPT_OPEN_SAVE_TXT 1934,54385
#define PROMPT_OPEN_SAVE_YES 1935,54455
#define PROMPT_OPEN_SAVE_NO 1936,54514
#define PROMPT_OPEN_UNOPENABLE_TXT 1939,54614
#define PROMPT_OPEN_UNOPENABLE_YES 1942,54724
#define PROMPT_OPEN_NOFILES_TXT 1946,54838
#define PROMPT_OPEN_NOFILES_YES 1947,54912
#define PROMPT_PRINT_NOW_TXT 1950,54999
#define PROMPT_PRINT_NOW_YES 1951,55068
#define PROMPT_PRINT_NOW_NO 1952,55128
#define PROMPT_PRINT_TXT 1955,55243
#define PROMPT_PRINT_YES 1956,55315
#define PROMPT_PRINT_FAILED_TXT 1959,55391
#define PROMPT_PRINT_TOO_SOON_TXT 1962,55570
#define PROMPT_PRINT_TOO_SOON_YES 1963,55643
#define PROMPT_ERASE_TXT 1966,55758
#define PROMPT_ERASE_YES 1967,55819
#define PROMPT_ERASE_NO 1968,55875
#define PROMPT_TIP_LEFTCLICK_TXT 1971,56007
#define PROMPT_TIP_LEFTCLICK_YES 1972,56095
  SHAPE_TOOL_MODE_STRETCH,1977,56156
  SHAPE_TOOL_MODE_ROTATE,1978,56183
  SHAPE_TOOL_MODE_DONE1979,56209
static void mainloop(1985,56263
static void hide_blinking_cursor(4798,132140
static void draw_blinking_cursor(4806,132248
static void brush_draw(4823,132710
void reset_brush_counter_and_frame(4930,134427
void reset_brush_counter(4936,134515
static void blit_brush(4944,134627
#define TINTER_ANYHUE 5022,136545
#define TINTER_NARROW 5023,136621
#define TINTER_NORMAL 5024,136685
#define TINTER_VECTOR 5025,136722
typedef struct multichan5028,136793
  double L,5030,136820
  double L, hue,5030,136820
  double L, hue, sat;5030,136820
  unsigned char or,5031,136895
  unsigned char or, og,5031,136895
  unsigned char or, og, ob,5031,136895
  unsigned char or, og, ob, alpha;5031,136895
} multichan;5032,136953
#define X0 5034,136967
#define Y0 5035,136995
#define Z0 5036,137023
#define u0_prime 5037,137051
#define v0_prime 5038,137109
static void fill_multichan(5041,137169
static double tint_part_1(5076,138110
static void change_colors(5118,139111
static multichan *find_most_saturated(find_most_saturated5229,142378
static void vector_tint_surface(5305,144024
static void tint_surface(5341,145072
static void stamp_draw(5398,146178
static void rec_undo_buffer(5527,149397
static void show_version(5574,150261
static void show_usage(5704,153091
static unsigned compute_default_scale_factor(5788,156093
static void loadbrush_callback(5814,156796
static void load_brush_dir(5905,158867
SDL_Surface *mirror_surface(mirror_surface5914,159104
SDL_Surface *flip_surface(flip_surface5950,159597
static unsigned default_stamp_size;5986,160086
static void loadstamp_finisher(5988,160123
static void set_active_stamp(6062,161812
static void get_stamp_thumb(6305,166418
static void loadstamp_callback(6646,173105
static void load_stamp_dir(6776,176676
static void load_stamps(6786,176932
static int load_user_fonts_stub(6816,177637
volatile long fontconfig_thread_done 6823,177755
int generate_fontconfig_cache_spinner(6825,177798
static int generate_fontconfig_cache_real(6845,178249
static int generate_fontconfig_cache(6876,179134
#define hex2dec(6882,179236
static void signal_handler(6887,179429
static SDL_Surface *do_render_button_label(do_render_button_label6895,179619
static void create_button_labels(6915,180181
static void seticon(6950,181431
static SDL_Cursor *get_cursor(get_cursor7006,182466
static SDL_Surface *loadimage(loadimage7051,183529
static SDL_Surface *do_loadimage(do_loadimage7059,183647
static void draw_toolbar(7121,184745
static void draw_magic(7228,186957
static unsigned colors_state 7367,190280
static unsigned draw_colors(7369,190348
static void draw_brushes(7455,192827
static void draw_fonts(7549,194897
static void draw_stamps(7857,202614
static void draw_shapes(8158,209929
static void draw_erasers(8243,211714
static void draw_none(8358,214048
static SDL_Surface *thumbnail(thumbnail8380,214424
static SDL_Surface *thumbnail2(thumbnail28386,214584
static SDL_Surface *zoom(zoom8561,218238
static void xorpixel(8703,222076
static void do_undo(8742,223083
static void do_redo(8810,224296
static void render_brush(8861,225315
static void line_xor(8960,228002
static void rect_xor(9038,229038
static void do_eraser(9073,229673
static void reset_avail_tools(9189,231986
static void disable_avail_tools(9268,233343
static void enable_avail_tools(9282,233593
static int compare_dirent2s(9295,233767
static void draw_tux_text(9310,234089
static int latest_tux;9316,234246
static const char * latest_tux_text;9317,234269
static int latest_r2l;9318,234306
static Uint8 latest_locale_text;9319,234329
static void redraw_tux_text(9321,234363
static void draw_tux_text_ex(9326,234483
static void wordwrap_text(9415,236772
static void wordwrap_text_ex(9422,236980
static void playstampdesc(9827,245786
static Mix_Chunk *loadsound_extra(loadsound_extra9850,246290
static Mix_Chunk *loadsound(loadsound9945,248860
static Mix_Chunk *loaddescsound(loaddescsound9950,248957
static void strip_trailing_whitespace(9960,249106
static char *loaddesc(loaddesc9974,249303
static double loadinfo(10072,250854
static int SDLCALL NondefectiveBlit(10182,253068
static void autoscale_copy_smear_free(10247,254454
static void load_starter_id(10323,256257
static void load_starter(10412,258130
static void load_template(10587,262529
static void load_current(10667,264329
static int make_directory(10766,266389
static void save_current(10789,266858
static int do_prompt(10824,267487
static int do_prompt_snd(10831,267691
static int do_prompt_image(10838,267926
static int do_prompt_image_snd(10847,268224
static int do_prompt_image_flash(10857,268561
#define PROMPT_LEFT 10867,268895
#define PROMPT_W 10868,268918
static int do_prompt_image_flash_snd(10870,268940
static void cleanup(11297,278149
static void free_surface(11579,284260
static void free_surface_array(11589,284415
static void do_shape(11633,285124
static int shape_rotation(11862,289060
static int brush_rotation(11887,289540
#define PROMPT_SAVE_OVER_TXT 11898,289771
#define PROMPT_SAVE_OVER_YES 11902,289960
#define PROMPT_SAVE_OVER_NO 11906,290162
static int do_save(11911,290261
static void set_chunk_data(12135,295278
#define open_memstream 12168,296121
static void do_png_embed_data(12171,296195
static int do_png_save(12569,309410
static void get_new_file_id(12694,312235
static int do_quit(12710,312510
#define PLACE_COLOR_PALETTE 12760,313551
#define PLACE_SAVED_DIR 12761,313584
#define PLACE_PERSONAL_STARTERS_DIR 12762,313610
#define PLACE_STARTERS_DIR 12763,313648
#define PLACE_PERSONAL_TEMPLATES_DIR 12764,313677
#define PLACE_TEMPLATES_DIR 12765,313716
#define NUM_PLACES_TO_LOOK 12766,313746
static int do_open(12772,313871
static int do_slideshow(13866,344650
static void play_slideshow(14615,362021
static void draw_selection_digits(14840,366958
static void wait_for_sfx(14890,367752
#define STIPLE_W 14908,368047
#define STIPLE_H 14909,368066
static char stiple[stiple14910,368085
#define STIPLE_W 14914,368163
#define STIPLE_H 14915,368182
static char stiple[stiple14916,368201
#define STIPLE_W 14920,368267
#define STIPLE_H 14921,368287
static char stiple[stiple14922,368307
static unsigned char *stamp_outline_data;stamp_outline_data14933,368535
static int stamp_outline_w,14934,368577
static int stamp_outline_w, stamp_outline_h;14934,368577
static void update_stamp_xor(14936,368623
static void stamp_xor(15026,370761
static void rgbtohsv(15049,371322
static void hsvtorgb(15090,372024
static void print_image(15157,372883
void do_print(15200,374034
static void do_render_cur_text(15279,375864
static char *uppercase(uppercase15496,381757
static wchar_t *uppercase_w(uppercase_w15524,382456
static char *textdir(textdir15544,382835
static Uint32 scrolltimer_callback(15611,384005
static void control_drawtext_timer(15630,384389
static Uint32 drawtext_callback(15665,385104
static char *debug_gettext(debug_gettext15677,385278
static const char *great_str(great_str15691,385525
static int charsize(15698,385650
static void draw_image_title(15712,385824
static void handle_keymouse(15725,386149
static void handle_active(15770,387228
static char *remove_slash(remove_slash15791,387602
static void anti_carriage_return(15833,388446
static SDL_Surface *duplicate_surface(duplicate_surface15864,389068
static void mirror_starter(15885,389492
static void flip_starter(15952,390482
static int valid_click(16019,391466
static int in_circle(16028,391626
static int in_circle_rad(16036,391746
static int paintsound(16044,391881
static SDL_Surface * load_svg(16061,392194
static SDL_Surface * load_svg(16221,396212
static float pick_best_scape(16400,400276
static SDL_Surface * myIMG_Load(16487,402367
static SDL_Surface * load_kpx(16499,402686
static void load_magic_plugins(16527,403143
static int magic_sort(16928,416381
static void update_progress_bar(16937,416544
static void magic_line_func(16942,416616
static void special_notify(17024,418141
static void magic_stopsound(17056,418709
static void magic_playsound(17066,418832
static Uint8 magic_linear_to_sRGB(17108,419644
static float magic_sRGB_to_linear(17113,419725
static int magic_button_down(17118,419814
static SDL_Surface * magic_scale(17123,419877
static int do_new_dialog(17130,420091
static void reset_touched(18270,450783
static Uint8 magic_touched(18283,450963
static int do_color_picker(18296,451186
static void magic_putpixel(18728,463486
static Uint32 magic_getpixel(18733,463636
static void magic_switchout(18739,463776
static void magic_switchin(18751,464113
static int magic_modeint(18769,464587
static void add_label_node(18779,464738
static struct label_node* search_label_list(18848,466578
static void rec_undo_label(18979,471929
static void do_undo_label_node(19017,473160
static void do_redo_label_node(19041,473964
static void simply_render_node(19069,474768
static void render_all_nodes_starting_at(19148,476779
static void derender_node(19168,477321
static void delete_label_list(19183,477716
static void myblit(19204,478317
static void load_info_about_label_surface(19242,479917
static void set_label_fonts(19417,486521
static void tmp_apply_uncommited_text(19476,488663
static void undo_tmp_applied_text(19525,490789
static void highlight_label_nodes(19561,492110
static void cycle_highlighted_label_node(19641,495132
static int are_labels(19664,495952
int chunk_is_valid(19680,496341
Bytef *get_chunk_data(get_chunk_data19746,498179
void load_embedded_data(19825,500198
static void show_available_papersizes(20169,510244
static void parse_file_options(20203,510873
static void parse_argv_options(20242,511968
static void tmpcfg_merge(20303,513385
static void setup_config(20316,513747
#define SETBOOL(20415,516495
#undef SETBOOL20444,517322
static void chdir_to_binary(20514,519566
static void setup_colors(20549,520495
static void do_lock_file(20705,524209
static void setup(20788,526003
static void claim_to_be_ready(21721,551408
int main(21829,553823

macosx/SDLMain.h,27
@interface SDLMain 15,485

macosx/message.h,31
#define MSG_FONT_CACHE 24,873

macosx/TransparentTextView.h,39
@interface TransparentTextView 26,911

macosx/wrapperdata.h,439
#define WRAPPER_DATA13,246
struct WrapperDataStruct15,268
    char dataPath[dataPath17,295
    char preferencesPath[preferencesPath18,394
    char globalPreferencesPath[globalPreferencesPath19,485
    char fontsPath[fontsPath20,576
    int foundSDL;21,651
    int foundSDL_image;22,719
    int foundSDL_mixer;23,793
	int cocoaKeystrokes;24,867
    int menuAction;25,958
typedef struct WrapperDataStruct WrapperData;28,1060

win32/resource.h,212
#define IDI_ICON1 5,103
#define IDD_ABORTDLG 6,147
#define _APS_NEXT_RESOURCE_VALUE 12,293
#define _APS_NEXT_COMMAND_VALUE 13,337
#define _APS_NEXT_CONTROL_VALUE 14,383
#define _APS_NEXT_SYMED_VALUE 15,428

src/cursor.h,25
#define CURSOR_H31,1006

src/fonts.c,2853
#define __USE_GNU	27,881
#define gettext_noop(37,1053
#define _MATRIX_WHITE_BACK 45,1310
#define MATRIX_WHITE_BACK 46,1357
#define _MATRIX_BLACK_BACK 47,1402
#define MATRIX_BLACK_BACK 48,1449
#define _MATRIX_TRANSPARENT_BACK_BLACK_LETTER 49,1494
#define MATRIX_TRANSPARENT_BACK_BLACK_LETTER 50,1579
#define _MATRIX_TRANSPARENT_BACK_WHITE_LETTER 51,1662
#define MATRIX_TRANSPARENT_BACK_WHITE_LETTER 52,1747
#define _MATRIX_TRANSPARENT_BACK_TRANSPARENT_LETTER 53,1830
#define MATRIX_TRANSPARENT_BACK_TRANSPARENT_LETTER 54,1927
static const char *problemFonts[problemFonts80,2421
#define sched_yield(97,2703
#define prctl(103,2779
#define PR_SET_PDEATHSIG 104,2799
SDL_Thread *font_thread;font_thread110,2863
int no_system_fonts;128,3276
int no_system_fonts 130,3303
int all_locale_fonts;132,3335
volatile long font_thread_done;133,3357
volatile long font_thread_aborted;134,3389
volatile long waiting_for_fonts;135,3424
static int font_scanner_pid;136,3457
int font_socket_fd;137,3486
TuxPaint_Font *medium_font,medium_font139,3507
TuxPaint_Font *medium_font, *small_font,small_font139,3507
TuxPaint_Font *medium_font, *small_font, *large_font,large_font139,3507
TuxPaint_Font *medium_font, *small_font, *large_font, *locale_font;locale_font139,3507
family_info **user_font_families;user_font_families141,3576
int num_font_families;142,3610
static int num_font_families_max;143,3633
style_info **user_font_styles;user_font_styles145,3668
int num_font_styles;146,3699
int num_font_styles_max;147,3720
int text_state;149,3746
unsigned text_size 150,3762
int button_label_y_nudge;152,3809
static TuxPaint_Font *try_alternate_font(try_alternate_font186,4558
TuxPaint_Font *load_locale_font(load_locale_font205,4925
void TuxPaint_Font_CloseFont(260,6155
TuxPaint_Font *TuxPaint_Font_OpenFont(TuxPaint_Font_OpenFont278,6472
void reliable_write(369,8400
static void reliable_read(400,8888
static void groupfonts_range(433,9436
static int compar_fontgroup(610,13463
static int compar_fontkiller(629,13872
static int compar_fontscore(644,14202
static void parse_font_style(658,14557
static void dupe_markdown_range(804,17685
static void groupfonts(827,18056
static void loadfonts_locale_filter(920,20464
static void loadfonts(929,20737
/* static */ int load_user_fonts(935,20856
void run_font_scanner(997,22709
void receive_some_font_info(1127,25580
TuxPaint_Font *getfonthandle(getfonthandle1243,28238
static int was_bad_font;1398,31415
static int do_surfcmp(1401,31482
static int surfcmp(1452,32627
int charset_works(1461,32816
int TuxPaint_Font_FontHeight(1525,34275
const char *TuxPaint_Font_FontFaceFamilyName(TuxPaint_Font_FontFaceFamilyName1539,34496
const char *TuxPaint_Font_FontFaceStyleName(TuxPaint_Font_FontFaceStyleName1570,35025
void sdl_color_to_pango_color(1604,35572

src/win32_dirent.c,185
  DIR * opendir(38,1605
void closedir(55,1971
} struct dirent *readdir(readdir59,2044
int alphasort(76,2391
} static int addToList(81,2550
int scandir(101,3102

src/parse.h,2393
struct cfginfo8,133
  const char *all_locale_fonts;all_locale_fonts10,150
  const char *alt_print_command_default;alt_print_command_default11,182
  const char *altprintcommand;altprintcommand12,223
  const char *autosave_on_quit;autosave_on_quit13,254
  const char *colorfile;colorfile14,286
  const char *datadir;datadir15,311
  const char *disable_label;disable_label16,334
  const char *disable_magic_controls;disable_magic_controls17,363
  const char *disable_print;disable_print18,401
  const char *disable_quit;disable_quit19,430
  const char *disable_save;disable_save20,458
  const char *disable_screensaver;disable_screensaver21,486
  const char *disable_stamp_controls;disable_stamp_controls22,521
  const char *dont_do_xor;dont_do_xor23,559
  const char *dont_load_stamps;dont_load_stamps24,586
  const char *fullscreen;fullscreen25,618
  const char *grab_input;grab_input26,644
  const char *hide_cursor;hide_cursor27,670
  const char *keymouse;keymouse28,697
  const char *mirrorstamps;mirrorstamps29,721
  const char *native_screensize;native_screensize30,749
  const char *no_button_distinction;no_button_distinction31,782
  const char *no_fancy_cursors;no_fancy_cursors32,819
  const char *no_system_fonts;no_system_fonts33,851
  const char *noshortcuts;noshortcuts34,882
  const char *ok_to_use_lockfile;ok_to_use_lockfile35,909
  const char *only_uppercase;only_uppercase36,943
  const char *papersize;papersize37,973
  const char *parsertmp_fullscreen_native;parsertmp_fullscreen_native38,998
  const char *parsertmp_lang;parsertmp_lang39,1041
  const char *parsertmp_locale;parsertmp_locale40,1071
  const char *parsertmp_sysconfig;parsertmp_sysconfig41,1103
  const char *parsertmp_windowsize;parsertmp_windowsize42,1138
  const char *print_delay;print_delay43,1174
  const char *printcommand;printcommand44,1201
  const char *promptless_save;promptless_save45,1229
  const char *rotate_orientation;rotate_orientation46,1260
  const char *savedir;savedir47,1294
  const char *simple_shapes;simple_shapes48,1317
  const char *stamp_size_override;stamp_size_override49,1346
  const char *start_blank;start_blank50,1381
  const char *use_print_config;use_print_config51,1408
  const char *use_sound;use_sound52,1440
  const char *wheely;wheely53,1465
#define CFGINFO_MAXOFFSET 56,1491

src/shapes.h,865
  SHAPE_SQUARE,36,1027
  SHAPE_SQUARE_FILL,37,1043
  SHAPE_RECTANGLE,38,1064
  SHAPE_RECTANGLE_FILL,39,1083
  SHAPE_CIRCLE,40,1107
  SHAPE_CIRCLE_FILL,41,1123
  SHAPE_ELLIPSE,42,1144
  SHAPE_ELLIPSE_FILL,43,1161
  SHAPE_TRIANGLE,44,1183
  SHAPE_TRIANGLE_FILL,45,1201
  SHAPE_PENTAGON,46,1224
  SHAPE_PENTAGON_FILL,47,1242
  SHAPE_RHOMBUS,48,1265
  SHAPE_RHOMBUS_FILL,49,1282
  SHAPE_OCTAGON,50,1304
  SHAPE_OCTAGON_FILL,51,1321
  NUM_SHAPES52,1343
const int shape_sides[shape_sides58,1397
const int shape_locked[shape_locked80,1835
const int shape_filled[shape_filled102,2266
const int shape_init_ang[shape_init_ang125,2700
const int shape_no_rotate[shape_no_rotate147,3177
const char *const shape_names[shape_names169,3599
const char *const shape_tips[shape_tips206,4544
const char *const shape_img_fnames[shape_img_fnames249,5931

src/dirwalk.c,591
#define __USE_GNU	28,902
#define _MATRIX_WHITE_BACK 48,1380
#define MATRIX_WHITE_BACK 49,1427
#define _MATRIX_BLACK_BACK 50,1472
#define MATRIX_BLACK_BACK 51,1519
#define _MATRIX_TRANSPARENT_BACK_BLACK_LETTER 52,1564
#define MATRIX_TRANSPARENT_BACK_BLACK_LETTER 53,1649
#define _MATRIX_TRANSPARENT_BACK_WHITE_LETTER 54,1732
#define MATRIX_TRANSPARENT_BACK_WHITE_LETTER 55,1817
#define _MATRIX_TRANSPARENT_BACK_TRANSPARENT_LETTER 56,1900
#define MATRIX_TRANSPARENT_BACK_TRANSPARENT_LETTER 57,1997
void loadfont_callback(70,2244
int compare_ftw_str(253,9184
void tp_ftw(260,9547

src/pixels.c,267
static void putpixel8(35,1108
static void putpixel16(58,1806
static void putpixel24(81,2521
static void putpixel32(116,3476
static Uint32 getpixel8(139,4184
static Uint32 getpixel16(165,4940
static Uint32 getpixel24(191,5713
static Uint32 getpixel32(225,6694

src/tuxpaint.c,33086
# define VIDEO_BPP 35,1118
# define VIDEO_BPP 39,1169
# define VIDEO_BPP 46,1361
#define PRINTMETHOD_PS	55,1535
#define MAX_PATH 60,1748
# define LOW_QUALITY_THUMBNAILS68,1837
# define LOW_QUALITY_STAMP_OUTLINE69,1869
# define NO_PROMPT_SHADOWS70,1904
# define USE_HWSURFACE71,1931
#define GAMMA_CORRECTED_THUMBNAILS81,2226
#define COLORSEL_DISABLE 91,2537
#define COLORSEL_ENABLE 92,2611
#define COLORSEL_CLOBBER 93,2671
#define COLORSEL_REFRESH 94,2730
#define COLORSEL_CLOBBER_WIPE 95,2799
#define COLORSEL_FORCE_REDRAW 96,2885
#define TPAINT_AMASK 101,3168
#define TPAINT_AMASK 103,3206
typedef struct scaleparams109,3334
  unsigned numer,111,3363
  unsigned numer, denom;111,3363
} scaleparams;112,3388
static scaleparams scaletable[scaletable114,3404
#define HARD_MIN_STAMP_SIZE 148,4167
#define HARD_MAX_STAMP_SIZE 149,4224
#define MIN_STAMP_SIZE 151,4300
#define MAX_STAMP_SIZE 152,4378
#define SCALE_LIKE_STAMP(155,4529
#define CUR_STAMP_W 158,4847
#define CUR_STAMP_H 159,4901
#define REPEAT_SPEED 162,4957
#define CURSOR_BLINK_SPEED 163,5024
#define _GNU_SOURCE	167,5115
char *strcasestr(strcasestr190,5743
#define y1 219,6359
#undef y1221,6396
#define FALSE 228,6510
#define TRUE 229,6530
#define gettext_noop(237,6643
#define gettext(242,6701
#define M_PI 247,6769
typedef struct safer_dirent268,7091
  dev_t d_dev;270,7121
  dev_t d_pdev;271,7136
  ino_t d_ino;272,7152
  ino_t d_pino;273,7167
  unsigned short d_reclen;274,7183
  char d_name[d_name275,7210
} safer_dirent;276,7239
#define dirent 277,7255
#define mkdir(314,7770
#define _MATRIX_WHITE_BACK 357,9156
#define MATRIX_WHITE_BACK 358,9203
#define _MATRIX_BLACK_BACK 359,9248
#define MATRIX_BLACK_BACK 360,9295
#define _MATRIX_TRANSPARENT_BACK_BLACK_LETTER 361,9340
#define MATRIX_TRANSPARENT_BACK_BLACK_LETTER 362,9425
#define _MATRIX_TRANSPARENT_BACK_WHITE_LETTER 363,9508
#define MATRIX_TRANSPARENT_BACK_WHITE_LETTER 364,9593
#define _MATRIX_TRANSPARENT_BACK_TRANSPARENT_LETTER 365,9676
#define MATRIX_TRANSPARENT_BACK_TRANSPARENT_LETTER 366,9773
#define FNAME_EXTENSION 427,11540
#define SDL_GetRGBA(470,12372
#define SDL_GetRGB(477,12627
#define SDL_MapRGBA(484,12843
#define SDL_MapRGB(493,13125
#define fmemopen_alternative 505,13526
#undef fmemopen509,13592
FILE * my_fmemopen(513,13684
#define fmemopen 545,14176
  SAVE_OVER_PROMPT,552,14222
  SAVE_OVER_ALWAYS,553,14242
  SAVE_OVER_NO554,14262
  ALTPRINT_MOD,559,14288
  ALTPRINT_ALWAYS,560,14304
  ALTPRINT_NEVER561,14323
  STARTER_OUTLINE,567,14352
  STARTER_SCENE568,14371
  LABEL_OFF,573,14398
  LABEL_LABEL,574,14411
  LABEL_SELECT 575,14426
static int NUM_COLORS;583,14544
static Uint8 * * color_hexes;584,14567
static char * * color_names;585,14597
static void debug(590,14657
static const char *getfilename(getfilename600,14801
  Uint8 rows,624,15203
  Uint8 rows, cols;624,15203
} grid_dims;625,15223
static SDL_Rect r_canvas;628,15322
static SDL_Rect r_tools;629,15373
static SDL_Rect r_sfx;630,15422
static SDL_Rect r_toolopt;631,15445
static SDL_Rect r_colors;632,15498
static SDL_Rect r_ttools;633,15550
static SDL_Rect r_tcolors;634,15626
static SDL_Rect r_ttoolopt;635,15706
static SDL_Rect r_tuxarea;636,15783
static SDL_Rect r_label;637,15827
static int button_w;639,15853
static int button_h;640,15888
static int color_button_w;642,15924
static int color_button_h;643,15964
static grid_dims gd_tools;647,16117
static grid_dims gd_sfx;648,16158
static grid_dims gd_toolopt;649,16183
static grid_dims gd_colors;651,16274
#define HEIGHTOFFSET 653,16318
#define TOOLOFFSET 654,16375
#define PROMPTOFFSETX 655,16418
#define PROMPTOFFSETY 656,16465
#define THUMB_W 658,16507
#define THUMB_H 659,16554
static int WINDOW_WIDTH 662,16630
static int WINDOW_HEIGHT 663,16661
static int WINDOW_WIDTH 666,16764
static int WINDOW_HEIGHT 667,16796
static int WINDOW_WIDTH 669,16834
static int WINDOW_HEIGHT 670,16865
static void setup_normal_screen_layout(677,17053
static void debug_rect(760,19160
#define DR(765,19279
static void debug_dims(767,19313
#define DD(772,19419
static void print_layout(774,19453
#undef DD792,19828
#undef DR793,19838
static void setup_screen_layout(796,19856
static SDL_Surface *screen;screen805,20050
static SDL_Surface *canvas;canvas806,20078
static SDL_Surface *label;label807,20106
static SDL_Surface *save_canvas;save_canvas808,20133
static SDL_Surface *canvas_back;canvas_back809,20166
static SDL_Surface *img_starter,img_starter810,20199
static SDL_Surface *img_starter, *img_starter_bkgd;img_starter_bkgd810,20199
static void update_screen(813,20324
static void update_screen_rect(859,20974
static int hit_test(864,21074
#define HIT(870,21263
static int grid_hit_wh(881,21574
#define GRIDHIT_WH(888,21818
#define GRIDHIT_SURF(893,21993
static int grid_hit_gd(898,22256
#define GRIDHIT_GD(915,22815
static int disable_label 920,23006
static int disable_label;922,23042
static void update_canvas_ex(925,23076
static void update_canvas(959,23863
static int mouseaccessibility 966,23981
static int disable_screensaver;967,24016
static int fullscreen 969,24065
static int fullscreen;971,24098
static int native_screensize;973,24128
static int grab_input;974,24158
static int rotate_orientation;975,24181
static int disable_print;977,24213
static int print_delay;978,24239
static int use_print_config 979,24263
static int alt_print_command_default 980,24296
static int want_alt_printcommand;981,24349
static int wheely 983,24384
static int keymouse;984,24407
static int mouse_x;985,24428
static int mouse_y;986,24448
static int no_button_distinction;987,24468
static int mousekey_up;988,24502
static int mousekey_down;989,24526
static int mousekey_left;990,24552
static int mousekey_right;991,24578
static int button_down;992,24605
static int scrolling;993,24629
static int promptless_save 995,24652
static int disable_quit;996,24699
static int noshortcuts;998,24725
static int disable_save;999,24749
static int ok_to_use_lockfile 1000,24774
static int start_blank;1001,24809
static int autosave_on_quit;1002,24833
static int dont_do_xor;1004,24863
static int dont_load_stamps;1005,24887
static int mirrorstamps;1006,24916
static int disable_stamp_controls;1007,24941
static int stamp_size_override 1008,24976
static int simple_shapes 1011,25031
static int simple_shapes;1013,25067
static int only_uppercase;1015,25100
static int disable_magic_controls;1017,25128
static int starter_mirrored;1019,25164
static int starter_flipped;1020,25193
static int starter_personal;1021,25221
static int template_personal;1022,25250
static int starter_modified;1023,25280
static Uint8 canvas_color_r,1025,25310
static Uint8 canvas_color_r, canvas_color_g,1025,25310
static Uint8 canvas_color_r, canvas_color_g, canvas_color_b;1025,25310
static Uint8 * touched;1026,25371
static int shape_radius;1028,25396
typedef struct label_node1031,25501
  unsigned int save_texttool_len;1033,25529
  wchar_t save_texttool_str[save_texttool_str1034,25563
  SDL_Color save_color;1035,25597
  int save_width;1036,25621
  int save_height;1037,25639
  Uint16 save_x;1038,25658
  Uint16 save_y;1039,25675
  int save_cur_font;1040,25692
  char * save_font_type;1041,25713
  int save_text_state;1042,25738
  unsigned save_text_size;1043,25761
  int save_undoid;1044,25788
  int is_enabled;1045,25807
  struct label_node* disables;1046,25825
  struct label_node* next_to_up_label_node;1047,25856
  struct label_node* next_to_down_label_node;1048,25900
  SDL_Surface* label_node_surface;1049,25946
} label_node;1050,25981
static struct label_node* start_label_node;1053,25997
static struct label_node* current_label_node;1054,26041
static struct label_node* first_label_node_in_redo_stack;1055,26087
static struct label_node* label_node_to_edit;1056,26145
static struct label_node* highlighted_label_node;1057,26191
static unsigned int select_texttool_len;1059,26242
static wchar_t select_texttool_str[select_texttool_str1060,26283
static unsigned select_color;1061,26324
static int select_width;1062,26354
static int select_height;1063,26379
static Uint16 select_x;1064,26405
static Uint16 select_y;1065,26429
static int select_cur_font;1066,26453
static int select_text_state;1067,26481
static unsigned select_text_size;1068,26511
static int coming_from_undo_or_redo 1069,26545
typedef struct magic_funcs_s 1107,27665
  int (*get_tool_count)get_tool_count1108,27696
  char * (*get_name)get_name1109,27734
  SDL_Surface * (*get_icon)get_icon1110,27774
  char * (*get_description)get_description1111,27821
  int (*requires_colors)requires_colors1112,27873
  int (*modes)modes1113,27917
  void (*set_color)set_color1114,27951
  int (*init)init1115,28006
  Uint32 (*api_version)api_version1116,28034
  void (*shutdown)shutdown1117,28065
  void (*click)click1118,28098
  void (*drag)drag1119,28190
  void (*release)release1120,28286
  void (*switchin)switchin1121,28375
  void (*switchout)switchout1122,28448
} magic_funcs_t;1123,28522
typedef struct magic_s 1126,28541
  int place;1127,28566
  int handle_idx;1128,28579
  int idx;1129,28686
  int mode;1130,28788
  int avail_modes;1131,28841
  int colors;1132,28906
  char * name;1133,28960
  char * tip[tip1134,29000
  SDL_Surface * img_icon;1135,29080
  SDL_Surface * img_name;1136,29106
} magic_t;1137,29132
static int num_plugin_files;1142,29186
static void * magic_handle[magic_handle1143,29266
static magic_funcs_t magic_funcs[magic_funcs1144,29378
static magic_t magics[magics1146,29461
static int num_magics;1147,29489
  MAGIC_PLACE_GLOBAL,1150,29607
  MAGIC_PLACE_LOCAL,1151,29629
  MAGIC_PLACE_ALLUSERS,1153,29667
  NUM_MAGIC_PLACES1155,29698
static magic_api *magic_api_struct;magic_api_struct1158,29721
static const char *printcommand printcommand1170,30263
static const char *altprintcommand altprintcommand1171,30311
static const char *papersize;papersize1172,30365
  UNDO_STARTER_NONE,1191,30869
  UNDO_STARTER_MIRRORED,1192,30890
  UNDO_STARTER_FLIPPED1193,30915
#define NUM_UNDO_BUFS 1196,30942
static SDL_Surface *undo_bufs[undo_bufs1197,30967
static int undo_starters[undo_starters1198,31013
static int cur_undo,1199,31054
static int cur_undo, oldest_undo,1199,31054
static int cur_undo, oldest_undo, newest_undo;1199,31054
static int text_undo[text_undo1200,31101
static int have_to_rec_label_node;1201,31138
static int have_to_rec_label_node_back;1202,31173
static SDL_Surface *img_title,img_title1204,31214
static SDL_Surface *img_title, *img_title_credits,img_title_credits1204,31214
static SDL_Surface *img_title, *img_title_credits, *img_title_tuxpaint;img_title_tuxpaint1204,31214
static SDL_Surface *img_btn_up,img_btn_up1205,31286
static SDL_Surface *img_btn_up, *img_btn_down,img_btn_down1205,31286
static SDL_Surface *img_btn_up, *img_btn_down, *img_btn_off;img_btn_off1205,31286
static SDL_Surface *img_btnsm_up,img_btnsm_up1206,31347
static SDL_Surface *img_btnsm_up, *img_btnsm_off;img_btnsm_off1206,31347
static SDL_Surface *img_prev,img_prev1207,31397
static SDL_Surface *img_prev, *img_next;img_next1207,31397
static SDL_Surface *img_mirror,img_mirror1208,31438
static SDL_Surface *img_mirror, *img_flip;img_flip1208,31438
static SDL_Surface *img_dead40x40;img_dead40x401209,31481
static SDL_Surface *img_black,img_black1210,31516
static SDL_Surface *img_black, *img_grey;img_grey1210,31516
static SDL_Surface *img_yes,img_yes1211,31558
static SDL_Surface *img_yes, *img_no;img_no1211,31558
static SDL_Surface *img_sfx,img_sfx1212,31596
static SDL_Surface *img_sfx, *img_speak;img_speak1212,31596
static SDL_Surface *img_open,img_open1213,31637
static SDL_Surface *img_open, *img_erase,img_erase1213,31637
static SDL_Surface *img_open, *img_erase, *img_back,img_back1213,31637
static SDL_Surface *img_open, *img_erase, *img_back, *img_trash;img_trash1213,31637
static SDL_Surface *img_slideshow,img_slideshow1214,31702
static SDL_Surface *img_slideshow, *img_play,img_play1214,31702
static SDL_Surface *img_slideshow, *img_play, *img_select_digits;img_select_digits1214,31702
static SDL_Surface *img_printer,img_printer1215,31768
static SDL_Surface *img_printer, *img_printer_wait;img_printer_wait1215,31768
static SDL_Surface *img_save_over,img_save_over1216,31820
static SDL_Surface *img_save_over, *img_popup_arrow;img_popup_arrow1216,31820
static SDL_Surface *img_cursor_up,img_cursor_up1217,31873
static SDL_Surface *img_cursor_up, *img_cursor_down;img_cursor_down1217,31873
static SDL_Surface *img_cursor_starter_up,img_cursor_starter_up1218,31926
static SDL_Surface *img_cursor_starter_up, *img_cursor_starter_down;img_cursor_starter_down1218,31926
static SDL_Surface *img_scroll_up,img_scroll_up1219,31995
static SDL_Surface *img_scroll_up, *img_scroll_down;img_scroll_down1219,31995
static SDL_Surface *img_scroll_up_off,img_scroll_up_off1220,32048
static SDL_Surface *img_scroll_up_off, *img_scroll_down_off;img_scroll_down_off1220,32048
static SDL_Surface *img_grow,img_grow1221,32109
static SDL_Surface *img_grow, *img_shrink;img_shrink1221,32109
static SDL_Surface *img_magic_paint,img_magic_paint1222,32152
static SDL_Surface *img_magic_paint, *img_magic_fullscreen;img_magic_fullscreen1222,32152
static SDL_Surface *img_bold,img_bold1223,32212
static SDL_Surface *img_bold, *img_italic;img_italic1223,32212
static SDL_Surface *img_label,img_label1224,32255
static SDL_Surface *img_label, *img_label_select;img_label_select1224,32255
static SDL_Surface *img_color_picker,img_color_picker1225,32305
static SDL_Surface *img_color_picker, *img_color_picker_thumb,img_color_picker_thumb1225,32305
static SDL_Surface *img_color_picker, *img_color_picker_thumb, *img_paintwell;img_paintwell1225,32305
static int color_picker_x,1226,32384
static int color_picker_x, color_picker_y;1226,32384
static SDL_Surface *img_title_on,img_title_on1228,32428
static SDL_Surface *img_title_on, *img_title_off,img_title_off1228,32428
  *img_title_large_on,img_title_large_on1229,32478
  *img_title_large_on, *img_title_large_off;img_title_large_off1229,32478
static SDL_Surface *img_title_names[img_title_names1230,32523
static SDL_Surface *img_tools[img_tools1231,32572
static SDL_Surface *img_tools[NUM_TOOLS], *img_tool_names[img_tool_names1231,32572
static SDL_Surface *render_text(render_text1244,32955
static Uint16 *wcstou16(wcstou161303,34544
static SDL_Surface *render_text_w(render_text_w1322,35043
typedef struct stamp_type1431,38993
  char *stampname;stampname1433,39021
  char *stxt;stxt1434,39040
  Uint8 locale_text;1435,39054
  Mix_Chunk *ssnd;ssnd1437,39091
  Mix_Chunk *sdesc;sdesc1438,39110
  SDL_Surface *thumbnail;thumbnail1441,39138
  unsigned thumb_mirrored:thumb_mirrored1442,39164
  unsigned thumb_flipped:thumb_flipped1443,39193
  unsigned thumb_mirrored_flipped:thumb_mirrored_flipped1444,39221
  unsigned no_premirror:no_premirror1445,39258
  unsigned no_preflip:no_preflip1446,39285
  unsigned no_premirrorflip:no_premirrorflip1447,39310
  unsigned processed:processed1449,39342
  unsigned no_sound:no_sound1451,39412
  unsigned no_descsound:no_descsound1452,39435
  unsigned no_txt:no_txt1453,39462
  unsigned tinter:tinter1456,39573
  unsigned colorable:colorable1457,39594
  unsigned tintable:tintable1458,39618
  unsigned mirrorable:mirrorable1459,39641
  unsigned flipable:flipable1460,39666
  unsigned mirrored:mirrored1462,39690
  unsigned flipped:flipped1463,39713
  unsigned min:min1464,39735
  unsigned size:size1465,39753
  unsigned max:max1466,39772
  unsigned is_svg:is_svg1468,39791
} stamp_type;1469,39812
#define MAX_STAMP_GROUPS 1471,39827
static unsigned int stamp_group_dir_depth 1473,39857
static int stamp_group 1475,39999
static const char *load_stamp_basedir;load_stamp_basedir1477,40028
static int num_stamp_groups 1478,40067
static int num_stamps[num_stamps1479,40100
static int max_stamps[max_stamps1480,40141
static stamp_type **stamp_data[stamp_data1481,40182
static SDL_Surface *active_stamp;active_stamp1483,40233
static int stamp_colorable(1486,40325
static int stamp_tintable(1492,40476
#define SHAPE_BRUSH_NAME 1499,40571
static int num_brushes,1500,40614
static int num_brushes, num_brushes_max,1500,40614
static int num_brushes, num_brushes_max, shape_brush 1500,40614
static SDL_Surface **img_brushes;img_brushes1501,40672
static int * brushes_frames 1502,40706
static int * brushes_spacing 1503,40742
static short * brushes_directional 1504,40779
static SDL_Surface *img_shapes[img_shapes1506,40823
static SDL_Surface *img_shapes[NUM_SHAPES], *img_shape_names[img_shape_names1506,40823
static SDL_Surface *img_openlabels_open,img_openlabels_open1507,40897
static SDL_Surface *img_openlabels_open, *img_openlabels_erase,img_openlabels_erase1507,40897
  *img_openlabels_slideshow,img_openlabels_slideshow1508,40961
  *img_openlabels_slideshow, *img_openlabels_back,img_openlabels_back1508,40961
  *img_openlabels_slideshow, *img_openlabels_back, *img_openlabels_play,img_openlabels_play1508,40961
  *img_openlabels_next;img_openlabels_next1509,41034
static SDL_Surface *img_tux[img_tux1511,41059
static SDL_Surface *img_mouse,img_mouse1513,41102
static SDL_Surface *img_mouse, *img_mouse_click;img_mouse_click1513,41102
static SDL_Surface *img_paintcan;img_paintcan1516,41186
static SDL_Surface * * img_color_btns;1518,41226
static SDL_Surface *img_color_btn_off;img_color_btn_off1519,41265
static int colors_are_selectable;1522,41312
  BRUSH_DIRECTION_RIGHT,1525,41354
  BRUSH_DIRECTION_DOWN_RIGHT,1526,41379
  BRUSH_DIRECTION_DOWN,1527,41409
  BRUSH_DIRECTION_DOWN_LEFT,1528,41433
  BRUSH_DIRECTION_LEFT,1529,41462
  BRUSH_DIRECTION_UP_LEFT,1530,41486
  BRUSH_DIRECTION_UP,1531,41513
  BRUSH_DIRECTION_UP_RIGHT,1532,41535
  BRUSH_DIRECTION_NONE1533,41563
static SDL_Surface *img_cur_brush;img_cur_brush1536,41590
static int img_cur_brush_frame_w,1537,41625
static int img_cur_brush_frame_w, img_cur_brush_w,1537,41625
static int img_cur_brush_frame_w, img_cur_brush_w, img_cur_brush_h,1537,41625
    img_cur_brush_frames,1538,41693
    img_cur_brush_frames, img_cur_brush_directional,1538,41693
    img_cur_brush_frames, img_cur_brush_directional, img_cur_brush_spacing;1538,41693
static int brush_counter,1539,41769
static int brush_counter, brush_frame;1539,41769
#define NUM_ERASERS 1541,41809
#define ERASER_MIN 1544,41960
#define ERASER_MAX 1545,41982
static unsigned cur_color;1549,42008
static int cur_tool,1550,42035
static int cur_tool, cur_brush,1550,42035
static int cur_tool, cur_brush, old_tool;1550,42035
static int cur_stamp[cur_stamp1551,42077
static int cur_shape,1552,42117
static int cur_shape, cur_magic;1552,42117
static int cur_font,1553,42150
static int cur_font, cur_eraser;1553,42150
static int cursor_left,1554,42183
static int cursor_left, cursor_x,1554,42183
static int cursor_left, cursor_x, cursor_y,1554,42183
static int cursor_left, cursor_x, cursor_y, cursor_textwidth;1554,42183
static int old_cursor_x,1555,42267
static int old_cursor_x, old_cursor_y;1555,42267
static int cur_label,1556,42306
static int cur_label, cur_select;1556,42306
static int been_saved;1557,42340
static char file_id[file_id1558,42363
static char starter_id[starter_id1559,42398
static char template_id[template_id1560,42436
static int brush_scroll;1561,42475
static int stamp_scroll[stamp_scroll1562,42500
static int font_scroll,1563,42543
static int font_scroll, magic_scroll,1563,42543
static int font_scroll, magic_scroll, tool_scroll;1563,42543
static int eraser_scroll,1564,42594
static int eraser_scroll, shape_scroll;1564,42594
static int eraser_sound;1566,42665
static IM_DATA im_data;1568,42691
static wchar_t texttool_str[texttool_str1569,42715
static unsigned int texttool_len;1570,42749
static int tool_avail[tool_avail1572,42784
static int tool_avail[NUM_TOOLS], tool_avail_bak[tool_avail_bak1572,42784
static Uint32 cur_toggle_count;1574,42846
typedef struct edge_type1576,42879
  int y_upper;1578,42906
  float x_intersect,1579,42921
  float x_intersect, dx_per_scan;1579,42921
  struct edge_type *next;next1580,42955
} edge;1581,42981
typedef struct point_type1584,42991
  int x,1586,43019
  int x, y;1586,43019
} point_type;1587,43031
typedef struct fpoint_type1589,43046
  float x,1591,43075
  float x, y;1591,43075
} fpoint_type;1592,43089
{ Left,1595,43118
{ Left, Right,1595,43118
{ Left, Right, Bottom,1595,43118
{ Left, Right, Bottom, Top 1595,43118
{ Left, Right, Bottom, Top } an_edge;1595,43118
#define NUM_EDGES 1596,43156
static SDL_Event scrolltimer_event;1598,43177
int non_left_click_count 1600,43214
typedef struct dirent21603,43246
  struct dirent f;1605,43271
  int place;1606,43290
} dirent2;1607,43303
SDL_Joystick *joystick;joystick1611,43349
static char *progname;progname1620,43635
#define stamp_xor(1649,44626
#define update_stamp_xor(1655,44778
Mix_Chunk * magic_current_snd_ptr;1782,50503
#define MAX_UTF8_CHAR_LENGTH 1816,51697
#define USEREVENT_TEXT_UPDATE 1818,51729
#define USEREVENT_PLAYDESCSOUND 1819,51761
#define TP_SDL_MOUSEBUTTONSCROLL 1821,51796
static int bypass_splash_wait;1823,51850
static void do_wait(1827,51959
static void eat_sdl_events(1877,52863
#define PROMPT_QUIT_TXT 1920,53817
#define PROMPT_QUIT_YES 1923,53929
#define PROMPT_QUIT_NO 1926,54036
#define PROMPT_QUIT_SAVE_TXT 1930,54149
#define PROMPT_QUIT_SAVE_YES 1931,54244
#define PROMPT_QUIT_SAVE_NO 1932,54303
#define PROMPT_OPEN_SAVE_TXT 1935,54443
#define PROMPT_OPEN_SAVE_YES 1936,54513
#define PROMPT_OPEN_SAVE_NO 1937,54572
#define PROMPT_OPEN_UNOPENABLE_TXT 1940,54672
#define PROMPT_OPEN_UNOPENABLE_YES 1943,54782
#define PROMPT_OPEN_NOFILES_TXT 1947,54896
#define PROMPT_OPEN_NOFILES_YES 1948,54970
#define PROMPT_PRINT_NOW_TXT 1951,55057
#define PROMPT_PRINT_NOW_YES 1952,55126
#define PROMPT_PRINT_NOW_NO 1953,55186
#define PROMPT_PRINT_TXT 1956,55301
#define PROMPT_PRINT_YES 1957,55373
#define PROMPT_PRINT_FAILED_TXT 1960,55449
#define PROMPT_PRINT_TOO_SOON_TXT 1963,55628
#define PROMPT_PRINT_TOO_SOON_YES 1964,55701
#define PROMPT_ERASE_TXT 1967,55816
#define PROMPT_ERASE_YES 1968,55877
#define PROMPT_ERASE_NO 1969,55933
#define PROMPT_TIP_LEFTCLICK_TXT 1972,56065
#define PROMPT_TIP_LEFTCLICK_YES 1973,56153
  SHAPE_TOOL_MODE_STRETCH,1978,56214
  SHAPE_TOOL_MODE_ROTATE,1979,56241
  SHAPE_TOOL_MODE_DONE1980,56267
int brushflag,1984,56343
int brushflag,xnew,1984,56343
int brushflag,xnew,ynew,1984,56343
int brushflag,xnew,ynew,eraflag,1984,56343
int brushflag,xnew,ynew,eraflag,lineflag,1984,56343
int brushflag,xnew,ynew,eraflag,lineflag, magicflag;1984,56343
static void mainloop(1988,56423
static void hide_blinking_cursor(5557,151210
static void draw_blinking_cursor(5565,151318
static void brush_draw(5582,151780
void reset_brush_counter_and_frame(5689,153497
void reset_brush_counter(5695,153585
static void blit_brush(5703,153697
#define TINTER_ANYHUE 5781,155615
#define TINTER_NARROW 5782,155691
#define TINTER_NORMAL 5783,155755
#define TINTER_VECTOR 5784,155792
typedef struct multichan5787,155863
  double L,5789,155890
  double L, hue,5789,155890
  double L, hue, sat;5789,155890
  unsigned char or,5790,155965
  unsigned char or, og,5790,155965
  unsigned char or, og, ob,5790,155965
  unsigned char or, og, ob, alpha;5790,155965
} multichan;5791,156023
#define X0 5793,156037
#define Y0 5794,156065
#define Z0 5795,156093
#define u0_prime 5796,156121
#define v0_prime 5797,156179
static void fill_multichan(5800,156239
static double tint_part_1(5835,157180
static void change_colors(5877,158181
static multichan *find_most_saturated(find_most_saturated5988,161448
static void vector_tint_surface(6064,163094
static void tint_surface(6100,164142
static void stamp_draw(6157,165248
static void rec_undo_buffer(6286,168467
static void show_version(6333,169331
static void show_usage(6463,172161
static unsigned compute_default_scale_factor(6547,175163
static void loadbrush_callback(6573,175866
static void load_brush_dir(6664,177937
SDL_Surface *mirror_surface(mirror_surface6673,178174
SDL_Surface *flip_surface(flip_surface6709,178667
static unsigned default_stamp_size;6745,179156
static void loadstamp_finisher(6747,179193
static void set_active_stamp(6821,180882
static void get_stamp_thumb(7064,185488
static void loadstamp_callback(7405,192175
static void load_stamp_dir(7535,195746
static void load_stamps(7545,196002
static int load_user_fonts_stub(7575,196707
volatile long fontconfig_thread_done 7582,196825
int generate_fontconfig_cache_spinner(7584,196868
static int generate_fontconfig_cache_real(7604,197319
static int generate_fontconfig_cache(7635,198204
#define hex2dec(7641,198306
static void signal_handler(7646,198499
static SDL_Surface *do_render_button_label(do_render_button_label7654,198689
static void create_button_labels(7674,199251
static void seticon(7709,200501
static SDL_Cursor *get_cursor(get_cursor7765,201536
static SDL_Surface *loadimage(loadimage7810,202599
static SDL_Surface *do_loadimage(do_loadimage7818,202717
static void draw_toolbar(7880,203815
static void draw_magic(7987,206027
static unsigned colors_state 8126,209350
static unsigned draw_colors(8128,209418
static void draw_brushes(8214,211897
static void draw_fonts(8308,213967
static void draw_stamps(8616,221684
static void draw_shapes(8917,228999
static void draw_erasers(9002,230784
static void draw_none(9117,233118
static SDL_Surface *thumbnail(thumbnail9139,233494
static SDL_Surface *thumbnail2(thumbnail29145,233654
static SDL_Surface *zoom(zoom9320,237308
static void xorpixel(9462,241146
static void do_undo(9501,242153
static void do_redo(9569,243366
static void render_brush(9620,244385
static void line_xor(9719,247072
static void rect_xor(9797,248108
static void do_eraser(9832,248743
static void reset_avail_tools(9948,251056
static void disable_avail_tools(10027,252413
static void enable_avail_tools(10041,252663
static int compare_dirent2s(10054,252837
static void draw_tux_text(10069,253159
static int latest_tux;10075,253316
static const char * latest_tux_text;10076,253339
static int latest_r2l;10077,253376
static Uint8 latest_locale_text;10078,253399
static void redraw_tux_text(10080,253433
static void draw_tux_text_ex(10085,253553
static void wordwrap_text(10174,255842
static void wordwrap_text_ex(10181,256050
static void playstampdesc(10586,264856
static Mix_Chunk *loadsound_extra(loadsound_extra10609,265360
static Mix_Chunk *loadsound(loadsound10704,267930
static Mix_Chunk *loaddescsound(loaddescsound10709,268027
static void strip_trailing_whitespace(10719,268176
static char *loaddesc(loaddesc10733,268373
static double loadinfo(10831,269924
static int SDLCALL NondefectiveBlit(10941,272138
static void autoscale_copy_smear_free(11006,273524
static void load_starter_id(11082,275327
static void load_starter(11171,277200
static void load_template(11346,281599
static void load_current(11426,283399
static int make_directory(11525,285459
static void save_current(11548,285928
static int do_prompt(11583,286557
static int do_prompt_snd(11590,286761
static int do_prompt_image(11597,286996
static int do_prompt_image_snd(11606,287294
static int do_prompt_image_flash(11616,287631
#define PROMPT_LEFT 11626,287965
#define PROMPT_W 11627,287988
static int do_prompt_image_flash_snd(11629,288010
static void cleanup(12056,297219
static void free_surface(12338,303330
static void free_surface_array(12348,303485
static void do_shape(12392,304194
static int shape_rotation(12621,308130
static int brush_rotation(12646,308610
#define PROMPT_SAVE_OVER_TXT 12657,308841
#define PROMPT_SAVE_OVER_YES 12661,309030
#define PROMPT_SAVE_OVER_NO 12665,309232
static int do_save(12670,309331
static void set_chunk_data(12894,314348
#define open_memstream 12927,315191
static void do_png_embed_data(12930,315265
static int do_png_save(13328,328479
static void get_new_file_id(13453,331304
static int do_quit(13469,331579
#define PLACE_COLOR_PALETTE 13519,332650
#define PLACE_SAVED_DIR 13520,332683
#define PLACE_PERSONAL_STARTERS_DIR 13521,332709
#define PLACE_STARTERS_DIR 13522,332747
#define PLACE_PERSONAL_TEMPLATES_DIR 13523,332776
#define PLACE_TEMPLATES_DIR 13524,332815
#define NUM_PLACES_TO_LOOK 13525,332845
static int do_open(13531,332970
static int do_slideshow(14625,363749
static void play_slideshow(15374,381120
static void draw_selection_digits(15599,386057
static void wait_for_sfx(15649,386851
#define STIPLE_W 15667,387146
#define STIPLE_H 15668,387165
static char stiple[stiple15669,387184
#define STIPLE_W 15673,387262
#define STIPLE_H 15674,387281
static char stiple[stiple15675,387300
#define STIPLE_W 15679,387366
#define STIPLE_H 15680,387386
static char stiple[stiple15681,387406
static unsigned char *stamp_outline_data;stamp_outline_data15692,387634
static int stamp_outline_w,15693,387676
static int stamp_outline_w, stamp_outline_h;15693,387676
static void update_stamp_xor(15695,387722
static void stamp_xor(15785,389860
static void rgbtohsv(15808,390421
static void hsvtorgb(15849,391123
static void print_image(15916,391982
void do_print(15959,393133
static void do_render_cur_text(16038,394963
static char *uppercase(uppercase16255,400856
static wchar_t *uppercase_w(uppercase_w16283,401555
static char *textdir(textdir16303,401934
static Uint32 scrolltimer_callback(16370,403104
static void control_drawtext_timer(16389,403488
static Uint32 drawtext_callback(16424,404203
static char *debug_gettext(debug_gettext16436,404377
static const char *great_str(great_str16450,404624
static int charsize(16457,404749
static void draw_image_title(16471,404923
static void handle_keymouse(16484,405248
static void handle_active(16529,406327
static char *remove_slash(remove_slash16550,406701
static void anti_carriage_return(16592,407545
static SDL_Surface *duplicate_surface(duplicate_surface16623,408167
static void mirror_starter(16644,408591
static void flip_starter(16711,409581
static int valid_click(16778,410565
static int in_circle(16787,410725
static int in_circle_rad(16795,410845
static int paintsound(16803,410980
static SDL_Surface * load_svg(16820,411293
static SDL_Surface * load_svg(16980,415311
static float pick_best_scape(17159,419375
static SDL_Surface * myIMG_Load(17246,421466
static SDL_Surface * load_kpx(17258,421785
static void load_magic_plugins(17286,422242
static int magic_sort(17687,435480
static void update_progress_bar(17696,435643
static void magic_line_func(17701,435715
static void special_notify(17783,437240
static void magic_stopsound(17815,437808
static void magic_playsound(17825,437931
static Uint8 magic_linear_to_sRGB(17867,438743
static float magic_sRGB_to_linear(17872,438824
static int magic_button_down(17877,438913
static SDL_Surface * magic_scale(17882,438976
static int do_new_dialog(17889,439190
static void reset_touched(19029,469882
static Uint8 magic_touched(19042,470062
static int do_color_picker(19055,470285
static void magic_putpixel(19487,482585
static Uint32 magic_getpixel(19492,482735
static void magic_switchout(19498,482875
static void magic_switchin(19510,483212
static int magic_modeint(19528,483686
static void add_label_node(19538,483837
static struct label_node* search_label_list(19607,485677
static void rec_undo_label(19738,491028
static void do_undo_label_node(19776,492259
static void do_redo_label_node(19800,493063
static void simply_render_node(19828,493867
static void render_all_nodes_starting_at(19907,495878
static void derender_node(19927,496420
static void delete_label_list(19942,496815
static void myblit(19963,497416
static void load_info_about_label_surface(20001,499016
static void set_label_fonts(20176,505620
static void tmp_apply_uncommited_text(20235,507762
static void undo_tmp_applied_text(20284,509888
static void highlight_label_nodes(20320,511209
static void cycle_highlighted_label_node(20400,514231
static int are_labels(20423,515051
int chunk_is_valid(20439,515440
Bytef *get_chunk_data(get_chunk_data20505,517278
void load_embedded_data(20584,519297
static void show_available_papersizes(20928,529343
static void parse_file_options(20962,529972
static void parse_argv_options(21001,531067
static void tmpcfg_merge(21062,532484
static void setup_config(21075,532846
#define SETBOOL(21174,535594
#undef SETBOOL21203,536421
static void chdir_to_binary(21273,538665
static void setup_colors(21308,539594
static void do_lock_file(21464,543308
static void setup(21547,545102
static void claim_to_be_ready(22480,570527
int main(22588,572942

src/macosx_print.h,41
@interface PrintSheetController 33,1173

src/playsound.c,135
Mix_Chunk *sounds[sounds29,912
int mute;32,951
int use_sound 33,961
static int old_sound[old_sound34,980
void playsound(36,1027

src/rgblinear.c,38
unsigned char linear_to_sRGB(33,1069

src/progressbar.h,30
#define PROGRESSBAR_H32,1034

src/tip_tux.h,230
#define TIP_TUX_H32,1008
  TUX_DEFAULT,38,1067
  TUX_KISS,39,1082
  TUX_BORED,40,1094
  TUX_GREAT,41,1107
  TUX_OOPS,42,1120
  TUX_WAIT,43,1132
  NUM_TIP_TUX44,1144
const char *const tux_img_fnames[tux_img_fnames50,1185

src/win32_print.c,1152
#define NOREF(34,1144
#define GETHINST(35,1178
#define MIR(36,1249
static HDC hDCprinter 38,1296
static SDL_Surface *make24bitDIB(make24bitDIB40,1327
static int GetDefaultPrinterStrings(89,2510
#define dmDeviceNameSize 118,3169
static HANDLE LoadCustomPrinterHDEVMODE(120,3201
static int SaveCustomPrinterHDEVMODE(188,4688
static int FileExists(211,5312
static int GetCustomPrinterDC(223,5482
static HDC GetDefaultPrinterDC(264,6288
static int GetPrinterDC(274,6515
int IsPrinterAvailable(287,6737
#define STRETCH_TO_FIT 292,6831
#define SCALE_TO_FIT 293,6857
const char *SurfacePrint(SurfacePrint295,6884
static HRESULT ReadRegistry(485,11380
static char *remove_slash(remove_slash510,11925
char *GetDefaultSaveDir(GetDefaultSaveDir528,12296
char *GetSystemFontDir(GetSystemFontDir551,12876
static char *GetUserTempDir(GetUserTempDir571,13366
char *get_temp_fname(get_temp_fname582,13504
static HHOOK g_hKeyboardHook 596,13762
static int   g_bWindowActive 597,13799
LRESULT CALLBACK LowLevelKeyboardProc(599,13834
int InstallKeyboardHook(622,14394
int RemoveKeyboardHook(630,14604
void SetActivationState(639,14755

src/tools.h,690
  TOOL_BRUSH,38,1036
  TOOL_STAMP,39,1050
  TOOL_LINES,40,1064
  TOOL_SHAPES,41,1078
  TOOL_TEXT,42,1093
  TOOL_LABEL,43,1106
  TOOL_NA,44,1120
  TOOL_MAGIC,45,1131
  TOOL_UNDO,46,1145
  TOOL_REDO,47,1158
  TOOL_ERASER,48,1171
  TOOL_NEW,49,1186
  TOOL_OPEN,50,1198
  TOOL_SAVE,51,1211
  TOOL_PRINT,52,1224
  TOOL_QUIT,53,1238
  NUM_TOOLS54,1251
const char *const tool_names[tool_names60,1287
const char *const tool_tips[tool_tips113,2227
#define TIP_LINE_START 164,4013
#define TIP_SHAPE_START 167,4170
#define TIP_SHAPE_NEXT 170,4349
#define TIP_NEW_ABORT 173,4526
const char *const tool_img_fnames[tool_img_fnames178,4636
const int tool_tux[tool_tux200,5349

src/playsound.h,145
#define PLAYSOUND_H25,874
#define SNDPOS_LEFT 31,956
#define SNDPOS_CENTER 32,981
#define SNDPOS_RIGHT 33,1008
#define SNDDIST_NEAR 35,1035

src/progressbar.c,164
SDL_Surface *img_progress;img_progress34,1057
int progress_bar_disabled,35,1084
int progress_bar_disabled, prog_bar_ctr;35,1084
void show_progress_bar(37,1126

src/cursor.c,849
#define UNUSED(33,1026
SDL_Cursor *cursor_hand,cursor_hand35,1061
SDL_Cursor *cursor_hand, *cursor_arrow,cursor_arrow35,1061
SDL_Cursor *cursor_hand, *cursor_arrow, *cursor_watch,cursor_watch35,1061
  *cursor_up,cursor_up36,1116
  *cursor_up, *cursor_down,cursor_down36,1116
  *cursor_up, *cursor_down, *cursor_tiny,cursor_tiny36,1116
  *cursor_up, *cursor_down, *cursor_tiny, *cursor_crosshair,cursor_crosshair36,1116
  *cursor_brush,cursor_brush37,1177
  *cursor_brush, *cursor_wand,cursor_wand37,1177
  *cursor_brush, *cursor_wand, *cursor_insertion,cursor_insertion37,1177
  *cursor_brush, *cursor_wand, *cursor_insertion, *cursor_rotate;cursor_rotate37,1177
int hide_cursor 40,1261
int hide_cursor;42,1288
int no_fancy_cursors 47,1399
int no_fancy_cursors;49,1431
void do_setcursor(52,1461
void free_cursor(84,2233

src/im.h,227
#define TUXPAINT_IM_H26,879
typedef struct IM_DATA 36,1030
  int lang;37,1055
  wchar_t s[s38,1123
  const char* tip_text;39,1189
  wchar_t buf[buf42,1316
  int redraw;43,1366
  int request;44,1434
} IM_DATA;45,1478

src/great.h,73
#define GREAT_H32,1031
const char *const great_strs[great_strs35,1049

src/rgblinear.h,216
#define RGBLINEAR_H32,1047
static const float sRGB_to_linear_table[sRGB_to_linear_table40,1303
static const unsigned char linear_to_sRGB_table[linear_to_sRGB_table81,4049
unsigned char linear_to_sRGB(311,21631

src/fonts.h,1250
#define FONTS_H26,860
#define FORKED_FONTS30,961
#undef FORKED_FONTS32,1022
#undef FORKED_FONTS35,1066
#define PANGO_DEFAULT_FONT 46,1185
#define SDL_CreateThread(62,1737
#define SDL_WaitThread(63,1791
#define SDL_Thread 64,1856
#define SDL_mutex 65,1879
#define SDL_CreateMutex(66,1901
#define SDL_DestroyMutex(67,1958
#define SDL_mutexP(68,1989
#define SDL_mutexV(69,2027
  FONT_TYPE_PANGO,96,2642
  FONT_TYPE_TTF98,2668
typedef struct TuxPaint_Font_s 101,2688
  SDLPango_Context * pango_context;103,2741
  int typ;105,2784
  TTF_Font * ttf_font;106,2795
  int height;107,2818
} TuxPaint_Font;108,2832
static int text_sizes[text_sizes136,3742
#define MIN_TEXT_SIZE 144,3870
#define MAX_TEXT_SIZE 145,3895
typedef struct style_info148,4014
  char *filename;filename150,4042
  char *directory;directory151,4060
  char *family;family152,4079
  char *style;style153,4134
  int italic;154,4184
  int boldness;155,4198
  int score;156,4214
  int truetype;157,4227
} style_info;158,4280
typedef struct family_info161,4322
  char *directory;directory163,4351
  char *family;family164,4370
  char *filename[filename165,4386
  TuxPaint_Font *handle;handle166,4407
  int score;167,4432
} family_info;168,4445

src/tuxpaint.c.0001accessnew.c,33032
# define VIDEO_BPP 35,1118
# define VIDEO_BPP 39,1169
# define VIDEO_BPP 46,1361
#define PRINTMETHOD_PS	55,1535
#define MAX_PATH 60,1748
# define LOW_QUALITY_THUMBNAILS68,1837
# define LOW_QUALITY_STAMP_OUTLINE69,1869
# define NO_PROMPT_SHADOWS70,1904
# define USE_HWSURFACE71,1931
#define GAMMA_CORRECTED_THUMBNAILS81,2226
#define COLORSEL_DISABLE 91,2537
#define COLORSEL_ENABLE 92,2611
#define COLORSEL_CLOBBER 93,2671
#define COLORSEL_REFRESH 94,2730
#define COLORSEL_CLOBBER_WIPE 95,2799
#define COLORSEL_FORCE_REDRAW 96,2885
#define TPAINT_AMASK 101,3168
#define TPAINT_AMASK 103,3206
typedef struct scaleparams109,3334
  unsigned numer,111,3363
  unsigned numer, denom;111,3363
} scaleparams;112,3388
static scaleparams scaletable[scaletable114,3404
#define HARD_MIN_STAMP_SIZE 148,4167
#define HARD_MAX_STAMP_SIZE 149,4224
#define MIN_STAMP_SIZE 151,4300
#define MAX_STAMP_SIZE 152,4378
#define SCALE_LIKE_STAMP(155,4529
#define CUR_STAMP_W 158,4847
#define CUR_STAMP_H 159,4901
#define REPEAT_SPEED 162,4957
#define CURSOR_BLINK_SPEED 163,5024
#define _GNU_SOURCE	167,5115
char *strcasestr(strcasestr190,5743
#define y1 219,6359
#undef y1221,6396
#define FALSE 228,6510
#define TRUE 229,6530
#define gettext_noop(237,6643
#define gettext(242,6701
#define M_PI 247,6769
typedef struct safer_dirent268,7091
  dev_t d_dev;270,7121
  dev_t d_pdev;271,7136
  ino_t d_ino;272,7152
  ino_t d_pino;273,7167
  unsigned short d_reclen;274,7183
  char d_name[d_name275,7210
} safer_dirent;276,7239
#define dirent 277,7255
#define mkdir(314,7770
#define _MATRIX_WHITE_BACK 357,9156
#define MATRIX_WHITE_BACK 358,9203
#define _MATRIX_BLACK_BACK 359,9248
#define MATRIX_BLACK_BACK 360,9295
#define _MATRIX_TRANSPARENT_BACK_BLACK_LETTER 361,9340
#define MATRIX_TRANSPARENT_BACK_BLACK_LETTER 362,9425
#define _MATRIX_TRANSPARENT_BACK_WHITE_LETTER 363,9508
#define MATRIX_TRANSPARENT_BACK_WHITE_LETTER 364,9593
#define _MATRIX_TRANSPARENT_BACK_TRANSPARENT_LETTER 365,9676
#define MATRIX_TRANSPARENT_BACK_TRANSPARENT_LETTER 366,9773
#define FNAME_EXTENSION 427,11540
#define SDL_GetRGBA(470,12372
#define SDL_GetRGB(477,12627
#define SDL_MapRGBA(484,12843
#define SDL_MapRGB(493,13125
#define fmemopen_alternative 505,13526
#undef fmemopen509,13592
FILE * my_fmemopen(513,13684
#define fmemopen 545,14176
  SAVE_OVER_PROMPT,552,14222
  SAVE_OVER_ALWAYS,553,14242
  SAVE_OVER_NO554,14262
  ALTPRINT_MOD,559,14288
  ALTPRINT_ALWAYS,560,14304
  ALTPRINT_NEVER561,14323
  STARTER_OUTLINE,567,14352
  STARTER_SCENE568,14371
  LABEL_OFF,573,14398
  LABEL_LABEL,574,14411
  LABEL_SELECT 575,14426
static int NUM_COLORS;583,14544
static Uint8 * * color_hexes;584,14567
static char * * color_names;585,14597
static void debug(590,14657
static const char *getfilename(getfilename600,14801
  Uint8 rows,624,15203
  Uint8 rows, cols;624,15203
} grid_dims;625,15223
static SDL_Rect r_canvas;628,15322
static SDL_Rect r_tools;629,15373
static SDL_Rect r_sfx;630,15422
static SDL_Rect r_toolopt;631,15445
static SDL_Rect r_colors;632,15498
static SDL_Rect r_ttools;633,15550
static SDL_Rect r_tcolors;634,15626
static SDL_Rect r_ttoolopt;635,15706
static SDL_Rect r_tuxarea;636,15783
static SDL_Rect r_label;637,15827
static int button_w;639,15853
static int button_h;640,15888
static int color_button_w;642,15924
static int color_button_h;643,15964
static grid_dims gd_tools;647,16117
static grid_dims gd_sfx;648,16158
static grid_dims gd_toolopt;649,16183
static grid_dims gd_colors;651,16274
#define HEIGHTOFFSET 653,16318
#define TOOLOFFSET 654,16375
#define PROMPTOFFSETX 655,16418
#define PROMPTOFFSETY 656,16465
#define THUMB_W 658,16507
#define THUMB_H 659,16554
static int WINDOW_WIDTH 662,16630
static int WINDOW_HEIGHT 663,16661
static int WINDOW_WIDTH 666,16764
static int WINDOW_HEIGHT 667,16796
static int WINDOW_WIDTH 669,16834
static int WINDOW_HEIGHT 670,16865
static void setup_normal_screen_layout(677,17053
static void debug_rect(760,19160
#define DR(765,19279
static void debug_dims(767,19313
#define DD(772,19419
static void print_layout(774,19453
#undef DD792,19828
#undef DR793,19838
static void setup_screen_layout(796,19856
static SDL_Surface *screen;screen805,20050
static SDL_Surface *canvas;canvas806,20078
static SDL_Surface *label;label807,20106
static SDL_Surface *save_canvas;save_canvas808,20133
static SDL_Surface *canvas_back;canvas_back809,20166
static SDL_Surface *img_starter,img_starter810,20199
static SDL_Surface *img_starter, *img_starter_bkgd;img_starter_bkgd810,20199
static void update_screen(813,20324
static void update_screen_rect(859,20974
static int hit_test(864,21074
#define HIT(870,21263
static int grid_hit_wh(881,21574
#define GRIDHIT_WH(888,21818
#define GRIDHIT_SURF(893,21993
static int grid_hit_gd(898,22256
#define GRIDHIT_GD(915,22815
static int disable_label 920,23006
static int disable_label;922,23042
static void update_canvas_ex(925,23076
static void update_canvas(959,23863
static int mouseaccessibility 966,23981
static int disable_screensaver;967,24016
static int fullscreen 969,24065
static int fullscreen;971,24098
static int native_screensize;973,24128
static int grab_input;974,24158
static int rotate_orientation;975,24181
static int disable_print;977,24213
static int print_delay;978,24239
static int use_print_config 979,24263
static int alt_print_command_default 980,24296
static int want_alt_printcommand;981,24349
static int wheely 983,24384
static int keymouse;984,24407
static int mouse_x;985,24428
static int mouse_y;986,24448
static int no_button_distinction;987,24468
static int mousekey_up;988,24502
static int mousekey_down;989,24526
static int mousekey_left;990,24552
static int mousekey_right;991,24578
static int button_down;992,24605
static int scrolling;993,24629
static int promptless_save 995,24652
static int disable_quit;996,24699
static int noshortcuts;998,24725
static int disable_save;999,24749
static int ok_to_use_lockfile 1000,24774
static int start_blank;1001,24809
static int autosave_on_quit;1002,24833
static int dont_do_xor;1004,24863
static int dont_load_stamps;1005,24887
static int mirrorstamps;1006,24916
static int disable_stamp_controls;1007,24941
static int stamp_size_override 1008,24976
static int simple_shapes 1011,25031
static int simple_shapes;1013,25067
static int only_uppercase;1015,25100
static int disable_magic_controls;1017,25128
static int starter_mirrored;1019,25164
static int starter_flipped;1020,25193
static int starter_personal;1021,25221
static int template_personal;1022,25250
static int starter_modified;1023,25280
static Uint8 canvas_color_r,1025,25310
static Uint8 canvas_color_r, canvas_color_g,1025,25310
static Uint8 canvas_color_r, canvas_color_g, canvas_color_b;1025,25310
static Uint8 * touched;1026,25371
static int shape_radius;1028,25396
typedef struct label_node1031,25501
  unsigned int save_texttool_len;1033,25529
  wchar_t save_texttool_str[save_texttool_str1034,25563
  SDL_Color save_color;1035,25597
  int save_width;1036,25621
  int save_height;1037,25639
  Uint16 save_x;1038,25658
  Uint16 save_y;1039,25675
  int save_cur_font;1040,25692
  char * save_font_type;1041,25713
  int save_text_state;1042,25738
  unsigned save_text_size;1043,25761
  int save_undoid;1044,25788
  int is_enabled;1045,25807
  struct label_node* disables;1046,25825
  struct label_node* next_to_up_label_node;1047,25856
  struct label_node* next_to_down_label_node;1048,25900
  SDL_Surface* label_node_surface;1049,25946
} label_node;1050,25981
static struct label_node* start_label_node;1053,25997
static struct label_node* current_label_node;1054,26041
static struct label_node* first_label_node_in_redo_stack;1055,26087
static struct label_node* label_node_to_edit;1056,26145
static struct label_node* highlighted_label_node;1057,26191
static unsigned int select_texttool_len;1059,26242
static wchar_t select_texttool_str[select_texttool_str1060,26283
static unsigned select_color;1061,26324
static int select_width;1062,26354
static int select_height;1063,26379
static Uint16 select_x;1064,26405
static Uint16 select_y;1065,26429
static int select_cur_font;1066,26453
static int select_text_state;1067,26481
static unsigned select_text_size;1068,26511
static int coming_from_undo_or_redo 1069,26545
typedef struct magic_funcs_s 1107,27665
  int (*get_tool_count)get_tool_count1108,27696
  char * (*get_name)get_name1109,27734
  SDL_Surface * (*get_icon)get_icon1110,27774
  char * (*get_description)get_description1111,27821
  int (*requires_colors)requires_colors1112,27873
  int (*modes)modes1113,27917
  void (*set_color)set_color1114,27951
  int (*init)init1115,28006
  Uint32 (*api_version)api_version1116,28034
  void (*shutdown)shutdown1117,28065
  void (*click)click1118,28098
  void (*drag)drag1119,28190
  void (*release)release1120,28286
  void (*switchin)switchin1121,28375
  void (*switchout)switchout1122,28448
} magic_funcs_t;1123,28522
typedef struct magic_s 1126,28541
  int place;1127,28566
  int handle_idx;1128,28579
  int idx;1129,28686
  int mode;1130,28788
  int avail_modes;1131,28841
  int colors;1132,28906
  char * name;1133,28960
  char * tip[tip1134,29000
  SDL_Surface * img_icon;1135,29080
  SDL_Surface * img_name;1136,29106
} magic_t;1137,29132
static int num_plugin_files;1142,29186
static void * magic_handle[magic_handle1143,29266
static magic_funcs_t magic_funcs[magic_funcs1144,29378
static magic_t magics[magics1146,29461
static int num_magics;1147,29489
  MAGIC_PLACE_GLOBAL,1150,29607
  MAGIC_PLACE_LOCAL,1151,29629
  MAGIC_PLACE_ALLUSERS,1153,29667
  NUM_MAGIC_PLACES1155,29698
static magic_api *magic_api_struct;magic_api_struct1158,29721
static const char *printcommand printcommand1170,30263
static const char *altprintcommand altprintcommand1171,30311
static const char *papersize;papersize1172,30365
  UNDO_STARTER_NONE,1191,30869
  UNDO_STARTER_MIRRORED,1192,30890
  UNDO_STARTER_FLIPPED1193,30915
#define NUM_UNDO_BUFS 1196,30942
static SDL_Surface *undo_bufs[undo_bufs1197,30967
static int undo_starters[undo_starters1198,31013
static int cur_undo,1199,31054
static int cur_undo, oldest_undo,1199,31054
static int cur_undo, oldest_undo, newest_undo;1199,31054
static int text_undo[text_undo1200,31101
static int have_to_rec_label_node;1201,31138
static int have_to_rec_label_node_back;1202,31173
static SDL_Surface *img_title,img_title1204,31214
static SDL_Surface *img_title, *img_title_credits,img_title_credits1204,31214
static SDL_Surface *img_title, *img_title_credits, *img_title_tuxpaint;img_title_tuxpaint1204,31214
static SDL_Surface *img_btn_up,img_btn_up1205,31286
static SDL_Surface *img_btn_up, *img_btn_down,img_btn_down1205,31286
static SDL_Surface *img_btn_up, *img_btn_down, *img_btn_off;img_btn_off1205,31286
static SDL_Surface *img_btnsm_up,img_btnsm_up1206,31347
static SDL_Surface *img_btnsm_up, *img_btnsm_off;img_btnsm_off1206,31347
static SDL_Surface *img_prev,img_prev1207,31397
static SDL_Surface *img_prev, *img_next;img_next1207,31397
static SDL_Surface *img_mirror,img_mirror1208,31438
static SDL_Surface *img_mirror, *img_flip;img_flip1208,31438
static SDL_Surface *img_dead40x40;img_dead40x401209,31481
static SDL_Surface *img_black,img_black1210,31516
static SDL_Surface *img_black, *img_grey;img_grey1210,31516
static SDL_Surface *img_yes,img_yes1211,31558
static SDL_Surface *img_yes, *img_no;img_no1211,31558
static SDL_Surface *img_sfx,img_sfx1212,31596
static SDL_Surface *img_sfx, *img_speak;img_speak1212,31596
static SDL_Surface *img_open,img_open1213,31637
static SDL_Surface *img_open, *img_erase,img_erase1213,31637
static SDL_Surface *img_open, *img_erase, *img_back,img_back1213,31637
static SDL_Surface *img_open, *img_erase, *img_back, *img_trash;img_trash1213,31637
static SDL_Surface *img_slideshow,img_slideshow1214,31702
static SDL_Surface *img_slideshow, *img_play,img_play1214,31702
static SDL_Surface *img_slideshow, *img_play, *img_select_digits;img_select_digits1214,31702
static SDL_Surface *img_printer,img_printer1215,31768
static SDL_Surface *img_printer, *img_printer_wait;img_printer_wait1215,31768
static SDL_Surface *img_save_over,img_save_over1216,31820
static SDL_Surface *img_save_over, *img_popup_arrow;img_popup_arrow1216,31820
static SDL_Surface *img_cursor_up,img_cursor_up1217,31873
static SDL_Surface *img_cursor_up, *img_cursor_down;img_cursor_down1217,31873
static SDL_Surface *img_cursor_starter_up,img_cursor_starter_up1218,31926
static SDL_Surface *img_cursor_starter_up, *img_cursor_starter_down;img_cursor_starter_down1218,31926
static SDL_Surface *img_scroll_up,img_scroll_up1219,31995
static SDL_Surface *img_scroll_up, *img_scroll_down;img_scroll_down1219,31995
static SDL_Surface *img_scroll_up_off,img_scroll_up_off1220,32048
static SDL_Surface *img_scroll_up_off, *img_scroll_down_off;img_scroll_down_off1220,32048
static SDL_Surface *img_grow,img_grow1221,32109
static SDL_Surface *img_grow, *img_shrink;img_shrink1221,32109
static SDL_Surface *img_magic_paint,img_magic_paint1222,32152
static SDL_Surface *img_magic_paint, *img_magic_fullscreen;img_magic_fullscreen1222,32152
static SDL_Surface *img_bold,img_bold1223,32212
static SDL_Surface *img_bold, *img_italic;img_italic1223,32212
static SDL_Surface *img_label,img_label1224,32255
static SDL_Surface *img_label, *img_label_select;img_label_select1224,32255
static SDL_Surface *img_color_picker,img_color_picker1225,32305
static SDL_Surface *img_color_picker, *img_color_picker_thumb,img_color_picker_thumb1225,32305
static SDL_Surface *img_color_picker, *img_color_picker_thumb, *img_paintwell;img_paintwell1225,32305
static int color_picker_x,1226,32384
static int color_picker_x, color_picker_y;1226,32384
static SDL_Surface *img_title_on,img_title_on1228,32428
static SDL_Surface *img_title_on, *img_title_off,img_title_off1228,32428
  *img_title_large_on,img_title_large_on1229,32478
  *img_title_large_on, *img_title_large_off;img_title_large_off1229,32478
static SDL_Surface *img_title_names[img_title_names1230,32523
static SDL_Surface *img_tools[img_tools1231,32572
static SDL_Surface *img_tools[NUM_TOOLS], *img_tool_names[img_tool_names1231,32572
static SDL_Surface *render_text(render_text1244,32955
static Uint16 *wcstou16(wcstou161303,34544
static SDL_Surface *render_text_w(render_text_w1322,35043
typedef struct stamp_type1431,38993
  char *stampname;stampname1433,39021
  char *stxt;stxt1434,39040
  Uint8 locale_text;1435,39054
  Mix_Chunk *ssnd;ssnd1437,39091
  Mix_Chunk *sdesc;sdesc1438,39110
  SDL_Surface *thumbnail;thumbnail1441,39138
  unsigned thumb_mirrored:thumb_mirrored1442,39164
  unsigned thumb_flipped:thumb_flipped1443,39193
  unsigned thumb_mirrored_flipped:thumb_mirrored_flipped1444,39221
  unsigned no_premirror:no_premirror1445,39258
  unsigned no_preflip:no_preflip1446,39285
  unsigned no_premirrorflip:no_premirrorflip1447,39310
  unsigned processed:processed1449,39342
  unsigned no_sound:no_sound1451,39412
  unsigned no_descsound:no_descsound1452,39435
  unsigned no_txt:no_txt1453,39462
  unsigned tinter:tinter1456,39573
  unsigned colorable:colorable1457,39594
  unsigned tintable:tintable1458,39618
  unsigned mirrorable:mirrorable1459,39641
  unsigned flipable:flipable1460,39666
  unsigned mirrored:mirrored1462,39690
  unsigned flipped:flipped1463,39713
  unsigned min:min1464,39735
  unsigned size:size1465,39753
  unsigned max:max1466,39772
  unsigned is_svg:is_svg1468,39791
} stamp_type;1469,39812
#define MAX_STAMP_GROUPS 1471,39827
static unsigned int stamp_group_dir_depth 1473,39857
static int stamp_group 1475,39999
static const char *load_stamp_basedir;load_stamp_basedir1477,40028
static int num_stamp_groups 1478,40067
static int num_stamps[num_stamps1479,40100
static int max_stamps[max_stamps1480,40141
static stamp_type **stamp_data[stamp_data1481,40182
static SDL_Surface *active_stamp;active_stamp1483,40233
static int stamp_colorable(1486,40325
static int stamp_tintable(1492,40476
#define SHAPE_BRUSH_NAME 1499,40571
static int num_brushes,1500,40614
static int num_brushes, num_brushes_max,1500,40614
static int num_brushes, num_brushes_max, shape_brush 1500,40614
static SDL_Surface **img_brushes;img_brushes1501,40672
static int * brushes_frames 1502,40706
static int * brushes_spacing 1503,40742
static short * brushes_directional 1504,40779
static SDL_Surface *img_shapes[img_shapes1506,40823
static SDL_Surface *img_shapes[NUM_SHAPES], *img_shape_names[img_shape_names1506,40823
static SDL_Surface *img_openlabels_open,img_openlabels_open1507,40897
static SDL_Surface *img_openlabels_open, *img_openlabels_erase,img_openlabels_erase1507,40897
  *img_openlabels_slideshow,img_openlabels_slideshow1508,40961
  *img_openlabels_slideshow, *img_openlabels_back,img_openlabels_back1508,40961
  *img_openlabels_slideshow, *img_openlabels_back, *img_openlabels_play,img_openlabels_play1508,40961
  *img_openlabels_next;img_openlabels_next1509,41034
static SDL_Surface *img_tux[img_tux1511,41059
static SDL_Surface *img_mouse,img_mouse1513,41102
static SDL_Surface *img_mouse, *img_mouse_click;img_mouse_click1513,41102
static SDL_Surface *img_paintcan;img_paintcan1516,41186
static SDL_Surface * * img_color_btns;1518,41226
static SDL_Surface *img_color_btn_off;img_color_btn_off1519,41265
static int colors_are_selectable;1522,41312
  BRUSH_DIRECTION_RIGHT,1525,41354
  BRUSH_DIRECTION_DOWN_RIGHT,1526,41379
  BRUSH_DIRECTION_DOWN,1527,41409
  BRUSH_DIRECTION_DOWN_LEFT,1528,41433
  BRUSH_DIRECTION_LEFT,1529,41462
  BRUSH_DIRECTION_UP_LEFT,1530,41486
  BRUSH_DIRECTION_UP,1531,41513
  BRUSH_DIRECTION_UP_RIGHT,1532,41535
  BRUSH_DIRECTION_NONE1533,41563
static SDL_Surface *img_cur_brush;img_cur_brush1536,41590
static int img_cur_brush_frame_w,1537,41625
static int img_cur_brush_frame_w, img_cur_brush_w,1537,41625
static int img_cur_brush_frame_w, img_cur_brush_w, img_cur_brush_h,1537,41625
    img_cur_brush_frames,1538,41693
    img_cur_brush_frames, img_cur_brush_directional,1538,41693
    img_cur_brush_frames, img_cur_brush_directional, img_cur_brush_spacing;1538,41693
static int brush_counter,1539,41769
static int brush_counter, brush_frame;1539,41769
#define NUM_ERASERS 1541,41809
#define ERASER_MIN 1544,41960
#define ERASER_MAX 1545,41982
static unsigned cur_color;1549,42008
static int cur_tool,1550,42035
static int cur_tool, cur_brush,1550,42035
static int cur_tool, cur_brush, old_tool;1550,42035
static int cur_stamp[cur_stamp1551,42077
static int cur_shape,1552,42117
static int cur_shape, cur_magic;1552,42117
static int cur_font,1553,42150
static int cur_font, cur_eraser;1553,42150
static int cursor_left,1554,42183
static int cursor_left, cursor_x,1554,42183
static int cursor_left, cursor_x, cursor_y,1554,42183
static int cursor_left, cursor_x, cursor_y, cursor_textwidth;1554,42183
static int old_cursor_x,1555,42267
static int old_cursor_x, old_cursor_y;1555,42267
static int cur_label,1556,42306
static int cur_label, cur_select;1556,42306
static int been_saved;1557,42340
static char file_id[file_id1558,42363
static char starter_id[starter_id1559,42398
static char template_id[template_id1560,42436
static int brush_scroll;1561,42475
static int stamp_scroll[stamp_scroll1562,42500
static int font_scroll,1563,42543
static int font_scroll, magic_scroll,1563,42543
static int font_scroll, magic_scroll, tool_scroll;1563,42543
static int eraser_scroll,1564,42594
static int eraser_scroll, shape_scroll;1564,42594
static int eraser_sound;1566,42665
static IM_DATA im_data;1568,42691
static wchar_t texttool_str[texttool_str1569,42715
static unsigned int texttool_len;1570,42749
static int tool_avail[tool_avail1572,42784
static int tool_avail[NUM_TOOLS], tool_avail_bak[tool_avail_bak1572,42784
static Uint32 cur_toggle_count;1574,42846
typedef struct edge_type1576,42879
  int y_upper;1578,42906
  float x_intersect,1579,42921
  float x_intersect, dx_per_scan;1579,42921
  struct edge_type *next;next1580,42955
} edge;1581,42981
typedef struct point_type1584,42991
  int x,1586,43019
  int x, y;1586,43019
} point_type;1587,43031
typedef struct fpoint_type1589,43046
  float x,1591,43075
  float x, y;1591,43075
} fpoint_type;1592,43089
{ Left,1595,43118
{ Left, Right,1595,43118
{ Left, Right, Bottom,1595,43118
{ Left, Right, Bottom, Top 1595,43118
{ Left, Right, Bottom, Top } an_edge;1595,43118
#define NUM_EDGES 1596,43156
static SDL_Event scrolltimer_event;1598,43177
int non_left_click_count 1600,43214
typedef struct dirent21603,43246
  struct dirent f;1605,43271
  int place;1606,43290
} dirent2;1607,43303
static char *progname;progname1619,43611
#define stamp_xor(1648,44602
#define update_stamp_xor(1654,44754
Mix_Chunk * magic_current_snd_ptr;1781,50479
#define MAX_UTF8_CHAR_LENGTH 1815,51673
#define USEREVENT_TEXT_UPDATE 1817,51705
#define USEREVENT_PLAYDESCSOUND 1818,51737
#define TP_SDL_MOUSEBUTTONSCROLL 1820,51772
static int bypass_splash_wait;1822,51826
static void do_wait(1826,51935
static void eat_sdl_events(1876,52839
#define PROMPT_QUIT_TXT 1919,53793
#define PROMPT_QUIT_YES 1922,53905
#define PROMPT_QUIT_NO 1925,54012
#define PROMPT_QUIT_SAVE_TXT 1929,54125
#define PROMPT_QUIT_SAVE_YES 1930,54220
#define PROMPT_QUIT_SAVE_NO 1931,54279
#define PROMPT_OPEN_SAVE_TXT 1934,54419
#define PROMPT_OPEN_SAVE_YES 1935,54489
#define PROMPT_OPEN_SAVE_NO 1936,54548
#define PROMPT_OPEN_UNOPENABLE_TXT 1939,54648
#define PROMPT_OPEN_UNOPENABLE_YES 1942,54758
#define PROMPT_OPEN_NOFILES_TXT 1946,54872
#define PROMPT_OPEN_NOFILES_YES 1947,54946
#define PROMPT_PRINT_NOW_TXT 1950,55033
#define PROMPT_PRINT_NOW_YES 1951,55102
#define PROMPT_PRINT_NOW_NO 1952,55162
#define PROMPT_PRINT_TXT 1955,55277
#define PROMPT_PRINT_YES 1956,55349
#define PROMPT_PRINT_FAILED_TXT 1959,55425
#define PROMPT_PRINT_TOO_SOON_TXT 1962,55604
#define PROMPT_PRINT_TOO_SOON_YES 1963,55677
#define PROMPT_ERASE_TXT 1966,55792
#define PROMPT_ERASE_YES 1967,55853
#define PROMPT_ERASE_NO 1968,55909
#define PROMPT_TIP_LEFTCLICK_TXT 1971,56041
#define PROMPT_TIP_LEFTCLICK_YES 1972,56129
  SHAPE_TOOL_MODE_STRETCH,1977,56190
  SHAPE_TOOL_MODE_ROTATE,1978,56217
  SHAPE_TOOL_MODE_DONE1979,56243
int brushflag,1983,56319
int brushflag,xnew,1983,56319
int brushflag,xnew,ynew,1983,56319
int brushflag,xnew,ynew,eraflag,1983,56319
int brushflag,xnew,ynew,eraflag,lineflag,1983,56319
int brushflag,xnew,ynew,eraflag,lineflag, magicflag;1983,56319
static void mainloop(1987,56399
static void hide_blinking_cursor(5450,148414
static void draw_blinking_cursor(5458,148522
static void brush_draw(5475,148984
void reset_brush_counter_and_frame(5582,150701
void reset_brush_counter(5588,150789
static void blit_brush(5596,150901
#define TINTER_ANYHUE 5674,152819
#define TINTER_NARROW 5675,152895
#define TINTER_NORMAL 5676,152959
#define TINTER_VECTOR 5677,152996
typedef struct multichan5680,153067
  double L,5682,153094
  double L, hue,5682,153094
  double L, hue, sat;5682,153094
  unsigned char or,5683,153169
  unsigned char or, og,5683,153169
  unsigned char or, og, ob,5683,153169
  unsigned char or, og, ob, alpha;5683,153169
} multichan;5684,153227
#define X0 5686,153241
#define Y0 5687,153269
#define Z0 5688,153297
#define u0_prime 5689,153325
#define v0_prime 5690,153383
static void fill_multichan(5693,153443
static double tint_part_1(5728,154384
static void change_colors(5770,155385
static multichan *find_most_saturated(find_most_saturated5881,158652
static void vector_tint_surface(5957,160298
static void tint_surface(5993,161346
static void stamp_draw(6050,162452
static void rec_undo_buffer(6179,165671
static void show_version(6226,166535
static void show_usage(6356,169365
static unsigned compute_default_scale_factor(6440,172367
static void loadbrush_callback(6466,173070
static void load_brush_dir(6557,175141
SDL_Surface *mirror_surface(mirror_surface6566,175378
SDL_Surface *flip_surface(flip_surface6602,175871
static unsigned default_stamp_size;6638,176360
static void loadstamp_finisher(6640,176397
static void set_active_stamp(6714,178086
static void get_stamp_thumb(6957,182692
static void loadstamp_callback(7298,189379
static void load_stamp_dir(7428,192950
static void load_stamps(7438,193206
static int load_user_fonts_stub(7468,193911
volatile long fontconfig_thread_done 7475,194029
int generate_fontconfig_cache_spinner(7477,194072
static int generate_fontconfig_cache_real(7497,194523
static int generate_fontconfig_cache(7528,195408
#define hex2dec(7534,195510
static void signal_handler(7539,195703
static SDL_Surface *do_render_button_label(do_render_button_label7547,195893
static void create_button_labels(7567,196455
static void seticon(7602,197705
static SDL_Cursor *get_cursor(get_cursor7658,198740
static SDL_Surface *loadimage(loadimage7703,199803
static SDL_Surface *do_loadimage(do_loadimage7711,199921
static void draw_toolbar(7773,201019
static void draw_magic(7880,203231
static unsigned colors_state 8019,206554
static unsigned draw_colors(8021,206622
static void draw_brushes(8107,209101
static void draw_fonts(8201,211171
static void draw_stamps(8509,218888
static void draw_shapes(8810,226203
static void draw_erasers(8895,227988
static void draw_none(9010,230322
static SDL_Surface *thumbnail(thumbnail9032,230698
static SDL_Surface *thumbnail2(thumbnail29038,230858
static SDL_Surface *zoom(zoom9213,234512
static void xorpixel(9355,238350
static void do_undo(9394,239357
static void do_redo(9462,240570
static void render_brush(9513,241589
static void line_xor(9612,244276
static void rect_xor(9690,245312
static void do_eraser(9725,245947
static void reset_avail_tools(9841,248260
static void disable_avail_tools(9920,249617
static void enable_avail_tools(9934,249867
static int compare_dirent2s(9947,250041
static void draw_tux_text(9962,250363
static int latest_tux;9968,250520
static const char * latest_tux_text;9969,250543
static int latest_r2l;9970,250580
static Uint8 latest_locale_text;9971,250603
static void redraw_tux_text(9973,250637
static void draw_tux_text_ex(9978,250757
static void wordwrap_text(10067,253046
static void wordwrap_text_ex(10074,253254
static void playstampdesc(10479,262060
static Mix_Chunk *loadsound_extra(loadsound_extra10502,262564
static Mix_Chunk *loadsound(loadsound10597,265134
static Mix_Chunk *loaddescsound(loaddescsound10602,265231
static void strip_trailing_whitespace(10612,265380
static char *loaddesc(loaddesc10626,265577
static double loadinfo(10724,267128
static int SDLCALL NondefectiveBlit(10834,269342
static void autoscale_copy_smear_free(10899,270728
static void load_starter_id(10975,272531
static void load_starter(11064,274404
static void load_template(11239,278803
static void load_current(11319,280603
static int make_directory(11418,282663
static void save_current(11441,283132
static int do_prompt(11476,283761
static int do_prompt_snd(11483,283965
static int do_prompt_image(11490,284200
static int do_prompt_image_snd(11499,284498
static int do_prompt_image_flash(11509,284835
#define PROMPT_LEFT 11519,285169
#define PROMPT_W 11520,285192
static int do_prompt_image_flash_snd(11522,285214
static void cleanup(11949,294423
static void free_surface(12231,300534
static void free_surface_array(12241,300689
static void do_shape(12285,301398
static int shape_rotation(12514,305334
static int brush_rotation(12539,305814
#define PROMPT_SAVE_OVER_TXT 12550,306045
#define PROMPT_SAVE_OVER_YES 12554,306234
#define PROMPT_SAVE_OVER_NO 12558,306436
static int do_save(12563,306535
static void set_chunk_data(12787,311552
#define open_memstream 12820,312395
static void do_png_embed_data(12823,312469
static int do_png_save(13221,325683
static void get_new_file_id(13346,328508
static int do_quit(13362,328783
#define PLACE_COLOR_PALETTE 13412,329824
#define PLACE_SAVED_DIR 13413,329857
#define PLACE_PERSONAL_STARTERS_DIR 13414,329883
#define PLACE_STARTERS_DIR 13415,329921
#define PLACE_PERSONAL_TEMPLATES_DIR 13416,329950
#define PLACE_TEMPLATES_DIR 13417,329989
#define NUM_PLACES_TO_LOOK 13418,330019
static int do_open(13424,330144
static int do_slideshow(14518,360923
static void play_slideshow(15267,378294
static void draw_selection_digits(15492,383231
static void wait_for_sfx(15542,384025
#define STIPLE_W 15560,384320
#define STIPLE_H 15561,384339
static char stiple[stiple15562,384358
#define STIPLE_W 15566,384436
#define STIPLE_H 15567,384455
static char stiple[stiple15568,384474
#define STIPLE_W 15572,384540
#define STIPLE_H 15573,384560
static char stiple[stiple15574,384580
static unsigned char *stamp_outline_data;stamp_outline_data15585,384808
static int stamp_outline_w,15586,384850
static int stamp_outline_w, stamp_outline_h;15586,384850
static void update_stamp_xor(15588,384896
static void stamp_xor(15678,387034
static void rgbtohsv(15701,387595
static void hsvtorgb(15742,388297
static void print_image(15809,389156
void do_print(15852,390307
static void do_render_cur_text(15931,392137
static char *uppercase(uppercase16148,398030
static wchar_t *uppercase_w(uppercase_w16176,398729
static char *textdir(textdir16196,399108
static Uint32 scrolltimer_callback(16263,400278
static void control_drawtext_timer(16282,400662
static Uint32 drawtext_callback(16317,401377
static char *debug_gettext(debug_gettext16329,401551
static const char *great_str(great_str16343,401798
static int charsize(16350,401923
static void draw_image_title(16364,402097
static void handle_keymouse(16377,402422
static void handle_active(16422,403501
static char *remove_slash(remove_slash16443,403875
static void anti_carriage_return(16485,404719
static SDL_Surface *duplicate_surface(duplicate_surface16516,405341
static void mirror_starter(16537,405765
static void flip_starter(16604,406755
static int valid_click(16671,407739
static int in_circle(16680,407899
static int in_circle_rad(16688,408019
static int paintsound(16696,408154
static SDL_Surface * load_svg(16713,408467
static SDL_Surface * load_svg(16873,412485
static float pick_best_scape(17052,416549
static SDL_Surface * myIMG_Load(17139,418640
static SDL_Surface * load_kpx(17151,418959
static void load_magic_plugins(17179,419416
static int magic_sort(17580,432654
static void update_progress_bar(17589,432817
static void magic_line_func(17594,432889
static void special_notify(17676,434414
static void magic_stopsound(17708,434982
static void magic_playsound(17718,435105
static Uint8 magic_linear_to_sRGB(17760,435917
static float magic_sRGB_to_linear(17765,435998
static int magic_button_down(17770,436087
static SDL_Surface * magic_scale(17775,436150
static int do_new_dialog(17782,436364
static void reset_touched(18922,467056
static Uint8 magic_touched(18935,467236
static int do_color_picker(18948,467459
static void magic_putpixel(19380,479759
static Uint32 magic_getpixel(19385,479909
static void magic_switchout(19391,480049
static void magic_switchin(19403,480386
static int magic_modeint(19421,480860
static void add_label_node(19431,481011
static struct label_node* search_label_list(19500,482851
static void rec_undo_label(19631,488202
static void do_undo_label_node(19669,489433
static void do_redo_label_node(19693,490237
static void simply_render_node(19721,491041
static void render_all_nodes_starting_at(19800,493052
static void derender_node(19820,493594
static void delete_label_list(19835,493989
static void myblit(19856,494590
static void load_info_about_label_surface(19894,496190
static void set_label_fonts(20069,502794
static void tmp_apply_uncommited_text(20128,504936
static void undo_tmp_applied_text(20177,507062
static void highlight_label_nodes(20213,508383
static void cycle_highlighted_label_node(20293,511405
static int are_labels(20316,512225
int chunk_is_valid(20332,512614
Bytef *get_chunk_data(get_chunk_data20398,514452
void load_embedded_data(20477,516471
static void show_available_papersizes(20821,526517
static void parse_file_options(20855,527146
static void parse_argv_options(20894,528241
static void tmpcfg_merge(20955,529658
static void setup_config(20968,530020
#define SETBOOL(21067,532768
#undef SETBOOL21096,533595
static void chdir_to_binary(21166,535839
static void setup_colors(21201,536768
static void do_lock_file(21357,540482
static void setup(21440,542276
static void claim_to_be_ready(22373,567681
int main(22481,570096

src/tuxpaint.c.cvs.c,32024
# define VIDEO_BPP 35,1121
# define VIDEO_BPP 39,1172
# define VIDEO_BPP 46,1364
#define PRINTMETHOD_PS	55,1538
#define MAX_PATH 60,1751
# define LOW_QUALITY_THUMBNAILS68,1840
# define LOW_QUALITY_STAMP_OUTLINE69,1872
# define NO_PROMPT_SHADOWS70,1907
# define USE_HWSURFACE71,1934
#define GAMMA_CORRECTED_THUMBNAILS81,2229
#define COLORSEL_DISABLE 91,2540
#define COLORSEL_ENABLE 92,2614
#define COLORSEL_CLOBBER 93,2674
#define COLORSEL_REFRESH 94,2733
#define COLORSEL_CLOBBER_WIPE 95,2802
#define COLORSEL_FORCE_REDRAW 96,2888
#define TPAINT_AMASK 100,3066
#define TPAINT_AMASK 102,3104
typedef struct scaleparams108,3232
  unsigned numer,110,3261
  unsigned numer, denom;110,3261
} scaleparams;111,3286
static scaleparams scaletable[scaletable113,3302
#define HARD_MIN_STAMP_SIZE 147,4065
#define HARD_MAX_STAMP_SIZE 148,4122
#define MIN_STAMP_SIZE 150,4198
#define MAX_STAMP_SIZE 151,4276
#define SCALE_LIKE_STAMP(154,4427
#define CUR_STAMP_W 157,4745
#define CUR_STAMP_H 158,4799
#define REPEAT_SPEED 161,4855
#define CURSOR_BLINK_SPEED 162,4922
#define _GNU_SOURCE	166,5013
char *strcasestr(strcasestr189,5641
#define y1 218,6257
#undef y1220,6294
#define FALSE 227,6408
#define TRUE 228,6428
#define gettext_noop(236,6541
#define gettext(241,6599
#define M_PI 246,6667
typedef struct safer_dirent267,6989
  dev_t d_dev;269,7019
  dev_t d_pdev;270,7034
  ino_t d_ino;271,7050
  ino_t d_pino;272,7065
  unsigned short d_reclen;273,7081
  char d_name[d_name274,7108
} safer_dirent;275,7137
#define dirent 276,7153
#define mkdir(313,7668
#define _MATRIX_WHITE_BACK 355,9030
#define MATRIX_WHITE_BACK 356,9077
#define _MATRIX_BLACK_BACK 357,9122
#define MATRIX_BLACK_BACK 358,9169
#define _MATRIX_TRANSPARENT_BACK_BLACK_LETTER 359,9214
#define MATRIX_TRANSPARENT_BACK_BLACK_LETTER 360,9299
#define _MATRIX_TRANSPARENT_BACK_WHITE_LETTER 361,9382
#define MATRIX_TRANSPARENT_BACK_WHITE_LETTER 362,9467
#define _MATRIX_TRANSPARENT_BACK_TRANSPARENT_LETTER 363,9550
#define MATRIX_TRANSPARENT_BACK_TRANSPARENT_LETTER 364,9647
#define FNAME_EXTENSION 425,11414
#define SDL_GetRGBA(468,12246
#define SDL_GetRGB(475,12501
#define SDL_MapRGBA(482,12717
#define SDL_MapRGB(491,12999
  SAVE_OVER_PROMPT,503,13226
  SAVE_OVER_ALWAYS,504,13246
  SAVE_OVER_NO505,13266
  ALTPRINT_MOD,510,13292
  ALTPRINT_ALWAYS,511,13308
  ALTPRINT_NEVER512,13327
  STARTER_OUTLINE,518,13356
  STARTER_SCENE519,13375
  LABEL_OFF,524,13402
  LABEL_LABEL,525,13415
  LABEL_SELECT 526,13430
static int NUM_COLORS;534,13548
static Uint8 * * color_hexes;535,13571
static char * * color_names;536,13601
static void debug(541,13661
static const char *getfilename(getfilename551,13805
  Uint8 rows,575,14207
  Uint8 rows, cols;575,14207
} grid_dims;576,14227
static SDL_Rect r_canvas;579,14326
static SDL_Rect r_tools;580,14377
static SDL_Rect r_sfx;581,14426
static SDL_Rect r_toolopt;582,14449
static SDL_Rect r_colors;583,14502
static SDL_Rect r_ttools;584,14554
static SDL_Rect r_tcolors;585,14630
static SDL_Rect r_ttoolopt;586,14710
static SDL_Rect r_tuxarea;587,14787
static SDL_Rect r_label;588,14831
static int button_w;590,14857
static int button_h;591,14892
static int color_button_w;593,14928
static int color_button_h;594,14968
static grid_dims gd_tools;598,15121
static grid_dims gd_sfx;599,15162
static grid_dims gd_toolopt;600,15187
static grid_dims gd_colors;602,15278
#define HEIGHTOFFSET 604,15322
#define TOOLOFFSET 605,15379
#define PROMPTOFFSETX 606,15422
#define PROMPTOFFSETY 607,15469
#define THUMB_W 609,15511
#define THUMB_H 610,15558
static int WINDOW_WIDTH 613,15634
static int WINDOW_HEIGHT 614,15665
static int WINDOW_WIDTH 617,15768
static int WINDOW_HEIGHT 618,15800
static int WINDOW_WIDTH 620,15838
static int WINDOW_HEIGHT 621,15869
static void setup_normal_screen_layout(628,16057
static void debug_rect(711,18164
#define DR(716,18283
static void debug_dims(718,18317
#define DD(723,18423
static void print_layout(725,18457
#undef DD743,18832
#undef DR744,18842
static void setup_screen_layout(747,18860
static SDL_Surface *screen;screen756,19054
static SDL_Surface *canvas;canvas757,19082
static SDL_Surface *label;label758,19110
static SDL_Surface *save_canvas;save_canvas759,19137
static SDL_Surface *canvas_back;canvas_back760,19170
static SDL_Surface *img_starter,img_starter761,19203
static SDL_Surface *img_starter, *img_starter_bkgd;img_starter_bkgd761,19203
static void update_screen(764,19328
static void update_screen_rect(810,19978
static int hit_test(815,20078
#define HIT(821,20267
static int grid_hit_wh(832,20578
#define GRIDHIT_WH(839,20822
#define GRIDHIT_SURF(844,20997
static int grid_hit_gd(849,21260
#define GRIDHIT_GD(866,21819
static int disable_label 871,22010
static int disable_label;873,22046
static void update_canvas_ex(876,22080
static void update_canvas(910,22867
static int disable_screensaver;918,22986
static int fullscreen 920,23035
static int fullscreen;922,23068
static int native_screensize;924,23098
static int grab_input;925,23128
static int rotate_orientation;926,23151
static int disable_print;928,23183
static int print_delay;929,23209
static int use_print_config 930,23233
static int alt_print_command_default 931,23266
static int want_alt_printcommand;932,23319
static int wheely 934,23354
static int keymouse;935,23377
static int mouse_x;936,23398
static int mouse_y;937,23418
static int no_button_distinction;938,23438
static int mousekey_up;939,23472
static int mousekey_down;940,23496
static int mousekey_left;941,23522
static int mousekey_right;942,23548
static int button_down;943,23575
static int scrolling;944,23599
static int promptless_save 946,23622
static int disable_quit;947,23669
static int noshortcuts;949,23695
static int disable_save;950,23719
static int ok_to_use_lockfile 951,23744
static int start_blank;952,23779
static int autosave_on_quit;953,23803
static int dont_do_xor;955,23833
static int dont_load_stamps;956,23857
static int mirrorstamps;957,23886
static int disable_stamp_controls;958,23911
static int stamp_size_override 959,23946
static int simple_shapes 962,24001
static int simple_shapes;964,24037
static int only_uppercase;966,24070
static int disable_magic_controls;968,24098
static int starter_mirrored;970,24134
static int starter_flipped;971,24163
static int starter_personal;972,24191
static int template_personal;973,24220
static Uint8 canvas_color_r,975,24251
static Uint8 canvas_color_r, canvas_color_g,975,24251
static Uint8 canvas_color_r, canvas_color_g, canvas_color_b;975,24251
static Uint8 * touched;976,24312
static int shape_radius;978,24337
typedef struct label_node981,24442
  unsigned int save_texttool_len;983,24470
  wchar_t save_texttool_str[save_texttool_str984,24504
  SDL_Color save_color;985,24538
  int save_width;986,24562
  int save_height;987,24580
  Uint16 save_x;988,24599
  Uint16 save_y;989,24616
  int save_cur_font;990,24633
  char * save_font_type;991,24654
  int save_text_state;992,24679
  unsigned save_text_size;993,24702
  int save_undoid;994,24729
  int is_enabled;995,24748
  struct label_node* disables;996,24766
  struct label_node* next_to_up_label_node;997,24797
  struct label_node* next_to_down_label_node;998,24841
  SDL_Surface* label_node_surface;999,24887
} label_node;1000,24922
static struct label_node* start_label_node;1003,24938
static struct label_node* current_label_node;1004,24982
static struct label_node* first_label_node_in_redo_stack;1005,25028
static struct label_node* label_node_to_edit;1006,25086
static struct label_node* highlighted_label_node;1007,25132
static unsigned int select_texttool_len;1009,25183
static wchar_t select_texttool_str[select_texttool_str1010,25224
static unsigned select_color;1011,25265
static int select_width;1012,25295
static int select_height;1013,25320
static Uint16 select_x;1014,25346
static Uint16 select_y;1015,25370
static int select_cur_font;1016,25394
static int select_text_state;1017,25422
static unsigned select_text_size;1018,25452
static int coming_from_undo_or_redo 1019,25486
typedef struct magic_funcs_s 1057,26607
  int (*get_tool_count)get_tool_count1058,26638
  char * (*get_name)get_name1059,26676
  SDL_Surface * (*get_icon)get_icon1060,26716
  char * (*get_description)get_description1061,26763
  int (*requires_colors)requires_colors1062,26815
  int (*modes)modes1063,26859
  void (*set_color)set_color1064,26893
  int (*init)init1065,26948
  Uint32 (*api_version)api_version1066,26976
  void (*shutdown)shutdown1067,27007
  void (*click)click1068,27040
  void (*drag)drag1069,27132
  void (*release)release1070,27228
  void (*switchin)switchin1071,27317
  void (*switchout)switchout1072,27390
} magic_funcs_t;1073,27464
typedef struct magic_s 1076,27483
  int place;1077,27508
  int handle_idx;1078,27521
  int idx;1079,27628
  int mode;1080,27730
  int avail_modes;1081,27783
  int colors;1082,27848
  char * name;1083,27902
  char * tip[tip1084,27942
  SDL_Surface * img_icon;1085,28022
  SDL_Surface * img_name;1086,28048
} magic_t;1087,28074
static int num_plugin_files;1092,28128
static void * magic_handle[magic_handle1093,28208
static magic_funcs_t magic_funcs[magic_funcs1094,28320
static magic_t magics[magics1096,28403
static int num_magics;1097,28431
  MAGIC_PLACE_GLOBAL,1100,28549
  MAGIC_PLACE_LOCAL,1101,28571
  MAGIC_PLACE_ALLUSERS,1103,28609
  NUM_MAGIC_PLACES1105,28640
static magic_api *magic_api_struct;magic_api_struct1108,28663
static const char *printcommand printcommand1120,29205
static const char *altprintcommand altprintcommand1121,29253
static const char *papersize;papersize1122,29307
  UNDO_STARTER_NONE,1141,29811
  UNDO_STARTER_MIRRORED,1142,29832
  UNDO_STARTER_FLIPPED1143,29857
#define NUM_UNDO_BUFS 1146,29884
static SDL_Surface *undo_bufs[undo_bufs1147,29909
static int undo_starters[undo_starters1148,29955
static int cur_undo,1149,29996
static int cur_undo, oldest_undo,1149,29996
static int cur_undo, oldest_undo, newest_undo;1149,29996
static int text_undo[text_undo1150,30043
static int have_to_rec_label_node;1151,30080
static SDL_Surface *img_title,img_title1153,30116
static SDL_Surface *img_title, *img_title_credits,img_title_credits1153,30116
static SDL_Surface *img_title, *img_title_credits, *img_title_tuxpaint;img_title_tuxpaint1153,30116
static SDL_Surface *img_btn_up,img_btn_up1154,30188
static SDL_Surface *img_btn_up, *img_btn_down,img_btn_down1154,30188
static SDL_Surface *img_btn_up, *img_btn_down, *img_btn_off;img_btn_off1154,30188
static SDL_Surface *img_btnsm_up,img_btnsm_up1155,30249
static SDL_Surface *img_btnsm_up, *img_btnsm_off;img_btnsm_off1155,30249
static SDL_Surface *img_prev,img_prev1156,30299
static SDL_Surface *img_prev, *img_next;img_next1156,30299
static SDL_Surface *img_mirror,img_mirror1157,30340
static SDL_Surface *img_mirror, *img_flip;img_flip1157,30340
static SDL_Surface *img_dead40x40;img_dead40x401158,30383
static SDL_Surface *img_black,img_black1159,30418
static SDL_Surface *img_black, *img_grey;img_grey1159,30418
static SDL_Surface *img_yes,img_yes1160,30460
static SDL_Surface *img_yes, *img_no;img_no1160,30460
static SDL_Surface *img_sfx,img_sfx1161,30498
static SDL_Surface *img_sfx, *img_speak;img_speak1161,30498
static SDL_Surface *img_open,img_open1162,30539
static SDL_Surface *img_open, *img_erase,img_erase1162,30539
static SDL_Surface *img_open, *img_erase, *img_back,img_back1162,30539
static SDL_Surface *img_open, *img_erase, *img_back, *img_trash;img_trash1162,30539
static SDL_Surface *img_slideshow,img_slideshow1163,30604
static SDL_Surface *img_slideshow, *img_play,img_play1163,30604
static SDL_Surface *img_slideshow, *img_play, *img_select_digits;img_select_digits1163,30604
static SDL_Surface *img_printer,img_printer1164,30670
static SDL_Surface *img_printer, *img_printer_wait;img_printer_wait1164,30670
static SDL_Surface *img_save_over,img_save_over1165,30722
static SDL_Surface *img_save_over, *img_popup_arrow;img_popup_arrow1165,30722
static SDL_Surface *img_cursor_up,img_cursor_up1166,30775
static SDL_Surface *img_cursor_up, *img_cursor_down;img_cursor_down1166,30775
static SDL_Surface *img_cursor_starter_up,img_cursor_starter_up1167,30828
static SDL_Surface *img_cursor_starter_up, *img_cursor_starter_down;img_cursor_starter_down1167,30828
static SDL_Surface *img_scroll_up,img_scroll_up1168,30897
static SDL_Surface *img_scroll_up, *img_scroll_down;img_scroll_down1168,30897
static SDL_Surface *img_scroll_up_off,img_scroll_up_off1169,30950
static SDL_Surface *img_scroll_up_off, *img_scroll_down_off;img_scroll_down_off1169,30950
static SDL_Surface *img_grow,img_grow1170,31011
static SDL_Surface *img_grow, *img_shrink;img_shrink1170,31011
static SDL_Surface *img_magic_paint,img_magic_paint1171,31054
static SDL_Surface *img_magic_paint, *img_magic_fullscreen;img_magic_fullscreen1171,31054
static SDL_Surface *img_bold,img_bold1172,31114
static SDL_Surface *img_bold, *img_italic;img_italic1172,31114
static SDL_Surface *img_label,img_label1173,31157
static SDL_Surface *img_label, *img_label_select;img_label_select1173,31157
static SDL_Surface *img_color_picker,img_color_picker1174,31207
static SDL_Surface *img_color_picker, *img_color_picker_thumb,img_color_picker_thumb1174,31207
static SDL_Surface *img_color_picker, *img_color_picker_thumb, *img_paintwell;img_paintwell1174,31207
static int color_picker_x,1175,31286
static int color_picker_x, color_picker_y;1175,31286
static SDL_Surface *img_title_on,img_title_on1177,31330
static SDL_Surface *img_title_on, *img_title_off,img_title_off1177,31330
  *img_title_large_on,img_title_large_on1178,31380
  *img_title_large_on, *img_title_large_off;img_title_large_off1178,31380
static SDL_Surface *img_title_names[img_title_names1179,31425
static SDL_Surface *img_tools[img_tools1180,31474
static SDL_Surface *img_tools[NUM_TOOLS], *img_tool_names[img_tool_names1180,31474
static SDL_Surface *render_text(render_text1193,31857
static Uint16 *wcstou16(wcstou161252,33446
static SDL_Surface *render_text_w(render_text_w1271,33945
typedef struct stamp_type1380,37895
  char *stampname;stampname1382,37923
  char *stxt;stxt1383,37942
  Uint8 locale_text;1384,37956
  Mix_Chunk *ssnd;ssnd1386,37993
  Mix_Chunk *sdesc;sdesc1387,38012
  SDL_Surface *thumbnail;thumbnail1390,38040
  unsigned thumb_mirrored:thumb_mirrored1391,38066
  unsigned thumb_flipped:thumb_flipped1392,38095
  unsigned thumb_mirrored_flipped:thumb_mirrored_flipped1393,38123
  unsigned no_premirror:no_premirror1394,38160
  unsigned no_preflip:no_preflip1395,38187
  unsigned no_premirrorflip:no_premirrorflip1396,38212
  unsigned processed:processed1398,38244
  unsigned no_sound:no_sound1400,38314
  unsigned no_descsound:no_descsound1401,38337
  unsigned no_txt:no_txt1402,38364
  unsigned tinter:tinter1405,38475
  unsigned colorable:colorable1406,38496
  unsigned tintable:tintable1407,38520
  unsigned mirrorable:mirrorable1408,38543
  unsigned flipable:flipable1409,38568
  unsigned mirrored:mirrored1411,38592
  unsigned flipped:flipped1412,38615
  unsigned min:min1413,38637
  unsigned size:size1414,38655
  unsigned max:max1415,38674
  unsigned is_svg:is_svg1417,38693
} stamp_type;1418,38714
#define MAX_STAMP_GROUPS 1420,38729
static unsigned int stamp_group_dir_depth 1422,38759
static int stamp_group 1424,38901
static const char *load_stamp_basedir;load_stamp_basedir1426,38930
static int num_stamp_groups 1427,38969
static int num_stamps[num_stamps1428,39002
static int max_stamps[max_stamps1429,39043
static stamp_type **stamp_data[stamp_data1430,39084
static SDL_Surface *active_stamp;active_stamp1432,39135
static int stamp_colorable(1435,39227
static int stamp_tintable(1441,39378
#define SHAPE_BRUSH_NAME 1448,39473
static int num_brushes,1449,39516
static int num_brushes, num_brushes_max,1449,39516
static int num_brushes, num_brushes_max, shape_brush 1449,39516
static SDL_Surface **img_brushes;img_brushes1450,39574
static int * brushes_frames 1451,39608
static int * brushes_spacing 1452,39644
static short * brushes_directional 1453,39681
static SDL_Surface *img_shapes[img_shapes1455,39725
static SDL_Surface *img_shapes[NUM_SHAPES], *img_shape_names[img_shape_names1455,39725
static SDL_Surface *img_openlabels_open,img_openlabels_open1456,39799
static SDL_Surface *img_openlabels_open, *img_openlabels_erase,img_openlabels_erase1456,39799
  *img_openlabels_slideshow,img_openlabels_slideshow1457,39863
  *img_openlabels_slideshow, *img_openlabels_back,img_openlabels_back1457,39863
  *img_openlabels_slideshow, *img_openlabels_back, *img_openlabels_play,img_openlabels_play1457,39863
  *img_openlabels_next;img_openlabels_next1458,39936
static SDL_Surface *img_tux[img_tux1460,39961
static SDL_Surface *img_mouse,img_mouse1462,40004
static SDL_Surface *img_mouse, *img_mouse_click;img_mouse_click1462,40004
static SDL_Surface *img_paintcan;img_paintcan1465,40088
static SDL_Surface * * img_color_btns;1467,40128
static SDL_Surface *img_color_btn_off;img_color_btn_off1468,40167
static int colors_are_selectable;1471,40214
  BRUSH_DIRECTION_RIGHT,1474,40256
  BRUSH_DIRECTION_DOWN_RIGHT,1475,40281
  BRUSH_DIRECTION_DOWN,1476,40311
  BRUSH_DIRECTION_DOWN_LEFT,1477,40335
  BRUSH_DIRECTION_LEFT,1478,40364
  BRUSH_DIRECTION_UP_LEFT,1479,40388
  BRUSH_DIRECTION_UP,1480,40415
  BRUSH_DIRECTION_UP_RIGHT,1481,40437
  BRUSH_DIRECTION_NONE1482,40465
static SDL_Surface *img_cur_brush;img_cur_brush1485,40492
static int img_cur_brush_frame_w,1486,40527
static int img_cur_brush_frame_w, img_cur_brush_w,1486,40527
static int img_cur_brush_frame_w, img_cur_brush_w, img_cur_brush_h,1486,40527
    img_cur_brush_frames,1487,40595
    img_cur_brush_frames, img_cur_brush_directional,1487,40595
    img_cur_brush_frames, img_cur_brush_directional, img_cur_brush_spacing;1487,40595
static int brush_counter,1488,40671
static int brush_counter, brush_frame;1488,40671
#define NUM_ERASERS 1490,40711
#define ERASER_MIN 1493,40862
#define ERASER_MAX 1494,40884
static unsigned cur_color;1498,40910
static int cur_tool,1499,40937
static int cur_tool, cur_brush,1499,40937
static int cur_tool, cur_brush, old_tool;1499,40937
static int cur_stamp[cur_stamp1500,40979
static int cur_shape,1501,41019
static int cur_shape, cur_magic;1501,41019
static int cur_font,1502,41052
static int cur_font, cur_eraser;1502,41052
static int cursor_left,1503,41085
static int cursor_left, cursor_x,1503,41085
static int cursor_left, cursor_x, cursor_y,1503,41085
static int cursor_left, cursor_x, cursor_y, cursor_textwidth;1503,41085
static int old_cursor_x,1504,41169
static int old_cursor_x, old_cursor_y;1504,41169
static int cur_label,1505,41208
static int cur_label, cur_select;1505,41208
static int been_saved;1506,41242
static char file_id[file_id1507,41265
static char starter_id[starter_id1508,41300
static char template_id[template_id1509,41338
static int brush_scroll;1510,41377
static int stamp_scroll[stamp_scroll1511,41402
static int font_scroll,1512,41445
static int font_scroll, magic_scroll,1512,41445
static int font_scroll, magic_scroll, tool_scroll;1512,41445
static int eraser_scroll,1513,41496
static int eraser_scroll, shape_scroll;1513,41496
static int eraser_sound;1515,41567
static IM_DATA im_data;1517,41593
static wchar_t texttool_str[texttool_str1518,41617
static unsigned int texttool_len;1519,41651
static int tool_avail[tool_avail1521,41686
static int tool_avail[NUM_TOOLS], tool_avail_bak[tool_avail_bak1521,41686
static Uint32 cur_toggle_count;1523,41748
typedef struct edge_type1525,41781
  int y_upper;1527,41808
  float x_intersect,1528,41823
  float x_intersect, dx_per_scan;1528,41823
  struct edge_type *next;next1529,41857
} edge;1530,41883
typedef struct point_type1533,41893
  int x,1535,41921
  int x, y;1535,41921
} point_type;1536,41933
typedef struct fpoint_type1538,41948
  float x,1540,41977
  float x, y;1540,41977
} fpoint_type;1541,41991
{ Left,1544,42020
{ Left, Right,1544,42020
{ Left, Right, Bottom,1544,42020
{ Left, Right, Bottom, Top 1544,42020
{ Left, Right, Bottom, Top } an_edge;1544,42020
#define NUM_EDGES 1545,42058
static SDL_Event scrolltimer_event;1547,42079
int non_left_click_count 1549,42116
typedef struct dirent21552,42148
  struct dirent f;1554,42173
  int place;1555,42192
} dirent2;1556,42205
static char *progname;progname1568,42513
#define stamp_xor(1597,43504
#define update_stamp_xor(1603,43656
Mix_Chunk * magic_current_snd_ptr;1725,49048
#define MAX_UTF8_CHAR_LENGTH 1759,50242
#define USEREVENT_TEXT_UPDATE 1761,50274
#define USEREVENT_PLAYDESCSOUND 1762,50306
#define TP_SDL_MOUSEBUTTONSCROLL 1764,50341
static int bypass_splash_wait;1766,50395
static void do_wait(1770,50504
static void eat_sdl_events(1820,51408
#define PROMPT_QUIT_TXT 1863,52362
#define PROMPT_QUIT_YES 1866,52474
#define PROMPT_QUIT_NO 1869,52581
#define PROMPT_QUIT_SAVE_TXT 1873,52694
#define PROMPT_QUIT_SAVE_YES 1874,52789
#define PROMPT_QUIT_SAVE_NO 1875,52848
#define PROMPT_OPEN_SAVE_TXT 1878,52988
#define PROMPT_OPEN_SAVE_YES 1879,53058
#define PROMPT_OPEN_SAVE_NO 1880,53117
#define PROMPT_OPEN_UNOPENABLE_TXT 1883,53217
#define PROMPT_OPEN_UNOPENABLE_YES 1886,53327
#define PROMPT_OPEN_NOFILES_TXT 1890,53441
#define PROMPT_OPEN_NOFILES_YES 1891,53515
#define PROMPT_PRINT_NOW_TXT 1894,53602
#define PROMPT_PRINT_NOW_YES 1895,53671
#define PROMPT_PRINT_NOW_NO 1896,53731
#define PROMPT_PRINT_TXT 1899,53846
#define PROMPT_PRINT_YES 1900,53918
#define PROMPT_PRINT_FAILED_TXT 1903,53994
#define PROMPT_PRINT_TOO_SOON_TXT 1906,54173
#define PROMPT_PRINT_TOO_SOON_YES 1907,54246
#define PROMPT_ERASE_TXT 1910,54361
#define PROMPT_ERASE_YES 1911,54422
#define PROMPT_ERASE_NO 1912,54478
#define PROMPT_TIP_LEFTCLICK_TXT 1915,54610
#define PROMPT_TIP_LEFTCLICK_YES 1916,54698
  SHAPE_TOOL_MODE_STRETCH,1921,54759
  SHAPE_TOOL_MODE_ROTATE,1922,54786
  SHAPE_TOOL_MODE_DONE1923,54812
static void mainloop(1929,54866
static void hide_blinking_cursor(4711,129312
static void draw_blinking_cursor(4719,129420
static void brush_draw(4736,129882
void reset_brush_counter_and_frame(4843,131599
void reset_brush_counter(4849,131687
static void blit_brush(4857,131799
#define TINTER_ANYHUE 4935,133717
#define TINTER_NARROW 4936,133793
#define TINTER_NORMAL 4937,133857
#define TINTER_VECTOR 4938,133894
typedef struct multichan4941,133965
  double L,4943,133992
  double L, hue,4943,133992
  double L, hue, sat;4943,133992
  unsigned char or,4944,134067
  unsigned char or, og,4944,134067
  unsigned char or, og, ob,4944,134067
  unsigned char or, og, ob, alpha;4944,134067
} multichan;4945,134125
#define X0 4947,134139
#define Y0 4948,134167
#define Z0 4949,134195
#define u0_prime 4950,134223
#define v0_prime 4951,134281
static void fill_multichan(4954,134341
static double tint_part_1(4989,135282
static void change_colors(5031,136283
static multichan *find_most_saturated(find_most_saturated5142,139550
static void vector_tint_surface(5218,141196
static void tint_surface(5254,142244
static void stamp_draw(5311,143350
static void rec_undo_buffer(5440,146569
static void show_version(5487,147433
static void show_usage(5617,150263
static unsigned compute_default_scale_factor(5701,153265
static void loadbrush_callback(5727,153968
static void load_brush_dir(5818,156039
SDL_Surface *mirror_surface(mirror_surface5827,156276
SDL_Surface *flip_surface(flip_surface5863,156769
static unsigned default_stamp_size;5899,157258
static void loadstamp_finisher(5901,157295
static void set_active_stamp(5975,158984
static void get_stamp_thumb(6218,163590
static void loadstamp_callback(6559,170277
static void load_stamp_dir(6689,173848
static void load_stamps(6699,174104
static int load_user_fonts_stub(6729,174809
#define hex2dec(6736,174908
static void signal_handler(6741,175101
static SDL_Surface *do_render_button_label(do_render_button_label6749,175291
static void create_button_labels(6769,175853
static void seticon(6804,177103
static SDL_Cursor *get_cursor(get_cursor6860,178138
static SDL_Surface *loadimage(loadimage6905,179201
static SDL_Surface *do_loadimage(do_loadimage6913,179319
static void draw_toolbar(6975,180417
static void draw_magic(7082,182629
static unsigned colors_state 7221,185952
static unsigned draw_colors(7223,186020
static void draw_brushes(7309,188499
static void draw_fonts(7403,190569
static void draw_stamps(7711,198286
static void draw_shapes(8012,205601
static void draw_erasers(8097,207386
static void draw_none(8212,209720
static SDL_Surface *thumbnail(thumbnail8234,210096
static SDL_Surface *thumbnail2(thumbnail28240,210256
static SDL_Surface *zoom(zoom8415,213910
static void xorpixel(8557,217748
static void do_undo(8596,218755
static void do_redo(8664,219968
static void render_brush(8715,220987
static void line_xor(8814,223674
static void rect_xor(8892,224710
static void do_eraser(8927,225345
static void reset_avail_tools(9043,227658
static void disable_avail_tools(9122,229028
static void enable_avail_tools(9136,229278
static int compare_dirent2s(9149,229452
static void draw_tux_text(9164,229774
static int latest_tux;9170,229931
static const char * latest_tux_text;9171,229954
static int latest_r2l;9172,229991
static Uint8 latest_locale_text;9173,230014
static void redraw_tux_text(9175,230048
static void draw_tux_text_ex(9180,230168
static void wordwrap_text(9269,232457
static void wordwrap_text_ex(9276,232665
static void playstampdesc(9681,241471
static Mix_Chunk *loadsound_extra(loadsound_extra9704,241975
static Mix_Chunk *loadsound(loadsound9799,244545
static Mix_Chunk *loaddescsound(loaddescsound9804,244642
static void strip_trailing_whitespace(9814,244791
static char *loaddesc(loaddesc9828,244988
static double loadinfo(9926,246539
static int SDLCALL NondefectiveBlit(10036,248753
static void autoscale_copy_smear_free(10101,250139
static void load_starter_id(10177,251942
static void load_starter(10252,253480
static void load_template(10427,257879
static void load_current(10507,259679
static int make_directory(10615,262050
static void save_current(10638,262519
static int do_prompt(10673,263148
static int do_prompt_snd(10680,263352
static int do_prompt_image(10687,263587
static int do_prompt_image_snd(10696,263885
static int do_prompt_image_flash(10706,264222
#define PROMPT_LEFT 10716,264556
#define PROMPT_W 10717,264579
static int do_prompt_image_flash_snd(10719,264601
static void cleanup(11146,273810
static void free_surface(11428,279921
static void free_surface_array(11438,280076
static void do_shape(11482,280785
static int shape_rotation(11711,284721
static int brush_rotation(11736,285201
#define PROMPT_SAVE_OVER_TXT 11747,285432
#define PROMPT_SAVE_OVER_YES 11751,285621
#define PROMPT_SAVE_OVER_NO 11755,285823
static int do_save(11760,285922
static int do_png_save(12086,293911
static void get_new_file_id(12210,296647
static int do_quit(12226,296922
#define PLACE_COLOR_PALETTE 12276,297963
#define PLACE_SAVED_DIR 12277,297996
#define PLACE_PERSONAL_STARTERS_DIR 12278,298022
#define PLACE_STARTERS_DIR 12279,298060
#define PLACE_PERSONAL_TEMPLATES_DIR 12280,298089
#define PLACE_TEMPLATES_DIR 12281,298128
#define NUM_PLACES_TO_LOOK 12282,298158
static int do_open(12288,298283
static int do_slideshow(13403,329553
static void play_slideshow(14152,346905
static void draw_selection_digits(14377,351836
static void wait_for_sfx(14427,352630
#define STIPLE_W 14445,352925
#define STIPLE_H 14446,352944
static char stiple[stiple14447,352963
#define STIPLE_W 14451,353041
#define STIPLE_H 14452,353060
static char stiple[stiple14453,353079
#define STIPLE_W 14457,353145
#define STIPLE_H 14458,353165
static char stiple[stiple14459,353185
static unsigned char *stamp_outline_data;stamp_outline_data14470,353413
static int stamp_outline_w,14471,353455
static int stamp_outline_w, stamp_outline_h;14471,353455
static void update_stamp_xor(14473,353501
static void stamp_xor(14563,355639
static void rgbtohsv(14586,356200
static void hsvtorgb(14627,356902
static void print_image(14694,357761
void do_print(14737,358912
static void do_render_cur_text(14816,360745
static char *uppercase(uppercase15033,366638
static wchar_t *uppercase_w(uppercase_w15061,367337
static char *textdir(textdir15081,367716
static Uint32 scrolltimer_callback(15148,368886
static void control_drawtext_timer(15167,369270
static Uint32 drawtext_callback(15202,369985
static char *debug_gettext(debug_gettext15214,370159
static const char *great_str(great_str15228,370406
static int charsize(15235,370531
static void draw_image_title(15249,370705
static void handle_keymouse(15262,371030
static void handle_active(15307,372109
static char *remove_slash(remove_slash15328,372483
static void anti_carriage_return(15370,373327
static SDL_Surface *duplicate_surface(duplicate_surface15401,373949
static void mirror_starter(15422,374373
static void flip_starter(15489,375363
static int valid_click(15556,376347
static int in_circle(15565,376507
static int in_circle_rad(15573,376627
static int paintsound(15581,376762
static SDL_Surface * load_svg(15598,377075
static SDL_Surface * load_svg(15758,381093
static float pick_best_scape(15937,385157
static SDL_Surface * myIMG_Load(16024,387248
static SDL_Surface * load_kpx(16036,387567
static void load_magic_plugins(16064,388024
static int magic_sort(16465,401262
static void update_progress_bar(16474,401425
static void magic_line_func(16479,401497
static void special_notify(16561,403022
static void magic_stopsound(16593,403590
static void magic_playsound(16603,403713
static Uint8 magic_linear_to_sRGB(16645,404525
static float magic_sRGB_to_linear(16650,404606
static int magic_button_down(16655,404695
static SDL_Surface * magic_scale(16660,404758
static int do_new_dialog(16667,404972
static void reset_touched(17796,434839
static Uint8 magic_touched(17809,435019
static int do_color_picker(17822,435242
static void magic_putpixel(18254,447542
static Uint32 magic_getpixel(18259,447692
static void magic_switchout(18265,447832
static void magic_switchin(18277,448169
static int magic_modeint(18295,448643
static void add_label_node(18305,448794
static struct label_node* search_label_list(18374,450634
static void rec_undo_label(18505,455985
static void do_undo_label_node(18543,457216
static void do_redo_label_node(18567,458020
static void simply_render_node(18595,458824
static void render_all_nodes_starting_at(18674,460835
static void derender_node(18694,461377
static void delete_label_list(18709,461772
static void myblit(18730,462373
static void load_info_about_label_surface(18768,463973
static void set_label_fonts(18947,470663
static void tmp_apply_uncommited_text(19006,472805
static void undo_tmp_applied_text(19053,474868
static void highlight_label_nodes(19088,476123
static void cycle_highlighted_label_node(19168,479145
static int are_labels(19191,479965
static void show_available_papersizes(19211,480499
static void parse_file_options(19245,481128
static void parse_argv_options(19284,482223
static void tmpcfg_merge(19345,483640
static void setup_config(19358,484002
#define SETBOOL(19458,486751
#undef SETBOOL19487,487578
static void chdir_to_binary(19557,489822
static void setup_colors(19592,490751
static void do_lock_file(19748,494465
static void setup(19832,496260
static void claim_to_be_ready(20726,520537
int main(20834,522952

src/win32_dirent.h,1018
typedef long BOOL;11,584
typedef unsigned int DWORD;12,604
typedef wchar_t TCHAR;13,633
typedef void *HANDLE;HANDLE14,657
#define MAX_PATH 16,683
#define INVALID_HANDLE_VALUE 17,720
#define WINAPI 18,768
  DWORD dwLowDateTime;21,831
  DWORD dwHighDateTime;22,855
} FILETIME;23,880
  DWORD dwFileAttributes;26,914
  FILETIME ftCreationTime;27,941
  FILETIME ftLastAccessTime;28,969
  FILETIME ftLastWriteTime;29,999
  DWORD nFileSizeHigh;30,1028
  DWORD nFileSizeLow;31,1052
  DWORD dwReserved0;32,1075
  DWORD dwReserved1;33,1097
  TCHAR cFileName[cFileName34,1119
  TCHAR cAlternateFileName[cAlternateFileName35,1149
} WIN32_FIND_DATA;36,1182
#define FindFirstFile 38,1206
#define FindNextFile 39,1246
#define FindClose 40,1285
struct dirent 55,1604
  char d_name[d_name57,1624
  WIN32_FIND_DATA wfd;61,1677
  HANDLE hFind;62,1701
  struct dirent de;63,1718
 } DIR;64,1739
typedef int (*selectCB)selectCB68,1876
typedef int (*comparCB)comparCB69,1927

src/im.c,3182
#define gettext_noop(54,1679
  IM_TIP_NONE,59,1723
  IM_TIP_ENGLISH,60,1738
  IM_TIP_HIRAGANA,61,1756
  IM_TIP_KATAKANA,62,1775
  IM_TIP_HANGUL,63,1794
  IM_TIP_THAI,64,1811
  IM_TIP_ZH_TW,65,1826
  NUM_IM_TIPS66,1842
static const char* const im_tip_text[im_tip_text70,1861
#define MAX_SECTIONS 100,2471
#define MAX_UNICODE_SEQ 101,2548
#define INITIAL_SMSIZE 102,2623
#define LANG_DEFAULT 105,2725
  IM_REQ_TRANSLATE,113,2839
  IM_REQ_INIT,114,2915
  IM_REQ_RESET_SOFT,115,2967
  IM_REQ_RESET_FULL,116,3015
  IM_REQ_FREE,117,3063
  NUM_IM_REQUESTS118,3107
  MATCH_STAT_NONE 126,3162
  MATCH_STAT_NONE       = 0x00,x00126,3162
  MATCH_STAT_NOMOSTATES 127,3194
  MATCH_STAT_NOMOSTATES = 0x01,x01127,3194
  MATCH_STAT_NOMOBUF 128,3226
  MATCH_STAT_NOMOBUF    = 0x02,x02128,3226
typedef int (*IM_EVENT_FN)IM_EVENT_FN139,3406
typedef struct SM_WITH_KEY 148,3629
  char key;149,3658
  struct STATE_MACHINE* state;150,3670
} SM_WITH_KEY;151,3701
typedef struct STATE_MACHINE 167,4275
  wchar_t output[output168,4306
  char flag;169,4341
  SM_WITH_KEY* next;171,4355
  size_t next_maxsize;172,4408
  size_t next_size;173,4475
} STATE_MACHINE;174,4537
  STATE_MACHINE sections[sections184,4811
  int section;185,4851
  int match_count;188,4932
  int match_is_final;189,5008
  int match_stats;190,5076
  STATE_MACHINE* match_state;191,5135
  STATE_MACHINE* match_state_prev;192,5165
} CHARMAP;193,5200
static int im_initialized 203,5350
static IM_EVENT_FN im_event_fns[im_event_fns214,5593
#define MIN(221,5742
#define IN_RANGE(222,5795
#define ARRAYLEN(223,5849
static void wcs_lshift(226,5908
static void wcs_pull(239,6177
static int swk_compare(255,6483
static int sm_init(267,6704
static void sm_free(285,6999
static int sm_dblspace(307,7415
static STATE_MACHINE* sm_search_shallow(328,7890
static const wchar_t* sm_search(354,8749
static void sm_sort_shallow(380,9360
static int sm_add(389,9550
static int charmap_init(452,11022
static int charmap_add(478,11685
static int charmap_load(501,12334
static void charmap_free(597,14427
static const wchar_t* charmap_search(612,14659
static int im_event_c(666,16325
int im_read(705,17552
static void im_event(738,18468
static void im_request(752,18637
static void im_free(766,18910
void im_softreset(772,18980
static void im_fullreset(781,19097
static int im_event_zh_tw(831,21180
  enum { SEC_ENGLISH,834,21287
  enum { SEC_ENGLISH, SEC_ZH_TW,834,21287
  enum { SEC_ENGLISH, SEC_ZH_TW, SEC_TOTAL 834,21287
static int im_event_th(1016,26396
  enum { SEC_ENGLISH,1019,26497
  enum { SEC_ENGLISH, SEC_THAI,1019,26497
  enum { SEC_ENGLISH, SEC_THAI, SEC_TOTAL 1019,26497
static int im_event_ja(1202,31597
  enum { SEC_ENGLISH,1205,31698
  enum { SEC_ENGLISH, SEC_HIRAGANA,1205,31698
  enum { SEC_ENGLISH, SEC_HIRAGANA, SEC_KATAKANA,1205,31698
  enum { SEC_ENGLISH, SEC_HIRAGANA, SEC_KATAKANA, SEC_TOTAL 1205,31698
static int im_event_ko_isvowel(1390,36996
static int im_event_ko(1413,37549
  enum { SEC_ENGLISH,1416,37650
  enum { SEC_ENGLISH, SEC_HANGUL,1416,37650
  enum { SEC_ENGLISH, SEC_HANGUL, SEC_TOTAL 1416,37650
void im_init(1651,44917

src/postscript_print.c,124
#define MARGIN 65,2137
#define my_min(67,2224
static int f2int(69,2267
static int f2dec(74,2317
int do_ps_save(80,2446

src/compiler.h,986
#define perror(37,1175
#define isspace(49,1478
#define NOMINMAX54,1595
#define strcasestr 56,1633
#define min(65,1810
#define max(70,1948
#define min(76,2092
#define max(77,2135
#define clamp(80,2186
#define NORETURN 85,2275
#define FUNCTION 86,2322
#define NORETURN88,2433
#define FUNCTION89,2450
#define restrict 94,2568
#define restrict97,2634
#define MALLOC 104,2765
#define PURE 107,2859
#define likely(110,2964
#define unlikely(111,3014
#define expected(112,3064
#define MALLOC114,3120
#define PURE115,3135
#define likely(116,3148
#define unlikely(117,3176
#define expected(118,3204
#define MUST_CHECK 122,3299
#define MUST_CHECK124,3360
#define CLOCK_ASM(131,3538
#define CLOCK_TYPE 132,3598
#define CLOCK_SPEED 135,3716
#define CLOCK_ASM(140,3778
#define CLOCK_TYPE 141,3836
#define CLOCK_SPEED 144,3950
#define CLOCK_ASM(150,4074
#define CLOCK_TYPE 151,4097
#define CLOCK_SPEED 152,4130
#undef CLOCK_ASM156,4185
#define CLOCK_ASM(157,4202

src/sounds.h,800
#define SOUNDS_H31,997
#define SND_NONE 36,1041
  SND_HARP,40,1069
  SND_CLICK,41,1101
  SND_BLEEP,42,1138
  SND_BUBBLE,43,1178
  SND_STAMP,44,1216
  SND_LINE_START,45,1254
  SND_LINE_END,46,1295
  SND_SCROLL,47,1311
  SND_PAINT1,48,1357
  SND_PAINT2,49,1400
  SND_PAINT3,50,1414
  SND_PAINT4,51,1428
  SND_ERASER1,52,1442
  SND_ERASER2,53,1485
  SND_SAVE,54,1500
  SND_PROMPT,55,1538
  SND_FLIP,56,1590
  SND_MIRROR,57,1621
  SND_KEYCLICK,58,1656
  SND_KEYCLICKRING,59,1714
  SND_RETURN,60,1790
  SND_SHRINK,61,1844
  SND_GROW,62,1879
  SND_ITALIC_ON,63,1910
  SND_ITALIC_OFF,64,1944
  SND_AREYOUSURE,65,1980
  SND_YOUCANNOT,66,2021
  SND_TUXOK,67,2057
  SND_THICK,68,2083
  SND_THIN,69,2096
  NUM_SOUNDS70,2108
static const char *sound_fnames[sound_fnames80,2325

src/i18n.h,1986
#define I18N_H33,1000
  LANG_AF,42,1092
  LANG_AR,43,1121
  LANG_AST,44,1147
  LANG_AZ,45,1176
  LANG_BE,46,1207
  LANG_BG,47,1237
  LANG_BO,48,1266
  LANG_BR,49,1293
  LANG_CA,50,1319
  LANG_CS,51,1346
  LANG_CY,52,1371
  LANG_DA,53,1396
  LANG_DE,54,1422
  LANG_EL,55,1448
  LANG_EN,56,1473
  LANG_EN_AU,57,1521
  LANG_EN_CA,58,1564
  LANG_EN_GB,59,1605
  LANG_EN_ZA,60,1645
  LANG_EO,61,1691
  LANG_ES,62,1720
  LANG_ES_MX,63,1747
  LANG_ET,64,1787
  LANG_EU,65,1815
  LANG_FA,66,1841
  LANG_FI,67,1868
  LANG_FO,68,1895
  LANG_FR,69,1922
  LANG_GA,70,1948
  LANG_GD,71,1980
  LANG_GL,72,2015
  LANG_GR,73,2043
  LANG_GU,74,2071
  LANG_HE,75,2099
  LANG_HI,76,2125
  LANG_HR,77,2150
  LANG_HU,78,2178
  LANG_I_KLINGON_ROMANIZED,79,2207
  LANG_ID,80,2261
  LANG_IS,81,2291
  LANG_IT,82,2320
  LANG_JA,83,2347
  LANG_KA,84,2375
  LANG_KM,85,2403
  LANG_KO,86,2428
  LANG_KU,87,2454
  LANG_LB,88,2481
  LANG_LT,89,2533
  LANG_LV,90,2563
  LANG_MK,91,2590
  LANG_ML,92,2620
  LANG_MS,93,2668
  LANG_NB,94,2693
  LANG_NL,95,2729
  LANG_NN,96,2754
  LANG_NR,97,2791
  LANG_OC,98,2837
  LANG_OJ,99,2864
  LANG_PL,100,2891
  LANG_PT_BR,101,2917
  LANG_PT,102,2962
  LANG_RO,103,2992
  LANG_RU,104,3020
  LANG_RW,105,3047
  LANG_SHS,106,3078
  LANG_SK,107,3106
  LANG_SL,108,3132
  LANG_SON,109,3161
  LANG_SQ,110,3207
  LANG_SR,111,3235
  LANG_SV,112,3262
  LANG_SW,113,3289
  LANG_TA,114,3316
  LANG_TE,115,3341
  LANG_TH,116,3386
  LANG_TL,117,3410
  LANG_TR,118,3437
  LANG_TWI,119,3464
  LANG_UK,120,3488
  LANG_VE,121,3517
  LANG_VEC,122,3542
  LANG_VI,123,3571
  LANG_WA,124,3601
  LANF_WO,125,3628
  LANG_XH,126,3672
  LANG_ZH_CN,127,3697
  LANG_ZH_TW,128,3740
  LANG_ZAM,129,3784
  NUM_LANGS130,3825
typedef struct language_to_locale_struct136,3856
  const char *language;language138,3899
  const char *locale;locale139,3923
} language_to_locale_struct;140,3945
int setup_i18n(154,4326

src/colors.h,623
#define COLORS_H32,991
  COLOR_BLACK,38,1050
  COLOR_DARKGREY,39,1065
  COLOR_LIGHTGREY,40,1083
  COLOR_WHITE,41,1102
  COLOR_RED,42,1117
  COLOR_ORANGE,43,1130
  COLOR_YELLOW,44,1146
  COLOR_LIGHTGREEN,45,1162
  COLOR_DARKGREEN,46,1182
  COLOR_SKYBLUE,47,1201
  COLOR_BLUE,48,1218
  COLOR_LAVENDER,49,1232
  COLOR_PURPLE,50,1250
  COLOR_PINK,51,1266
  COLOR_BROWN,52,1280
  COLOR_TAN,53,1295
  COLOR_BEIGE,54,1308
  NUM_DEFAULT_COLORS55,1323
const int default_color_hexes[default_color_hexes61,1367
const char *const default_color_names[default_color_names84,1996
char colorfile[colorfile137,3540

src/win32_print.h,33
#define __WIN32_PRINT_H__11,243

src/postscript_print.h,335
#define POSTSCRIPT_PRINT_H34,1134
#define PRINTMETHOD_PS 47,1431
#define DEFAULT_PRINTCOMMAND 55,1724
#define DEFAULT_ALTPRINTCOMMAND 56,1759
#define PRINTCOMMAND 59,1833
#define PRINTCOMMAND 61,1933
#define PRINTCOMMAND 63,2018
#define ALTPRINTCOMMAND 69,2136
#define ALTPRINTCOMMAND 71,2242
#define ALTPRINTCOMMAND 73,2333

src/get_fname.c,109
const char *savedir;savedir51,1589
const char *datadir;datadir52,1610
char *get_fname(get_fname60,1939

src/BeOS_print.h,32
#define __BEOS_PRINT_H__27,959

src/i18n.c,1046
static int langint 70,2177
const char *lang_prefixes[lang_prefixes72,2208
static int lang_use_own_font[lang_use_own_font165,3034
static int lang_use_right_to_left[lang_use_right_to_left182,3227
static int lang_use_right_to_left_word[lang_use_right_to_left_word189,3309
static int lang_y_nudge[lang_y_nudge196,3400
int need_own_font;202,3465
int need_right_to_left;203,3484
int need_right_to_left_word;204,3508
const char *lang_prefix,lang_prefix205,3537
const char *lang_prefix, *short_lang_prefix;short_lang_prefix205,3537
static const language_to_locale_struct language_to_locale_array[language_to_locale_array207,3583
static void show_lang_usage(346,8051
static void show_locale_usage(449,11228
int get_current_language(546,14437
static int search_int_array(552,14492
static void ctype_utf8(567,14760
static const char *language_to_locale(language_to_locale584,15181
static void set_langint_from_locale_string(598,15634
static int set_current_language(636,16471
int setup_i18n(697,18320
int smash_i18n(720,18758

src/dirwalk.h,265
#define DIRWALK_H26,862
#define TP_FTW_UNKNOWN 34,1000
#define TP_FTW_DIRECTORY 35,1025
#define TP_FTW_NORMAL 36,1052
#define TP_FTW_PATHSIZE 38,1077
typedef struct tp_ftw_str40,1106
  char *str;str42,1134
  unsigned char len;43,1147
} tp_ftw_str;45,1195

src/titles.h,313
  TITLE_NONE,36,1027
  TITLE_NOCOLORS,37,1041
  TITLE_TOOLS,38,1059
  TITLE_COLORS,39,1074
  TITLE_BRUSHES,40,1090
  TITLE_ERASERS,41,1107
  TITLE_STAMPS,42,1124
  TITLE_SHAPES,43,1140
  TITLE_LETTERS,44,1156
  TITLE_MAGIC,45,1173
  NUM_TITLES46,1188
const char *const title_names[title_names52,1226

src/tp_magic_api.h,1165
#define TP_MAGIC_API_H2,23
#define gettext_noop(8,129
#define min(16,345
#define max(21,483
#define min(27,627
#define max(28,670
#define clamp(35,860
#define SPECIAL_MIRROR	42,1061
#define SPECIAL_FLIP	46,1190
#define MODE_PAINT 51,1314
#define MODE_FULLSCREEN 52,1386
#define MAX_MODES 53,1471
typedef struct magic_api_t 55,1492
  char * tp_version;57,1599
  char * data_directory;61,1718
  void (*update_progress_bar)update_progress_bar64,1811
  void (*special_notify)special_notify67,1920
  float (*sRGB_to_linear)sRGB_to_linear70,1999
  Uint8 (*linear_to_sRGB)linear_to_sRGB73,2081
  int (*in_circle)in_circle78,2302
  Uint32 (*getpixel)getpixel85,2693
  void (*putpixel)putpixel92,3100
  void (*playsound)playsound98,3392
  void (*stopsound)stopsound101,3510
  void (*line)line108,3865
  int (*button_down)button_down111,4062
  void (*rgbtohsv)rgbtohsv114,4134
  void (*hsvtorgb)hsvtorgb117,4246
  int canvas_w;120,4359
  int canvas_h;121,4375
  SDL_Surface * (*scale)scale127,4642
  Uint8 (*touched)touched134,5046
} magic_api;135,5076
#define TP_MAGIC_API_VERSION 143,5332
#define ATTRIBUTE_UNUSED 146,5398

src/get_fname.h,64
#define GET_FNAME_H26,868
  DIR_SAVE,32,953
  DIR_DATA33,965

src/pixels.h,25
#define PIXELS_H31,1019

magic/src/confetti.c,895
#define CONFETTI_BRUSH_SIZE 7,105
#define CONFETTI_QUANTITY 8,168
struct confetti_rgb10,246
	Uint8 r,12,268
	Uint8 r, g,12,268
	Uint8 r, g, b;12,268
struct confetti_rgb confetti_colors;15,288
Mix_Chunk * confetti_snd;17,389
Uint32 confetti_api_version(26,611
void confetti_set_color(31,682
int confetti_init(38,873
int confetti_get_tool_count(48,1077
SDL_Surface * confetti_get_icon(53,1139
char * confetti_get_name(63,1346
char * confetti_get_description(65,1445
int confetti_requires_colors(67,1577
void confetti_release(69,1649
void confetti_shutdown(76,1815
inline char confetti_get_greater(82,1913
inline char confetti_get_lesser(84,2037
Uint32 confetti_get_new_color(88,2188
static void confetti_circle(109,2903
void confetti_click(126,3414
void confetti_drag(163,4559
void confetti_switchin(175,4892
void confetti_switchout(179,4980
int confetti_modes(183,5069

magic/src/toothpaste.c,1242
#define gettext_noop(43,1328
double pi;46,1372
static Uint8 toothpaste_r,47,1383
static Uint8 toothpaste_r, toothpaste_g,47,1383
static Uint8 toothpaste_r, toothpaste_g, toothpaste_b;47,1383
static const int toothpaste_RADIUS 48,1438
double* toothpaste_weights 49,1479
	TOOL_toothpaste,52,1522
	toothpaste_NUM_TOOLS53,1540
static Mix_Chunk * toothpaste_snd_effect[toothpaste_snd_effect56,1566
const char * toothpaste_snd_filenames[toothpaste_snd_filenames58,1631
const char * toothpaste_icon_filenames[toothpaste_icon_filenames61,1718
const char * toothpaste_names[toothpaste_names64,1806
const char * toothpaste_descs[toothpaste_descs67,1895
Uint32 toothpaste_api_version(71,2029
int toothpaste_init(74,2101
int toothpaste_get_tool_count(103,2970
SDL_Surface * toothpaste_get_icon(108,3072
char * toothpaste_get_name(115,3327
char * toothpaste_get_description(120,3484
static void do_toothpaste(125,3635
void toothpaste_drag(150,4435
void toothpaste_click(166,4894
void toothpaste_release(174,5166
void toothpaste_shutdown(181,5349
void toothpaste_set_color(197,5690
int toothpaste_requires_colors(205,5840
void toothpaste_switchin(211,5917
void toothpaste_switchout(215,6007
int toothpaste_modes(219,6098

magic/src/glasstile.c,745
static Mix_Chunk * glasstile_snd;39,1196
Uint32 glasstile_api_version(41,1231
static int * * glasstile_hit;43,1301
static int glasstile_hit_xsize;44,1331
static int glasstile_hit_ysize;45,1363
int glasstile_init(49,1419
int glasstile_get_tool_count(64,1707
SDL_Surface * glasstile_get_icon(70,1790
char * glasstile_get_name(81,2029
char * glasstile_get_description(87,2173
static void do_glasstile(97,2488
#define GT_SIZE 110,2792
void glasstile_drag(188,4911
void glasstile_click(224,5878
void glasstile_release(263,7004
void glasstile_shutdown(270,7186
void glasstile_set_color(289,7532
int glasstile_requires_colors(294,7621
void glasstile_switchin(299,7696
void glasstile_switchout(303,7785
int glasstile_modes(307,7875

magic/src/realrainbow.c,1212
Mix_Chunk * realrainbow_snd;23,431
int realrainbow_x1,24,460
int realrainbow_x1, realrainbow_y1,24,460
int realrainbow_x1, realrainbow_y1, realrainbow_x2,24,460
int realrainbow_x1, realrainbow_y1, realrainbow_x2, realrainbow_y2;24,460
SDL_Rect realrainbow_rect;25,528
SDL_Surface * realrainbow_colors[realrainbow_colors26,555
Uint8 realrainbow_blendr,27,592
Uint8 realrainbow_blendr, realrainbow_blendg,27,592
Uint8 realrainbow_blendr, realrainbow_blendg, realrainbow_blendb,27,592
Uint8 realrainbow_blendr, realrainbow_blendg, realrainbow_blendb, realrainbow_blenda;27,592
Uint32 realrainbow_api_version(38,1059
int realrainbow_init(43,1133
int realrainbow_get_tool_count(64,1746
SDL_Surface * realrainbow_get_icon(69,1812
char * realrainbow_get_name(83,2172
char * realrainbow_get_description(91,2361
int realrainbow_modes(96,2587
int realrainbow_requires_colors(101,2664
void realrainbow_shutdown(106,2742
void realrainbow_set_color(116,3019
void realrainbow_click(120,3095
void realrainbow_drag(134,3459
void realrainbow_release(172,4514
void realrainbow_switchin(212,5611
void realrainbow_switchout(216,5702
void realrainbow_arc(221,5795
static void realrainbow_linecb(339,8215

magic/src/shift.c,603
static int shift_x,40,1182
static int shift_x, shift_y;40,1182
static Mix_Chunk * shift_snd;41,1211
Uint32 shift_api_version(69,2370
int shift_init(73,2459
int shift_get_tool_count(85,2681
SDL_Surface * shift_get_icon(91,2777
char * shift_get_name(102,3042
char * shift_get_description(108,3211
void shift_drag(115,3442
static void shift_doit(125,3723
void shift_click(287,6439
void shift_release(298,6737
void shift_shutdown(308,7004
void shift_set_color(315,7154
int shift_requires_colors(321,7314
void shift_switchin(326,7419
void shift_switchout(330,7504
int shift_modes(334,7590

magic/src/mosaic.c,1425
#define gettext_noop(45,1394
static const int mosaic_AMOUNT=53,1793
static const int mosaic_RADIUS 54,1830
static const double mosaic_SHARPEN 55,1867
static int randnoise;56,1909
Uint8 * mosaic_blured;57,1931
	TOOL_MOSAIC,59,1961
	mosaic_NUM_TOOLS60,1975
static Mix_Chunk * mosaic_snd_effect[mosaic_snd_effect63,1997
static SDL_Surface * canvas_noise;64,2053
static SDL_Surface * canvas_blur;65,2088
static SDL_Surface * canvas_sharp;66,2122
const char * mosaic_snd_filenames[mosaic_snd_filenames68,2158
const char * mosaic_icon_filenames[mosaic_icon_filenames71,2245
const char * mosaic_names[mosaic_names74,2321
const char * mosaic_descs[mosaic_descs77,2398
Uint32 mosaic_api_version(82,2623
int mosaic_init(85,2704
int mosaic_get_tool_count(98,2983
SDL_Surface * mosaic_get_icon(103,3077
char * mosaic_get_name(110,3324
char * mosaic_get_description(115,3473
static int mosaic_grey(120,3656
static void do_mosaic_full(125,3778
void mosaic_paint(166,4899
void mosaic_drag(196,5932
void mosaic_click(210,6489
void mosaic_release(231,7099
void mosaic_shutdown(238,7278
void mosaic_set_color(250,7503
int mosaic_requires_colors(255,7589
static void mosaic_noise_pixel(261,7684
static void mosaic_blur_pixel(276,8176
static void mosaic_sharpen_pixel(308,9134
void mosaic_switchin(350,10447
void mosaic_switchout(400,12085
int mosaic_modes(408,12294
void reset_mosaic_blured(413,12382

magic/src/smudge.c,673
static Mix_Chunk * smudge_snd;40,1205
static Uint8 smudge_r,41,1236
static Uint8 smudge_r, smudge_g,41,1236
static Uint8 smudge_r, smudge_g, smudge_b;41,1236
int smudge_init(45,1303
Uint32 smudge_api_version(56,1501
int smudge_get_tool_count(59,1595
SDL_Surface * smudge_get_icon(65,1675
char * smudge_get_name(80,2054
char * smudge_get_description(89,2287
static void do_smudge(99,2619
void smudge_drag(153,4626
void smudge_click(171,5201
void smudge_release(179,5463
void smudge_shutdown(186,5642
void smudge_set_color(193,5778
int smudge_requires_colors(201,5912
void smudge_switchin(209,6047
void smudge_switchout(213,6133
int smudge_modes(217,6220

magic/src/calligraphy.c,1248
  float x,41,1220
  float x, y;41,1220
} Point2D;42,1234
static Mix_Chunk * calligraphy_snd;44,1246
static Point2D calligraphy_control_points[calligraphy_control_points45,1282
static int calligraphy_r,46,1328
static int calligraphy_r, calligraphy_g,46,1328
static int calligraphy_r, calligraphy_g, calligraphy_b;46,1328
static int calligraphy_old_thick;47,1384
static Uint32 calligraphy_last_time;48,1418
static SDL_Surface * calligraphy_brush,49,1455
static SDL_Surface * calligraphy_brush, * calligraphy_colored_brush;49,1455
int calligraphy_init(59,1779
Uint32 calligraphy_api_version(87,2369
int calligraphy_get_tool_count(90,2459
SDL_Surface * calligraphy_get_icon(96,2543
char * calligraphy_get_name(106,2784
char * calligraphy_get_description(112,2930
void calligraphy_drag(119,3110
void calligraphy_click(255,7061
void calligraphy_release(273,7605
void calligraphy_shutdown(280,7770
void calligraphy_set_color(291,8070
int calligraphy_requires_colors(349,9765
static Point2D calligraphy_PointOnCubicBezier(368,10194
static void calligraphy_ComputeBezier(404,11132
static float calligraphy_dist(415,11398
void calligraphy_switchin(423,11558
void calligraphy_switchout(427,11649
int calligraphy_modes(431,11741

magic/src/fold.c,1376
#define FOLD_LEN 11,261
int right_arm_x,13,282
int right_arm_x, right_arm_y,13,282
int right_arm_x, right_arm_y, left_arm_x,13,282
int right_arm_x, right_arm_y, left_arm_x, left_arm_y;13,282
int fold_ox,14,336
int fold_ox, fold_oy;14,336
int fold_x,15,358
int fold_x, fold_y;15,358
Uint8 fold_shadow_value;16,378
Uint8 corner;17,403
Mix_Chunk * fold_snd;18,417
Uint8 fold_r,19,439
Uint8 fold_r, fold_g,19,439
Uint8 fold_r, fold_g, fold_b;19,439
Uint32 fold_color;20,469
SDL_Surface * fold_surface_src,21,488
SDL_Surface * fold_surface_src, * fold_surface_dst;21,488
Uint32 fold_api_version(46,1584
void fold_set_color(52,1652
int fold_init(59,1806
int fold_get_tool_count(69,1999
SDL_Surface * fold_get_icon(74,2057
char * fold_get_name(84,2256
char * fold_get_description(86,2340
int fold_requires_colors(88,2516
static void fold_shadow(91,2630
void fold_draw(102,3058
SDL_Surface * rotate(182,6597
  void translate_coords(228,7836
void translate_xy(259,8509
void fold_release(278,8841
void fold_shutdown(335,10335
inline Uint8 fold_what_corner(344,10508
static void fold_print_line(359,10718
static void fold_print_dark_line(365,11002
static void fold_erase(372,11311
void fold_click(379,11554
void fold_preview(408,12152
void fold_drag(466,14180
void fold_switchin(476,14529
void fold_switchout(480,14613
int fold_modes(484,14698

magic/src/kalidescope.c,911
static Mix_Chunk * kalidescope_snd;38,1182
static Uint8 kalidescope_r,39,1218
static Uint8 kalidescope_r, kalidescope_g,39,1218
static Uint8 kalidescope_r, kalidescope_g, kalidescope_b;39,1218
Uint32 kalidescope_api_version(42,1278
  KAL_UD,45,1357
  KAL_LR,46,1367
  KAL_BOTH,47,1377
  KAL_COUNT48,1389
char * kal_icon_names[kal_icon_names51,1405
int kalidescope_init(59,1545
int kalidescope_get_tool_count(70,1759
SDL_Surface * kalidescope_get_icon(76,1852
char * kalidescope_get_name(87,2105
char * kalidescope_get_description(99,2456
static void do_kalidescope(112,3049
void kalidescope_drag(148,4010
void kalidescope_click(163,4439
void kalidescope_release(171,4713
void kalidescope_shutdown(179,4917
void kalidescope_set_color(186,5068
int kalidescope_requires_colors(194,5222
void kalidescope_switchin(199,5299
void kalidescope_switchout(203,5390
int kalidescope_modes(207,5482

magic/src/puzzle.c,759
#define RATIO 35,1109
static Mix_Chunk * puzzle_snd;43,1324
static int puzzle_gcd=44,1355
static int puzzle_rect_q=45,1439
static int rects_w,46,1554
static int rects_w, rects_h;46,1554
SDL_Surface * canvas_backup;47,1583
Uint32 puzzle_api_version(49,1613
int puzzle_init(51,1680
int puzzle_get_tool_count(62,1878
SDL_Surface * puzzle_get_icon(67,1938
char * puzzle_get_name(77,2139
char * puzzle_get_description(83,2238
void puzzle_release(90,2507
void puzzle_shutdown(97,2704
void puzzle_set_color(103,2804
int puzzle_requires_colors(107,2875
int gcd(112,2947
void puzzle_switchin(118,3043
void puzzle_switchout(126,3468
int puzzle_modes(132,3613
static void puzzle_draw(137,3685
void puzzle_drag(195,4812
void puzzle_click(212,5438

magic/src/waves.c,512
static Mix_Chunk * waves_snd[waves_snd37,1216
Uint32 waves_api_version(40,1251
int waves_init(44,1340
int waves_get_tool_count(61,1695
SDL_Surface * waves_get_icon(67,1773
char * waves_get_name(78,2103
char * waves_get_description(85,2298
void waves_drag(93,2792
void waves_click(152,3949
void waves_release(161,4257
void waves_shutdown(168,4435
void waves_set_color(177,4635
int waves_requires_colors(182,4720
void waves_switchin(187,4791
void waves_switchout(191,4876
int waves_modes(195,4962

magic/src/fill.c,667
static Mix_Chunk * fill_snd;42,1305
static Uint8 fill_r,43,1334
static Uint8 fill_r, fill_g,43,1334
static Uint8 fill_r, fill_g, fill_b;43,1334
int fill_init(54,1652
Uint32 fill_api_version(65,1844
int fill_get_tool_count(68,1936
SDL_Surface * fill_get_icon(74,2014
char * fill_get_name(85,2243
char * fill_get_description(91,2376
void fill_drag(99,2565
void fill_click(106,2769
void fill_release(120,3216
void fill_shutdown(126,3371
void fill_set_color(132,3475
int fill_requires_colors(140,3601
static int colors_close(146,3672
static void do_flood_fill(180,4410
void fill_switchin(249,5932
void fill_switchout(253,6016
int fill_modes(257,6101

magic/src/tint.c,1167
#define gettext_noop(46,1480
	TOOL_TINT,50,1531
	TOOL_THRESHOLD,51,1543
	tint_NUM_TOOLS52,1560
static Uint8 tint_r,54,1579
static Uint8 tint_r, tint_g,54,1579
static Uint8 tint_r, tint_g, tint_b;54,1579
static int tint_min 55,1616
static int tint_max 56,1647
static const int tint_RADIUS 58,1673
static Mix_Chunk * tint_snd_effect[tint_snd_effect60,1708
const char * tint_snd_filenames[tint_snd_filenames62,1761
const char * tint_icon_filenames[tint_icon_filenames66,1855
const char * tint_names[tint_names70,1945
const char * tint_descs[tint_descs74,2109
Uint32 tint_api_version(81,2538
int tint_init(84,2617
int tint_get_tool_count(95,2886
SDL_Surface * tint_get_icon(100,2976
char * tint_get_name(107,3219
char * tint_get_description(112,3364
static int tint_grey(117,3543
static void do_tint_pixel(121,3627
static void do_tint_full(150,4460
static void do_tint_brush(162,4729
void tint_drag(180,5216
void tint_click(198,5841
void tint_release(214,6351
void tint_shutdown(221,6528
void tint_set_color(233,6745
int tint_requires_colors(241,6871
void tint_switchin(246,6941
void tint_switchout(267,7372
int tint_modes(271,7457

magic/src/perspective.c,3283
#define gettext_noop(46,1360
static const int perspective_AMOUNT=91,3023
static const int perspective_RADIUS 92,3065
static const double perspective_SHARPEN 93,3107
Uint8 perspective_r,94,3154
Uint8 perspective_r, perspective_g,94,3154
Uint8 perspective_r, perspective_g, perspective_b;94,3154
int corner;95,3205
int dash;96,3217
int click_x,98,3228
int click_x, click_y;98,3228
int new_w,99,3250
int new_w, new_h,99,3250
int new_w, new_h, old_h,99,3250
int new_w, new_h, old_h, sound_h;99,3250
int perspective_average_r,101,3285
int perspective_average_r, perspective_average_g,101,3285
int perspective_average_r, perspective_average_g, perspective_average_b,101,3285
int perspective_average_r, perspective_average_g, perspective_average_b, perspective_average_count;101,3285
Uint32 pixel_average,102,3385
Uint32 pixel_average, black,102,3385
Uint32 pixel_average, black, white;102,3385
int otop_left_x,104,3422
int otop_left_x, otop_left_y,104,3422
int otop_left_x, otop_left_y, otop_right_x,104,3422
int otop_left_x, otop_left_y, otop_right_x, otop_right_y;104,3422
int obottom_right_x,105,3480
int obottom_right_x, obottom_right_y,105,3480
int obottom_right_x, obottom_right_y, obottom_left_x,105,3480
int obottom_right_x, obottom_right_y, obottom_left_x, obottom_left_y;105,3480
int top_left_x,107,3551
int top_left_x, top_left_y,107,3551
int top_left_x, top_left_y, top_right_x,107,3551
int top_left_x, top_left_y, top_right_x, top_right_y;107,3551
int bottom_right_x,108,3605
int bottom_right_x, bottom_right_y,108,3605
int bottom_right_x, bottom_right_y, bottom_left_x,108,3605
int bottom_right_x, bottom_right_y, bottom_left_x, bottom_left_y;108,3605
float top_advc_x,110,3672
float top_advc_x, right_advc_x,110,3672
float top_advc_x, right_advc_x, bottom_advc_x,110,3672
float top_advc_x, right_advc_x, bottom_advc_x, left_advc_x;110,3672
float top_advc_y,111,3732
float top_advc_y, right_advc_y,111,3732
float top_advc_y, right_advc_y, bottom_advc_y,111,3732
float top_advc_y, right_advc_y, bottom_advc_y, left_advc_y;111,3732
  TOOL_PERSPECTIVE,115,3801
  TOOL_ZOOM,116,3821
  perspective_NUM_TOOLS117,3834
  TOP_LEFT,121,3869
  TOP_RIGHT,122,3881
  BOTTOM_RIGHT,123,3894
  BOTTOM_LEFT124,3910
static SDL_Surface * canvas_back;129,4028
static Mix_Chunk * perspective_snd_effect[perspective_snd_effect131,4063
const char * perspective_snd_filenames[perspective_snd_filenames133,4134
const char * perspective_icon_filenames[perspective_icon_filenames139,4265
const char * perspective_names[perspective_names144,4371
const char * perspective_descs[perspective_descs150,4489
Uint32 perspective_api_version(159,4734
int perspective_init(162,4820
int perspective_get_tool_count(172,5117
SDL_Surface * perspective_get_icon(177,5238
char * perspective_get_name(184,5495
char * perspective_get_description(189,5669
void perspective_drag(195,5870
void perspective_click(305,9088
void perspective_release(351,9811
void perspective_preview(422,11697
void perspective_shutdown(475,13535
void perspective_set_color(487,13812
int perspective_requires_colors(495,13983
void perspective_switchin(500,14094
void perspective_switchout(531,15126
int perspective_modes(536,15318
void perspective_line(541,15429

magic/src/cartoon.c,599
static Mix_Chunk * cartoon_snd;41,1208
#define OUTLINE_THRESH 43,1241
int cartoon_init(47,1291
Uint32 cartoon_api_version(58,1492
int cartoon_get_tool_count(61,1587
SDL_Surface * cartoon_get_icon(67,1668
char * cartoon_get_name(78,1903
char * cartoon_get_description(84,2042
static void do_cartoon(92,2239
void cartoon_drag(176,4600
void cartoon_click(194,5178
void cartoon_release(202,5444
void cartoon_shutdown(209,5624
void cartoon_set_color(216,5763
int cartoon_requires_colors(221,5850
void cartoon_switchin(226,5923
void cartoon_switchout(230,6010
int cartoon_modes(234,6098

magic/src/fade_darken.c,753
  TOOL_FADE,37,1173
  TOOL_DARKEN,38,1186
  NUM_TOOLS39,1201
static Mix_Chunk * snd_effects[snd_effects42,1217
int fade_darken_init(73,2562
Uint32 fade_darken_api_version(88,2913
int fade_darken_get_tool_count(91,3004
SDL_Surface * fade_darken_get_icon(97,3113
char * fade_darken_get_name(116,3520
char * fade_darken_get_description(127,3801
static void do_fade_darken(147,4468
static void do_fade_darken_paint(173,5101
void fade_darken_drag(194,5615
void fade_darken_click(219,6438
void fade_darken_release(243,7030
void fade_darken_shutdown(251,7336
void fade_darken_set_color(260,7554
int fade_darken_requires_colors(266,7727
void fade_darken_switchin(271,7838
void fade_darken_switchout(275,7929
int fade_darken_modes(279,8021

magic/src/blur.c,908
	TOOL_blur,42,1292
	blur_NUM_TOOLS43,1304
static const int blur_RADIUS 46,1324
static Mix_Chunk * blur_snd_effect[blur_snd_effect48,1360
const char *blur_snd_filenames[blur_snd_filenames50,1413
const char * blur_icon_filenames[blur_icon_filenames53,1481
const char * blur_names[blur_names56,1551
const char * blur_descs[blur_descs59,1622
Uint32 blur_api_version(64,1799
int blur_init(67,1878
int blur_get_tool_count(79,2148
SDL_Surface * blur_get_icon(84,2238
char * blur_get_name(91,2481
char * blur_get_description(96,2626
static void do_blur_pixel(101,2785
static void do_blur_full(135,3788
static void do_blur_brush(149,4087
void blur_drag(167,4572
void blur_click(185,5197
void blur_release(201,5709
void blur_shutdown(208,5886
void blur_set_color(220,6103
int blur_requires_colors(225,6187
void blur_switchin(230,6257
void blur_switchout(234,6341
int blur_modes(238,6426

magic/src/rainbow.c,733
#define NUM_RAINBOW_COLORS 38,1169
static const int rainbow_hexes[rainbow_hexes40,1200
static int rainbow_color;66,1642
static Uint32 rainbow_rgb;67,1668
static Mix_Chunk * rainbow_snd;68,1695
int rainbow_init(71,1745
Uint32 rainbow_api_version(85,1968
int rainbow_get_tool_count(88,2063
SDL_Surface * rainbow_get_icon(94,2144
char * rainbow_get_name(105,2379
char * rainbow_get_description(111,2518
static void rainbow_linecb(119,2683
void rainbow_drag(139,3118
void rainbow_click(163,3922
void rainbow_release(171,4160
void rainbow_shutdown(179,4335
void rainbow_set_color(186,4474
int rainbow_requires_colors(191,4561
void rainbow_switchin(196,4634
void rainbow_switchout(200,4721
int rainbow_modes(204,4809

magic/src/tornado.c,1794
enum { SIDE_LEFT,43,1315
enum { SIDE_LEFT, SIDE_RIGHT 43,1315
enum { LEAFSIDE_RIGHT_DOWN,44,1347
       LEAFSIDE_LEFT_DOWN,45,1375
       LEAFSIDE_RIGHT_UP,46,1402
       LEAFSIDE_LEFT_UP 47,1428
static Mix_Chunk /* * tornado_click_snd, */ * tornado_release_snd;49,1456
static Uint8 tornado_r,50,1523
static Uint8 tornado_r, tornado_g,50,1523
static Uint8 tornado_r, tornado_g, tornado_b;50,1523
static int tornado_min_x,51,1569
static int tornado_min_x, tornado_max_x,51,1569
static int tornado_min_x, tornado_max_x, tornado_bottom_x,51,1569
static int tornado_min_x, tornado_max_x, tornado_bottom_x, tornado_bottom_y;51,1569
static int tornado_side_first;52,1646
static int tornado_side_decided;53,1677
static SDL_Surface * tornado_base,54,1710
static SDL_Surface * tornado_base, * tornado_cloud,54,1710
  * tornado_cloud_colorized;55,1762
  static int top_w;56,1791
  float x,62,1863
  float x, y;62,1863
} Point2D;63,1877
Uint32 tornado_api_version(78,2628
int tornado_init(82,2719
int tornado_get_tool_count(108,3373
SDL_Surface * tornado_get_icon(114,3454
char * tornado_get_name(125,3689
char * tornado_get_description(131,3828
static void tornado_predrag(137,4024
void tornado_drag(171,4790
void tornado_click(198,5491
void tornado_release(218,6006
static void tornado_drawtornado(258,6888
static void tornado_drawbase(271,7239
static Uint32 tornado_mess(281,7489
static void tornado_drawstalk(293,7854
void tornado_shutdown(399,10771
void tornado_set_color(418,11218
int tornado_requires_colors(428,11388
static Point2D tornado_PointOnCubicBezier(448,11814
static void tornado_ComputeBezier(483,12792
static void tornado_colorize_cloud(495,13053
void tornado_switchin(541,14417
void tornado_switchout(545,14504
int tornado_modes(550,14612

magic/src/string.c,1657
unsigned int img_w,5,73
unsigned int img_w, img_h;5,73
static Uint8 string_r,6,100
static Uint8 string_r, string_g,6,100
static Uint8 string_r, string_g, string_b;6,100
static int string_ox,7,146
static int string_ox, string_oy;7,146
static int string_vertex_x,8,179
static int string_vertex_x, string_vertex_y,8,179
static int string_vertex_x, string_vertex_y, string_vertex_done,8,179
static int string_vertex_x, string_vertex_y, string_vertex_done, string_vertex_distance;8,179
static SDL_Surface * canvas_backup;9,268
enum string_tools{string_tools10,304
  STRING_TOOL_FULL_BY_OFFSET,11,323
  STRING_TOOL_TRIANGLE,12,353
  STRING_TOOL_ANGLE,13,377
  STRING_NUMTOOLS}STRING_NUMTOOLS14,398
Mix_Chunk * string_snd[string_snd16,419
Uint32 string_api_version(71,2927
int string_modes(76,2996
void string_set_color(81,3116
int string_get_tool_count(90,3256
SDL_Surface * string_get_icon(95,3354
char * string_get_name(115,3943
char * string_get_description(130,4338
int string_requires_colors(144,4918
void string_release(146,5035
int string_init(166,5662
void string_shutdown(185,6225
void string_switchin(200,6483
void string_switchout(206,6896
void string_callback(215,7209
void string_click(223,7505
static void string_draw_full_by_offset(236,7888
void scale_xcoord(306,9315
void scale_ycoord(312,9470
void scale_coords(318,9625
void compute_middle(326,9764
void string_draw_triangle_preview(332,10019
void string_draw_angle_preview(365,11442
void string_draw_angle(401,12783
void string_draw_triangle(430,14223
void string_draw_wrapper(446,14720
void string_set_vertex(458,15295
void string_drag(473,15659

magic/src/light.c,704
static Mix_Chunk * light1_snd,41,1201
static Mix_Chunk * light1_snd, * light2_snd;41,1201
static float light_h,42,1246
static float light_h, light_s,42,1246
static float light_h, light_s, light_v;42,1246
Uint32 light_api_version(45,1288
int light_init(49,1377
int light_get_tool_count(65,1727
SDL_Surface * light_get_icon(71,1806
char * light_get_name(82,2037
char * light_get_description(88,2172
static void do_light(95,2354
void light_drag(156,3721
void light_click(174,4290
void light_release(182,4552
void light_shutdown(190,4788
void light_set_color(199,4980
int light_requires_colors(205,5121
void light_switchin(210,5192
void light_switchout(214,5277
int light_modes(218,5363

magic/src/rain.c,977
#define gettext_noop(43,1307
static const int rain_SIZE 48,1444
static const int rain_AMOUNT 49,1477
	TOOL_rain,52,1521
	rain_NUM_TOOLS53,1533
static Mix_Chunk * rain_snd_effect[rain_snd_effect56,1553
const char * rain_snd_filenames[rain_snd_filenames58,1606
const char * rain_icon_filenames[rain_icon_filenames61,1675
const char * rain_names[rain_names64,1745
const char * rain_descs[rain_descs67,1816
Uint32 rain_api_version(73,2002
static int rain_inRainShape(76,2139
int rain_init(83,2299
int rain_get_tool_count(96,2585
SDL_Surface * rain_get_icon(101,2675
char * rain_get_name(108,2918
char * rain_get_description(113,3063
static void do_rain_drop(118,3210
static void rain_linecb(140,4111
void rain_drag(156,4574
void rain_click(171,5087
void rain_release(201,5897
void rain_shutdown(208,6074
void rain_set_color(220,6291
int rain_requires_colors(225,6375
void rain_switchin(231,6446
void rain_switchout(235,6530
int rain_modes(239,6615

magic/src/fisheye.c,599
Mix_Chunk * fisheye_snd;34,1092
int last_x,35,1117
int last_x, last_y;35,1117
Uint32 fisheye_api_version(43,1331
void fisheye_set_color(48,1401
int fisheye_init(53,1474
int fisheye_get_tool_count(63,1675
SDL_Surface * fisheye_get_icon(68,1736
char * fisheye_get_name(78,1941
char * fisheye_get_description(80,2058
int fisheye_requires_colors(82,2222
void fisheye_release(84,2293
void fisheye_shutdown(91,2458
void fisheye_draw(96,2546
void fisheye_drag(216,6003
void fisheye_click(228,6417
void fisheye_switchin(237,6734
void fisheye_switchout(242,6824
int fisheye_modes(247,6914

magic/src/metalpaint.c,859
static Mix_Chunk * metalpaint_snd;38,1178
static Uint8 metalpaint_r,39,1213
static Uint8 metalpaint_r, metalpaint_g,39,1213
static Uint8 metalpaint_r, metalpaint_g, metalpaint_b;39,1213
Uint32 metalpaint_api_version(42,1270
int metalpaint_init(46,1364
int metalpaint_get_tool_count(58,1601
SDL_Surface * metalpaint_get_icon(64,1685
char * metalpaint_get_name(75,1926
char * metalpaint_get_description(81,2072
#define METALPAINT_CYCLE 86,2241
static int metalpaint_gradient[metalpaint_gradient90,2317
static void do_metalpaint(99,2559
void metalpaint_drag(123,3144
void metalpaint_click(141,3727
void metalpaint_release(149,3999
void metalpaint_shutdown(156,4182
void metalpaint_set_color(163,4330
int metalpaint_requires_colors(171,4525
void metalpaint_switchin(176,4601
void metalpaint_switchout(180,4691
int metalpaint_modes(184,4782

magic/src/distortion.c,629
static Mix_Chunk * snd_effect;46,1455
Uint32 distortion_api_version(69,2194
int distortion_init(77,2287
int distortion_get_tool_count(95,2559
SDL_Surface * distortion_get_icon(103,2640
char * distortion_get_name(119,2953
char * distortion_get_description(127,3101
int distortion_requires_colors(134,3311
void distortion_shutdown(142,3402
void distortion_click(153,3618
void distortion_drag(163,3897
void distortion_release(189,4560
void distortion_set_color(196,4726
static void distortion_line_callback(203,4830
void distortion_switchin(229,5514
void distortion_switchout(233,5604
int distortion_modes(237,5695

magic/src/mosaic_shaped.c,2397
#define gettext_noop(45,1428
static const int mosaic_shaped_AMOUNT=93,3441
static const int mosaic_shaped_RADIUS 94,3485
static const double mosaic_shaped_SHARPEN 95,3529
Uint8 * mosaic_shaped_counted;96,3578
Uint8 * mosaic_shaped_done;97,3609
Uint8 mosaic_shaped_r,98,3637
Uint8 mosaic_shaped_r, mosaic_shaped_g,98,3637
Uint8 mosaic_shaped_r, mosaic_shaped_g, mosaic_shaped_b;98,3637
int mosaic_shaped_average_r,100,3695
int mosaic_shaped_average_r, mosaic_shaped_average_g,100,3695
int mosaic_shaped_average_r, mosaic_shaped_average_g, mosaic_shaped_average_b,100,3695
int mosaic_shaped_average_r, mosaic_shaped_average_g, mosaic_shaped_average_b, mosaic_shaped_average_count;100,3695
Uint32 pixel_average,101,3803
Uint32 pixel_average, black,101,3803
Uint32 pixel_average, black, white;101,3803
        TOOL_SQUARE,104,3847
	TOOL_HEX,105,3868
	TOOL_IRREGULAR,106,3879
	mosaic_shaped_NUM_TOOLS107,3896
static Mix_Chunk * mosaic_shaped_snd_effect[mosaic_shaped_snd_effect110,3925
static SDL_Surface * canvas_shaped;111,3995
static SDL_Surface * canvas_back;112,4031
static SDL_Surface * mosaic_shaped_pattern;113,4065
const char * mosaic_shaped_snd_filenames[mosaic_shaped_snd_filenames115,4110
const char * mosaic_shaped_icon_filenames[mosaic_shaped_icon_filenames121,4306
const char * mosaic_shaped_pattern_filenames[mosaic_shaped_pattern_filenames127,4471
const char * mosaic_shaped_names[mosaic_shaped_names133,4663
const char * mosaic_shaped_descs[mosaic_shaped_descs140,4833
Uint32 mosaic_shaped_api_version(151,5428
int mosaic_shaped_init(154,5516
int mosaic_shaped_get_tool_count(165,5852
SDL_Surface * mosaic_shaped_get_icon(170,5977
char * mosaic_shaped_get_name(177,6238
char * mosaic_shaped_get_description(182,6418
static int mosaic_shaped_grey(187,6632
static void do_mosaic_shaped_full(192,6761
static void mosaic_shaped_fill(230,8171
void mosaic_shaped_drag(256,9308
void mosaic_shaped_click(270,9929
void mosaic_shaped_release(292,10519
void mosaic_shaped_shutdown(299,10824
void mosaic_shaped_set_color(311,11094
int mosaic_shaped_requires_colors(319,11273
static void mosaic_shaped_sharpen_pixel(325,11404
void mosaic_shaped_switchin(365,12555
void mosaic_shaped_switchout(472,16155
int mosaic_shaped_modes(480,16457
void reset_counter(485,16586
int scan_fill(496,16772
void fill_square(559,18692
void deform(569,18953

magic/src/tv.c,514
int RADIUS 33,1069
Mix_Chunk * tv_snd;35,1087
Uint32 tv_api_version(39,1138
void tv_set_color(44,1203
int tv_init(49,1323
int tv_get_tool_count(59,1509
SDL_Surface * tv_get_icon(64,1565
char * tv_get_name(74,1760
char * tv_get_description(76,1847
int tv_requires_colors(86,2163
void tv_release(88,2229
void tv_shutdown(94,2386
void tv_paint_tv(99,2477
void tv_do_tv(113,2924
void tv_drag(122,3244
void tv_click(135,3703
void tv_switchin(157,4221
void tv_switchout(162,4306
int tv_modes(167,4391

magic/src/snow.c,1019
#define gettext_noop(43,1323
static const int snow_AMOUNT 46,1367
static const int snow_RADIUS 47,1403
static SDL_Surface * snow_flake1;48,1437
static SDL_Surface * snow_flake2;49,1471
  TOOL_SNOWBALL,52,1513
  TOOL_SNOWFLAKE,53,1530
	snow_NUM_TOOLS54,1548
static Mix_Chunk * snow_snd_effect[snow_snd_effect57,1568
const char * snow_snd_filenames[snow_snd_filenames59,1621
const char * snow_icon_filenames[snow_icon_filenames63,1713
const char * snow_names[snow_names67,1806
const char * snow_descs[snow_descs71,1912
Uint32 snow_api_version(76,2081
int snow_init(79,2160
int snow_get_tool_count(105,2829
SDL_Surface * snow_get_icon(110,2919
char * snow_get_name(117,3162
char * snow_get_description(122,3307
static void do_snow(127,3436
void snow_drag(160,4474
void snow_click(167,4675
void snow_release(180,5080
void snow_shutdown(187,5257
void snow_set_color(205,5606
int snow_requires_colors(210,5690
void snow_switchin(215,5760
void snow_switchout(218,5843
int snow_modes(222,5928

magic/src/blocks_chalk_drip.c,831
  TOOL_BLOCKS,39,1219
  TOOL_CHALK,40,1234
  TOOL_DRIP,41,1248
  NUM_TOOLS42,1261
static Mix_Chunk * snd_effect[snd_effect48,1298
int blocks_chalk_drip_init(76,2581
Uint32 blocks_chalk_drip_api_version(95,3048
int blocks_chalk_drip_get_tool_count(99,3154
SDL_Surface * blocks_chalk_drip_get_icon(105,3270
char * blocks_chalk_drip_get_name(129,3816
char * blocks_chalk_drip_get_description(142,4176
static void blocks_chalk_drip_linecb(159,4710
void blocks_chalk_drip_drag(270,7337
void blocks_chalk_drip_click(288,7945
void blocks_chalk_drip_release(296,8231
void blocks_chalk_drip_shutdown(303,8540
void blocks_chalk_drip_set_color(313,8774
int blocks_chalk_drip_requires_colors(319,8943
void blocks_chalk_drip_switchin(324,9060
void blocks_chalk_drip_switchout(328,9157
int blocks_chalk_drip_modes(332,9255

magic/src/rails.c,2064
#define SEG_NONE 5,73
#define SEG_LEFT 7,93
#define SEG_RIGHT 8,112
#define SEG_TOP 9,132
#define SEG_BOTTOM 10,150
#define SEG_LEFT_RIGHT 12,172
#define SEG_TOP_BOTTOM 13,218
#define SEG_RIGHT_TOP 14,264
#define SEG_RIGHT_BOTTOM 15,308
#define SEG_LEFT_TOP 16,358
#define SEG_LEFT_BOTTOM 17,400
#define SEG_LEFT_RIGHT_TOP 18,448
#define SEG_LEFT_RIGHT_BOTTOM 19,508
#define SEG_LEFT_TOP_BOTTOM 20,574
#define SEG_RIGHT_TOP_BOTTOM 21,636
#define SEG_LEFT_RIGHT_TOP_BOTTOM 22,700
Mix_Chunk * rails_snd;24,781
unsigned int img_w,25,804
unsigned int img_w, img_h;25,804
unsigned int rails_segments_x,26,831
unsigned int rails_segments_x, rails_segments_y;26,831
static Uint8 * rails_status_of_segments;28,1031
static char ** rails_images;29,1138
static unsigned int rails_segment_modified;30,1205
static unsigned int rails_segment_modified_last 31,1290
static unsigned int rails_segment_to_add 32,1380
static SDL_Rect modification_rect;33,1492
static SDL_Surface * canvas_backup;34,1527
SDL_Surface * rails_one,41,1754
SDL_Surface * rails_one, * rails_three,41,1754
SDL_Surface * rails_one, * rails_three, * rails_four,41,1754
SDL_Surface * rails_one, * rails_three, * rails_four, * rails_corner;41,1754
Uint32 rails_api_version(43,1825
int rails_modes(48,1893
void rails_set_color(53,1964
int rails_init(57,2034
int rails_get_tool_count(86,3061
SDL_Surface * rails_get_icon(91,3120
char * rails_get_name(101,3321
char * rails_get_description(103,3414
int rails_requires_colors(105,3576
void rails_release(107,3644
void rails_shutdown(113,3804
void rails_switchin(132,4219
void rails_switchout(146,4931
static int rails_math_ceil(157,5186
inline unsigned int rails_get_segment(167,5307
inline void rails_extract_coords_from_segment(179,5663
static void rails_flip(185,5968
static void rails_flip_flop(195,6220
static void rails_rotate 204,6475
void rails_click(225,6987
static Uint8 rails_select_image(233,7262
static void rails_draw(341,10249
static void rails_draw_wrapper(441,13078
void rails_drag(466,13897

magic/src/flower.c,1796
enum { SIDE_LEFT,39,1186
enum { SIDE_LEFT, SIDE_RIGHT 39,1186
enum { LEAFSIDE_RIGHT_DOWN,40,1218
       LEAFSIDE_LEFT_DOWN,41,1246
       LEAFSIDE_RIGHT_UP,42,1273
       LEAFSIDE_LEFT_UP 43,1299
static Mix_Chunk * flower_click_snd,45,1327
static Mix_Chunk * flower_click_snd, * flower_release_snd;45,1327
static Uint8 flower_r,46,1386
static Uint8 flower_r, flower_g,46,1386
static Uint8 flower_r, flower_g, flower_b;46,1386
static int flower_min_x,47,1429
static int flower_min_x, flower_max_x,47,1429
static int flower_min_x, flower_max_x, flower_bottom_x,47,1429
static int flower_min_x, flower_max_x, flower_bottom_x, flower_bottom_y;47,1429
static int flower_side_first;48,1502
static int flower_side_decided;49,1532
static SDL_Surface * flower_base,50,1564
static SDL_Surface * flower_base, * flower_leaf,50,1564
static SDL_Surface * flower_base, * flower_leaf, * flower_petals,50,1564
  * flower_petals_colorized;51,1630
  float x,57,1711
  float x, y;57,1711
} Point2D;58,1725
Uint32 flower_api_version(73,2386
int flower_init(77,2476
int flower_get_tool_count(105,3246
SDL_Surface * flower_get_icon(111,3326
char * flower_get_name(122,3559
char * flower_get_description(128,3696
static void flower_predrag(134,3902
void flower_drag(168,4648
void flower_click(195,5335
void flower_release(213,5831
static void flower_drawflower(253,6687
static void flower_drawbase(263,6937
static void flower_drawstalk(273,7160
void flower_shutdown(446,11184
void flower_set_color(465,11679
int flower_requires_colors(475,11845
static Point2D flower_PointOnCubicBezier(495,12270
static void flower_ComputeBezier(530,13247
static void flower_colorize_petals(542,13506
void flower_switchin(597,15085
void flower_switchout(601,15171
int flower_modes(605,15258

magic/src/ripples.c,695
static Mix_Chunk * ripples_snd;40,1187
static int ripples_z,42,1220
static int ripples_z, ripples_brite;42,1220
Uint32 ripples_api_version(44,1258
#define deg_cos(46,1326
#define deg_sin(47,1369
int ripples_init(50,1435
int ripples_get_tool_count(62,1663
SDL_Surface * ripples_get_icon(68,1744
char * ripples_get_name(79,1979
char * ripples_get_description(85,2118
void ripples_drag(91,2305
static void ripples_linecb(97,2467
void ripples_click(116,3023
void ripples_release(156,4011
void ripples_shutdown(163,4191
void ripples_set_color(170,4330
int ripples_requires_colors(175,4417
void ripples_switchin(180,4490
void ripples_switchout(184,4577
int ripples_modes(188,4665

magic/src/mirror_flip.c,672
  TOOL_MIRROR,39,1203
  TOOL_FLIP,40,1218
  NUM_TOOLS41,1231
static Mix_Chunk * snd_effects[snd_effects44,1247
int mirror_flip_init(48,1314
Uint32 mirror_flip_api_version(63,1679
int mirror_flip_get_tool_count(66,1778
SDL_Surface * mirror_flip_get_icon(72,1871
char * mirror_flip_get_name(91,2279
char * mirror_flip_get_description(102,2541
void mirror_flip_drag(115,2907
void mirror_flip_release(122,3075
void mirror_flip_click(130,3277
void mirror_flip_shutdown(182,4271
void mirror_flip_set_color(191,4473
int mirror_flip_requires_colors(196,4573
void mirror_flip_switchin(201,4650
void mirror_flip_switchout(205,4741
int mirror_flip_modes(209,4833

magic/src/jigsaw.c,2719
#define SEG_NONE 5,73
#define SEG_LEFT 7,93
#define SEG_RIGHT 8,112
#define SEG_TOP 9,132
#define SEG_BOTTOM 10,150
#define SEG_LEFT_RIGHT 12,172
#define SEG_TOP_BOTTOM 13,218
#define SEG_RIGHT_TOP 14,264
#define SEG_RIGHT_BOTTOM 15,308
#define SEG_LEFT_TOP 16,358
#define SEG_LEFT_BOTTOM 17,400
#define SEG_LEFT_RIGHT_TOP 18,448
#define SEG_LEFT_RIGHT_BOTTOM 19,508
#define SEG_LEFT_TOP_BOTTOM 20,574
#define SEG_RIGHT_TOP_BOTTOM 21,636
#define SEG_LEFT_RIGHT_TOP_BOTTOM 22,700
Mix_Chunk * jigsaw_snd;24,781
unsigned int img_w,25,805
unsigned int img_w, img_h;25,805
unsigned int jigsaw_segments_x,26,832
unsigned int jigsaw_segments_x, jigsaw_segments_y;26,832
    int xoffset,27,915
    int xoffset, yoffset;27,915
static Uint8 * jigsaw_status_of_segments;30,1062
static char ** jigsaw_images;31,1170
static unsigned int jigsaw_segment_modified;32,1238
static unsigned int jigsaw_segment_modified_last 33,1324
static unsigned int jigsaw_segment_to_add 34,1415
static SDL_Rect modification_rect;35,1528
static SDL_Surface * canvas_backup;36,1563
static SDL_Surface * j_surf;38,1600
typedef struct piece41,1631
    Uint8 top;43,1654
    Uint8 left;44,1669
    Uint8 bottom;45,1685
    Uint8 right;46,1703
} piece;47,1720
SDL_Surface **flat,flat49,1730
SDL_Surface **flat, **vert;vert49,1730
SDL_Surface *hline,hline50,1758
SDL_Surface *hline, *vline;vline50,1758
static unsigned int pieces_x,52,1787
static unsigned int pieces_x, pieces_y;52,1787
static struct piece *pieces;pieces54,1856
SDL_Surface * jigsaw_one,64,2084
SDL_Surface * jigsaw_one, * jigsaw_three,64,2084
SDL_Surface * jigsaw_one, * jigsaw_three, * jigsaw_four,64,2084
SDL_Surface * jigsaw_one, * jigsaw_three, * jigsaw_four, * jigsaw_corner;64,2084
Uint32 jigsaw_api_version(80,2507
int jigsaw_modes(85,2576
void jigsaw_set_color(90,2648
SDL_Surface * vflip(94,2719
SDL_Surface * turn(113,3340
int jigsaw_init(131,3911
int jigsaw_get_tool_count(183,5334
SDL_Surface * jigsaw_get_icon(188,5394
char * jigsaw_get_name(198,5597
char * jigsaw_get_description(200,5692
int jigsaw_requires_colors(202,5856
void jigsaw_release(204,5925
void jigsaw_shutdown(210,6086
void jigsaw_switchin(229,6512
void jigsaw_switchout(341,9447
static int jigsaw_math_ceil(352,9706
inline unsigned int jigsaw_get_segment(362,9828
inline void jigsaw_extract_coords_from_segment(374,10188
static void jigsaw_flip(380,10496
static void jigsaw_flip_flop(390,10749
static void jigsaw_rotate 399,11005
void jigsaw_click(420,11518
static Uint8 jigsaw_select_image(428,11796
static void jigsaw_draw(536,14815
static void jigsaw_draw_wrapper(636,17680
void jigsaw_drag(661,18519
void draw_piece(691,19597

magic/src/grass.c,720
static Mix_Chunk * grass_snd;40,1244
static Uint8 grass_r,41,1274
static Uint8 grass_r, grass_g,41,1274
static Uint8 grass_r, grass_g, grass_b;41,1274
static SDL_Surface * img_grass;42,1314
int grass_init(55,1540
Uint32 grass_api_version(70,1861
int grass_get_tool_count(73,1954
SDL_Surface * grass_get_icon(79,2033
char * grass_get_name(90,2264
char * grass_get_description(96,2399
void grass_drag(103,2592
void grass_click(122,3155
void grass_release(129,3384
void grass_shutdown(136,3562
void grass_set_color(143,3695
int grass_requires_colors(151,3825
static void do_grass(156,3896
static int log2int(233,6060
void grass_switchin(247,6197
void grass_switchout(251,6282
int grass_modes(255,6368

magic/src/sharpen.c,1190
#define gettext_noop(42,1311
	TOOL_TRACE,48,1382
	TOOL_SHARPEN,49,1395
	TOOL_SILHOUETTE,50,1410
	sharpen_NUM_TOOLS51,1428
static const int THRESHOLD 54,1451
static const int sharpen_RADIUS 56,1485
static const double SHARPEN 58,1524
static Mix_Chunk * sharpen_snd_effect[sharpen_snd_effect60,1560
const char * sharpen_snd_filenames[sharpen_snd_filenames62,1619
const char * sharpen_icon_filenames[sharpen_icon_filenames67,1731
const char * sharpen_names[sharpen_names72,1844
const char * sharpen_descs[sharpen_descs77,1978
Uint32 sharpen_api_version(86,2504
int sharpen_init(90,2595
int sharpen_get_tool_count(104,2907
SDL_Surface * sharpen_get_icon(110,3004
char * sharpen_get_name(117,3253
char * sharpen_get_description(122,3404
static int sharpen_grey(127,3589
static void do_sharpen_pixel(132,3694
static void do_sharpen_full(187,5556
static void do_sharpen_brush(201,5861
void sharpen_drag(219,6367
void sharpen_click(237,7013
void sharpen_release(253,7537
void sharpen_shutdown(260,7717
void sharpen_set_color(272,7946
int sharpen_requires_colors(277,8033
void sharpen_switchin(282,8106
void sharpen_switchout(286,8193
int sharpen_modes(290,8281

magic/src/noise.c,1010
#define gettext_noop(43,1300
static const int noise_AMOUNT 46,1344
static const int noise_RADIUS 47,1383
	TOOL_NOISE,50,1427
	noise_NUM_TOOLS51,1440
static Mix_Chunk * noise_snd_effect[noise_snd_effect54,1461
const char * noise_snd_filenames[noise_snd_filenames56,1516
const char * noise_icon_filenames[noise_icon_filenames59,1588
const char * noise_names[noise_names62,1661
const char * noise_descs[noise_descs65,1735
Uint32 noise_api_version(70,1938
int noise_init(73,2018
int noise_get_tool_count(86,2310
SDL_Surface * noise_get_icon(91,2402
char * noise_get_name(98,2647
char * noise_get_description(103,2794
static void do_noise_pixel(108,2955
static void do_noise_full(126,3497
static void do_noise_brush(140,3798
void noise_drag(158,4290
void noise_click(176,4925
void noise_release(192,5439
void noise_shutdown(199,5617
void noise_set_color(211,5838
int noise_requires_colors(216,5923
void noise_switchin(221,5994
void noise_switchout(225,6079
int noise_modes(229,6165

magic/src/rosette.c,801
#define ROSETTE_R 36,1212
static int xmid,38,1253
static int xmid, ymid;38,1253
struct rosette_rgb40,1277
	Uint8 r,42,1298
	Uint8 r, g,42,1298
	Uint8 r, g, b;42,1298
struct rosette_rgb rosette_colors;45,1318
Mix_Chunk * rosette_snd;47,1354
Uint32 rosette_api_version(55,1573
void rosette_set_color(60,1643
int rosette_init(67,1830
int rosette_get_tool_count(77,2031
SDL_Surface * rosette_get_icon(82,2092
char * rosette_get_name(93,2395
char * rosette_get_description(95,2548
int rosette_requires_colors(103,2840
void rosette_release(105,2911
void rosette_shutdown(110,3072
void rosette_circle(115,3173
void rosette_draw(130,3668
void rosette_drag(175,4783
void rosette_click(187,5178
void rosette_switchin(194,5410
void rosette_switchout(200,5536
int rosette_modes(205,5626

magic/src/alien.c,1148
#define gettext_noop(43,1346
static const double alien_ANGLE[alien_ANGLE46,1390
static const double alien_FREQUENCY[alien_FREQUENCY47,1435
static const int alien_RADIUS 48,1484
	TOOL_alien,51,1528
	alien_NUM_TOOLS52,1541
static Mix_Chunk * alien_snd_effect[alien_snd_effect55,1562
const char * alien_snd_filenames[alien_snd_filenames57,1617
const char * alien_icon_filenames[alien_icon_filenames60,1689
const char * alien_names[alien_names63,1762
const char * alien_descs[alien_descs66,1842
Uint32 alien_api_version(71,2061
int alien_init(74,2141
int alien_get_tool_count(88,2496
SDL_Surface * alien_get_icon(93,2588
char * alien_get_name(100,2833
char * alien_get_description(105,2980
static void do_alien_pixel(110,3141
static void do_alien_full(128,3722
static void do_alien_brush(142,4023
void alien_drag(160,4515
int use_sound 177,5119
Mix_Chunk * magic_loadsound(179,5139
void alien_click(190,5328
void alien_release(208,5907
void alien_shutdown(215,6085
void alien_set_color(229,6374
int alien_requires_colors(234,6459
void alien_switchin(239,6530
void alien_switchout(245,6683
int alien_modes(251,6838

magic/src/foam.c,1094
static Mix_Chunk * foam_snd;39,1180
static Uint8 foam_r,40,1209
static Uint8 foam_r, foam_g,40,1209
static Uint8 foam_r, foam_g, foam_b;40,1209
static int foam_mask_w,41,1246
static int foam_mask_w, foam_mask_h;41,1246
static int * foam_mask,42,1283
static int * foam_mask, * foam_mask_tmp;42,1283
static SDL_Surface * foam_7,43,1324
static SDL_Surface * foam_7, * foam_5,43,1324
static SDL_Surface * foam_7, * foam_5, * foam_3,43,1324
static SDL_Surface * foam_7, * foam_5, * foam_3, * foam_1;43,1324
#define FOAM_PROP 50,1537
#define FOAM_RADIUS 51,1557
Uint32 foam_api_version(53,1580
int foam_init(57,1668
int foam_get_tool_count(85,2553
SDL_Surface * foam_get_icon(91,2631
char * foam_get_name(102,2860
char * foam_get_description(108,2993
static void do_foam(115,3180
void foam_drag(143,3821
void foam_click(164,4420
static int foam_mask_test(185,5001
void foam_release(208,5391
void foam_shutdown(388,12217
void foam_set_color(407,12600
int foam_requires_colors(415,12726
void foam_switchin(420,12844
void foam_switchout(424,12928
int foam_modes(428,13013

magic/src/pattern.c,1265
  TOOL_SQUARE,26,636
  TOOL_HEXAGON,27,667
  NUM_TOOLS 28,699
const char * snd_filenames[snd_filenames34,800
const char * icon_filenames[icon_filenames39,894
const char * names[names52,1248
const char * descs[descs60,1398
Mix_Chunk * snd_effect[snd_effect69,1717
Uint8 pattern_r,72,1830
Uint8 pattern_r, pattern_g,72,1830
Uint8 pattern_r, pattern_g, pattern_b;72,1830
int square_spacement,75,1906
int square_spacement, hexagon_radius;75,1906
Uint32 yellow,78,1963
Uint32 yellow, red,78,1963
Uint32 yellow, red, grey,78,1963
Uint32 yellow, red, grey, light_grey;78,1963
SDL_Surface * canvas_clean;81,2074
SDL_Surface * map_surf;84,2145
Uint32 pattern_api_version(159,4438
int pattern_init(179,5046
int pattern_get_tool_count(217,6058
SDL_Surface * pattern_get_icon(228,6262
char * pattern_get_name(257,7114
char * pattern_get_description(291,8055
int pattern_requires_colors(321,8894
int pattern_modes(331,9083
void pattern_shutdown(347,9525
void pattern_click(364,9906
void pattern_drag(384,10597
void pattern_release(451,12812
void pattern_set_color(486,13917
void pattern_line_callback(513,14729
void pattern_switchin(602,17749
void draw_help_lines(633,18961
void redraw_screen(668,19638
void pattern_switchout(696,20574

magic/src/blind.c,1083
int BLIND_RADIUS 33,1045
int BLIND_OPAQUE 34,1068
int BLIND_THICKNESS 35,1091
int blind_side;36,1117
static Uint8 blind_r,38,1173
static Uint8 blind_r, blind_g,38,1173
static Uint8 blind_r, blind_g, blind_b,38,1173
static Uint8 blind_r, blind_g, blind_b, blind_light;38,1173
enum blind_sides{blind_sides39,1226
  BLIND_SIDE_TOP,40,1244
  BLIND_SIDE_LEFT,41,1262
  BLIND_SIDE_BOTTOM,42,1281
  BLIND_SIDE_RIGHT}BLIND_SIDE_RIGHT43,1302
enum blind_tools{blind_tools45,1324
  BLIND_TOOL_BLIND,46,1342
  BLIND_NUMTOOLS}BLIND_NUMTOOLS47,1362
Mix_Chunk * blind_snd;49,1382
Uint32 blind_api_version(53,1436
void blind_set_color(58,1504
int blind_init(65,1671
int blind_get_tool_count(75,1865
SDL_Surface * blind_get_icon(80,1937
char * blind_get_name(90,2138
char * blind_get_description(95,2234
int blind_requires_colors(100,2464
void blind_release(105,2535
void blind_shutdown(111,2695
void blind_paint_blind(118,2797
void blind_drag(136,3459
void blind_click(243,6582
void blind_switchin(264,7159
void blind_switchout(269,7247
int blind_modes(274,7335

magic/src/bricks.c,782
  TOOL_LARGEBRICKS,42,1263
  TOOL_SMALLBRICKS,43,1283
  NUM_TOOLS44,1303
static Mix_Chunk * brick_snd;50,1340
static Uint8 bricks_r,51,1370
static Uint8 bricks_r, bricks_g,51,1370
static Uint8 bricks_r, bricks_g, bricks_b;51,1370
int bricks_init(61,1575
Uint32 bricks_api_version(72,1771
int bricks_get_tool_count(75,1865
SDL_Surface * bricks_get_icon(81,1953
char * bricks_get_name(100,2378
char * bricks_get_description(108,2564
static void do_bricks(120,2892
void bricks_drag(209,5424
void bricks_click(227,6014
void bricks_release(234,6245
void bricks_shutdown(241,6424
void bricks_set_color(248,6558
int bricks_requires_colors(256,6692
static void do_brick(261,6764
void bricks_switchin(297,7742
void bricks_switchout(301,7828
int bricks_modes(305,7915

magic/src/negative.c,584
static Mix_Chunk * negative_snd;36,1155
int negative_init(39,1211
Uint32 negative_api_version(51,1415
int negative_get_tool_count(54,1502
SDL_Surface * negative_get_icon(60,1583
char * negative_get_name(70,1818
char * negative_get_description(76,1958
static void do_negative(89,2442
void negative_drag(116,3088
void negative_click(141,3823
void negative_release(174,4580
void negative_shutdown(181,4742
void negative_set_color(188,4871
int negative_requires_colors(193,4967
void negative_switchin(198,5041
void negative_switchout(202,5129
int negative_modes(206,5218

magic/src/emboss.c,550
static Mix_Chunk * emboss_snd;38,1166
Uint32 emboss_api_version(41,1199
int emboss_init(45,1289
int emboss_get_tool_count(57,1514
SDL_Surface * emboss_get_icon(63,1594
char * emboss_get_name(74,1827
char * emboss_get_description(80,1964
static void do_emboss(87,2139
void emboss_drag(131,3223
void emboss_click(150,3815
void emboss_release(158,4079
void emboss_shutdown(165,4258
void emboss_set_color(172,4394
int emboss_requires_colors(177,4480
void emboss_switchin(182,4552
void emboss_switchout(186,4638
int emboss_modes(190,4725

magic/docs/tp_magic_example.c,920
  TOOL_ONE,26,567
  TOOL_TWO,27,595
  NUM_TOOLS 28,623
const char * snd_filenames[snd_filenames34,724
const char * icon_filenames[icon_filenames39,795
const char * names[names52,1126
const char * descs[descs60,1265
Mix_Chunk * snd_effect[snd_effect71,1482
Uint8 example_r,74,1595
Uint8 example_r, example_g,74,1595
Uint8 example_r, example_g, example_b;74,1595
Uint32 example_api_version(106,2650
int example_init(126,3258
int example_get_tool_count(164,4270
SDL_Surface * example_get_icon(175,4474
char * example_get_name(204,5326
char * example_get_description(238,6267
int example_requires_colors(268,7106
int example_modes(278,7295
void example_shutdown(294,7737
void example_click(311,8118
void example_drag(328,8685
void example_release(380,10476
void example_set_color(399,11110
void example_line_callback(426,11922
void example_switchin(503,14743
void example_switchout(523,15462

testkevent.c,84
    int main(8,172
    void PrintKeyInfo(62,1621
    void PrintModifiers(95,2979

tj.c,19
    int main(3,43

t.c,84
    int main(8,155
    void PrintKeyInfo(62,1604
    void PrintModifiers(95,2962

dummy.c,100
#define UNUSED 7,69
static TYPE x UNUSED;10,126
static int exists UNUSED 14,170
int main(17,215

frezee_test.c,17
int main 12,173

src/parse.gperf,723
const char PARSE_YES[PARSE_YES17,
const char PARSE_NO[PARSE_NO18,
const char PARSE_CLOBBER[PARSE_CLOBBER19,
struct cfg21,
  const char *name;name23,
  void (*val)val24,
#define MULTIVAL 27,
#define POS 28,
#define NEG 29,
#define BOOLMASK 30,
#define BITS 31,
#define FLAGMASK 32,
#define MULTI(34,
#define POSBOOL(35,
#define NEGBOOL(36,
#define IMM(37,
static void imm_version(39,
static void imm_verbose_version(44,
static void imm_usage(49,
static void imm_help(54,
static void imm_copying(60,
#define TOTAL_KEYWORDS 92,
#define MIN_WORD_LENGTH 93,
#define MAX_WORD_LENGTH 94,
#define MIN_HASH_VALUE 95,
#define MAX_HASH_VALUE 96,
hash 107,
in_word_set 135,
void parse_one_option(158,

src/parse.gperf,723
const char PARSE_YES[PARSE_YES17,
const char PARSE_NO[PARSE_NO18,
const char PARSE_CLOBBER[PARSE_CLOBBER19,
struct cfg21,
  const char *name;name23,
  void (*val)val24,
#define MULTIVAL 27,
#define POS 28,
#define NEG 29,
#define BOOLMASK 30,
#define BITS 31,
#define FLAGMASK 32,
#define MULTI(34,
#define POSBOOL(35,
#define NEGBOOL(36,
#define IMM(37,
static void imm_version(39,
static void imm_verbose_version(44,
static void imm_usage(49,
static void imm_help(54,
static void imm_copying(60,
#define TOTAL_KEYWORDS 92,
#define MIN_WORD_LENGTH 93,
#define MAX_WORD_LENGTH 94,
#define MIN_HASH_VALUE 95,
#define MAX_HASH_VALUE 96,
hash 107,
in_word_set 135,
void parse_one_option(158,

test.c,0

obj/parse.c,0

obj/parse_step1.c,0

src/debug.h,0

macosx/speech.h,0
